
SSD_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002fd4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00002fd4  00003048  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000025ec  00000000  00000000  00003050  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000cd6  00000000  00000000  0000563c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00006312  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00006452  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000065c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000820b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000090f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00009ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000a004  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000a291  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000aa5f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ed       	ldi	r30, 0xD4	; 212
      68:	ff e2       	ldi	r31, 0x2F	; 47
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 5d 17 	call	0x2eba	; 0x2eba <main>
      7a:	0c 94 e8 17 	jmp	0x2fd0	; 0x2fd0 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 b1 17 	jmp	0x2f62	; 0x2f62 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 cd 17 	jmp	0x2f9a	; 0x2f9a <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 bd 17 	jmp	0x2f7a	; 0x2f7a <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 d9 17 	jmp	0x2fb2	; 0x2fb2 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 bd 17 	jmp	0x2f7a	; 0x2f7a <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 d9 17 	jmp	0x2fb2	; 0x2fb2 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 b1 17 	jmp	0x2f62	; 0x2f62 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 cd 17 	jmp	0x2f9a	; 0x2f9a <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 bd 17 	jmp	0x2f7a	; 0x2f7a <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 d9 17 	jmp	0x2fb2	; 0x2fb2 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 bd 17 	jmp	0x2f7a	; 0x2f7a <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 d9 17 	jmp	0x2fb2	; 0x2fb2 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 bd 17 	jmp	0x2f7a	; 0x2f7a <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 d9 17 	jmp	0x2fb2	; 0x2fb2 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 c1 17 	jmp	0x2f82	; 0x2f82 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 dd 17 	jmp	0x2fba	; 0x2fba <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <M_DIO_void_setPinDir>:
#include "DIO_pvt.h"
#include "DIO_config.h"
#include "DIO_int.h"

void M_DIO_void_setPinDir(u8 Port, PIN_T Pin, Dir_T DIRECTION)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	2d 97       	sbiw	r28, 0x0d	; 13
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	6a 83       	std	Y+2, r22	; 0x02
     b4e:	4b 83       	std	Y+3, r20	; 0x03
	switch (Port)
     b50:	89 81       	ldd	r24, Y+1	; 0x01
     b52:	28 2f       	mov	r18, r24
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	3d 87       	std	Y+13, r19	; 0x0d
     b58:	2c 87       	std	Y+12, r18	; 0x0c
     b5a:	8c 85       	ldd	r24, Y+12	; 0x0c
     b5c:	9d 85       	ldd	r25, Y+13	; 0x0d
     b5e:	82 30       	cpi	r24, 0x02	; 2
     b60:	91 05       	cpc	r25, r1
     b62:	09 f4       	brne	.+2      	; 0xb66 <M_DIO_void_setPinDir+0x30>
     b64:	50 c0       	rjmp	.+160    	; 0xc06 <M_DIO_void_setPinDir+0xd0>
     b66:	2c 85       	ldd	r18, Y+12	; 0x0c
     b68:	3d 85       	ldd	r19, Y+13	; 0x0d
     b6a:	23 30       	cpi	r18, 0x03	; 3
     b6c:	31 05       	cpc	r19, r1
     b6e:	34 f4       	brge	.+12     	; 0xb7c <M_DIO_void_setPinDir+0x46>
     b70:	8c 85       	ldd	r24, Y+12	; 0x0c
     b72:	9d 85       	ldd	r25, Y+13	; 0x0d
     b74:	81 30       	cpi	r24, 0x01	; 1
     b76:	91 05       	cpc	r25, r1
     b78:	71 f0       	breq	.+28     	; 0xb96 <M_DIO_void_setPinDir+0x60>
     b7a:	ec c0       	rjmp	.+472    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
     b7c:	2c 85       	ldd	r18, Y+12	; 0x0c
     b7e:	3d 85       	ldd	r19, Y+13	; 0x0d
     b80:	23 30       	cpi	r18, 0x03	; 3
     b82:	31 05       	cpc	r19, r1
     b84:	09 f4       	brne	.+2      	; 0xb88 <M_DIO_void_setPinDir+0x52>
     b86:	77 c0       	rjmp	.+238    	; 0xc76 <M_DIO_void_setPinDir+0x140>
     b88:	8c 85       	ldd	r24, Y+12	; 0x0c
     b8a:	9d 85       	ldd	r25, Y+13	; 0x0d
     b8c:	84 30       	cpi	r24, 0x04	; 4
     b8e:	91 05       	cpc	r25, r1
     b90:	09 f4       	brne	.+2      	; 0xb94 <M_DIO_void_setPinDir+0x5e>
     b92:	a9 c0       	rjmp	.+338    	; 0xce6 <M_DIO_void_setPinDir+0x1b0>
     b94:	df c0       	rjmp	.+446    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
	{
	case PORTA_ID :
		switch (DIRECTION)
     b96:	8b 81       	ldd	r24, Y+3	; 0x03
     b98:	28 2f       	mov	r18, r24
     b9a:	30 e0       	ldi	r19, 0x00	; 0
     b9c:	3b 87       	std	Y+11, r19	; 0x0b
     b9e:	2a 87       	std	Y+10, r18	; 0x0a
     ba0:	8a 85       	ldd	r24, Y+10	; 0x0a
     ba2:	9b 85       	ldd	r25, Y+11	; 0x0b
     ba4:	00 97       	sbiw	r24, 0x00	; 0
     ba6:	31 f0       	breq	.+12     	; 0xbb4 <M_DIO_void_setPinDir+0x7e>
     ba8:	2a 85       	ldd	r18, Y+10	; 0x0a
     baa:	3b 85       	ldd	r19, Y+11	; 0x0b
     bac:	21 30       	cpi	r18, 0x01	; 1
     bae:	31 05       	cpc	r19, r1
     bb0:	b1 f0       	breq	.+44     	; 0xbde <M_DIO_void_setPinDir+0xa8>
     bb2:	d0 c0       	rjmp	.+416    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
		{
		case IN:
			 CLR_BIT(DDRA,Pin);
     bb4:	aa e3       	ldi	r26, 0x3A	; 58
     bb6:	b0 e0       	ldi	r27, 0x00	; 0
     bb8:	ea e3       	ldi	r30, 0x3A	; 58
     bba:	f0 e0       	ldi	r31, 0x00	; 0
     bbc:	80 81       	ld	r24, Z
     bbe:	48 2f       	mov	r20, r24
     bc0:	8a 81       	ldd	r24, Y+2	; 0x02
     bc2:	28 2f       	mov	r18, r24
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	02 2e       	mov	r0, r18
     bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <M_DIO_void_setPinDir+0x9c>
     bce:	88 0f       	add	r24, r24
     bd0:	99 1f       	adc	r25, r25
     bd2:	0a 94       	dec	r0
     bd4:	e2 f7       	brpl	.-8      	; 0xbce <M_DIO_void_setPinDir+0x98>
     bd6:	80 95       	com	r24
     bd8:	84 23       	and	r24, r20
     bda:	8c 93       	st	X, r24
     bdc:	bb c0       	rjmp	.+374    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
			 break;
		case OUT:
			SET_BIT(DDRA,Pin);
     bde:	aa e3       	ldi	r26, 0x3A	; 58
     be0:	b0 e0       	ldi	r27, 0x00	; 0
     be2:	ea e3       	ldi	r30, 0x3A	; 58
     be4:	f0 e0       	ldi	r31, 0x00	; 0
     be6:	80 81       	ld	r24, Z
     be8:	48 2f       	mov	r20, r24
     bea:	8a 81       	ldd	r24, Y+2	; 0x02
     bec:	28 2f       	mov	r18, r24
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	02 2e       	mov	r0, r18
     bf6:	02 c0       	rjmp	.+4      	; 0xbfc <M_DIO_void_setPinDir+0xc6>
     bf8:	88 0f       	add	r24, r24
     bfa:	99 1f       	adc	r25, r25
     bfc:	0a 94       	dec	r0
     bfe:	e2 f7       	brpl	.-8      	; 0xbf8 <M_DIO_void_setPinDir+0xc2>
     c00:	84 2b       	or	r24, r20
     c02:	8c 93       	st	X, r24
     c04:	a7 c0       	rjmp	.+334    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
			break;
		}
		break;
	case PORTB_ID :
				switch (DIRECTION)
     c06:	8b 81       	ldd	r24, Y+3	; 0x03
     c08:	28 2f       	mov	r18, r24
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	39 87       	std	Y+9, r19	; 0x09
     c0e:	28 87       	std	Y+8, r18	; 0x08
     c10:	88 85       	ldd	r24, Y+8	; 0x08
     c12:	99 85       	ldd	r25, Y+9	; 0x09
     c14:	00 97       	sbiw	r24, 0x00	; 0
     c16:	31 f0       	breq	.+12     	; 0xc24 <M_DIO_void_setPinDir+0xee>
     c18:	28 85       	ldd	r18, Y+8	; 0x08
     c1a:	39 85       	ldd	r19, Y+9	; 0x09
     c1c:	21 30       	cpi	r18, 0x01	; 1
     c1e:	31 05       	cpc	r19, r1
     c20:	b1 f0       	breq	.+44     	; 0xc4e <M_DIO_void_setPinDir+0x118>
     c22:	98 c0       	rjmp	.+304    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
				{
				case IN:
					 CLR_BIT(DDRB,Pin);
     c24:	a7 e3       	ldi	r26, 0x37	; 55
     c26:	b0 e0       	ldi	r27, 0x00	; 0
     c28:	e7 e3       	ldi	r30, 0x37	; 55
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	80 81       	ld	r24, Z
     c2e:	48 2f       	mov	r20, r24
     c30:	8a 81       	ldd	r24, Y+2	; 0x02
     c32:	28 2f       	mov	r18, r24
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	02 2e       	mov	r0, r18
     c3c:	02 c0       	rjmp	.+4      	; 0xc42 <M_DIO_void_setPinDir+0x10c>
     c3e:	88 0f       	add	r24, r24
     c40:	99 1f       	adc	r25, r25
     c42:	0a 94       	dec	r0
     c44:	e2 f7       	brpl	.-8      	; 0xc3e <M_DIO_void_setPinDir+0x108>
     c46:	80 95       	com	r24
     c48:	84 23       	and	r24, r20
     c4a:	8c 93       	st	X, r24
     c4c:	83 c0       	rjmp	.+262    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
					 break;
				case OUT:
					SET_BIT(DDRB,Pin);
     c4e:	a7 e3       	ldi	r26, 0x37	; 55
     c50:	b0 e0       	ldi	r27, 0x00	; 0
     c52:	e7 e3       	ldi	r30, 0x37	; 55
     c54:	f0 e0       	ldi	r31, 0x00	; 0
     c56:	80 81       	ld	r24, Z
     c58:	48 2f       	mov	r20, r24
     c5a:	8a 81       	ldd	r24, Y+2	; 0x02
     c5c:	28 2f       	mov	r18, r24
     c5e:	30 e0       	ldi	r19, 0x00	; 0
     c60:	81 e0       	ldi	r24, 0x01	; 1
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	02 2e       	mov	r0, r18
     c66:	02 c0       	rjmp	.+4      	; 0xc6c <M_DIO_void_setPinDir+0x136>
     c68:	88 0f       	add	r24, r24
     c6a:	99 1f       	adc	r25, r25
     c6c:	0a 94       	dec	r0
     c6e:	e2 f7       	brpl	.-8      	; 0xc68 <M_DIO_void_setPinDir+0x132>
     c70:	84 2b       	or	r24, r20
     c72:	8c 93       	st	X, r24
     c74:	6f c0       	rjmp	.+222    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
					break;
				}
			break;
	case PORTC_ID:
				switch (DIRECTION)
     c76:	8b 81       	ldd	r24, Y+3	; 0x03
     c78:	28 2f       	mov	r18, r24
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	3f 83       	std	Y+7, r19	; 0x07
     c7e:	2e 83       	std	Y+6, r18	; 0x06
     c80:	8e 81       	ldd	r24, Y+6	; 0x06
     c82:	9f 81       	ldd	r25, Y+7	; 0x07
     c84:	00 97       	sbiw	r24, 0x00	; 0
     c86:	31 f0       	breq	.+12     	; 0xc94 <M_DIO_void_setPinDir+0x15e>
     c88:	2e 81       	ldd	r18, Y+6	; 0x06
     c8a:	3f 81       	ldd	r19, Y+7	; 0x07
     c8c:	21 30       	cpi	r18, 0x01	; 1
     c8e:	31 05       	cpc	r19, r1
     c90:	b1 f0       	breq	.+44     	; 0xcbe <M_DIO_void_setPinDir+0x188>
     c92:	60 c0       	rjmp	.+192    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
				{
				case IN:
						 CLR_BIT(DDRC,Pin);
     c94:	a4 e3       	ldi	r26, 0x34	; 52
     c96:	b0 e0       	ldi	r27, 0x00	; 0
     c98:	e4 e3       	ldi	r30, 0x34	; 52
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	80 81       	ld	r24, Z
     c9e:	48 2f       	mov	r20, r24
     ca0:	8a 81       	ldd	r24, Y+2	; 0x02
     ca2:	28 2f       	mov	r18, r24
     ca4:	30 e0       	ldi	r19, 0x00	; 0
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	02 2e       	mov	r0, r18
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <M_DIO_void_setPinDir+0x17c>
     cae:	88 0f       	add	r24, r24
     cb0:	99 1f       	adc	r25, r25
     cb2:	0a 94       	dec	r0
     cb4:	e2 f7       	brpl	.-8      	; 0xcae <M_DIO_void_setPinDir+0x178>
     cb6:	80 95       	com	r24
     cb8:	84 23       	and	r24, r20
     cba:	8c 93       	st	X, r24
     cbc:	4b c0       	rjmp	.+150    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
						 break;
				case OUT:
						 SET_BIT(DDRC,Pin);
     cbe:	a4 e3       	ldi	r26, 0x34	; 52
     cc0:	b0 e0       	ldi	r27, 0x00	; 0
     cc2:	e4 e3       	ldi	r30, 0x34	; 52
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	80 81       	ld	r24, Z
     cc8:	48 2f       	mov	r20, r24
     cca:	8a 81       	ldd	r24, Y+2	; 0x02
     ccc:	28 2f       	mov	r18, r24
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	02 2e       	mov	r0, r18
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <M_DIO_void_setPinDir+0x1a6>
     cd8:	88 0f       	add	r24, r24
     cda:	99 1f       	adc	r25, r25
     cdc:	0a 94       	dec	r0
     cde:	e2 f7       	brpl	.-8      	; 0xcd8 <M_DIO_void_setPinDir+0x1a2>
     ce0:	84 2b       	or	r24, r20
     ce2:	8c 93       	st	X, r24
     ce4:	37 c0       	rjmp	.+110    	; 0xd54 <M_DIO_void_setPinDir+0x21e>
						 break;
					}
				break;
	case PORTD_ID :
				 switch (DIRECTION)
     ce6:	8b 81       	ldd	r24, Y+3	; 0x03
     ce8:	28 2f       	mov	r18, r24
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	3d 83       	std	Y+5, r19	; 0x05
     cee:	2c 83       	std	Y+4, r18	; 0x04
     cf0:	8c 81       	ldd	r24, Y+4	; 0x04
     cf2:	9d 81       	ldd	r25, Y+5	; 0x05
     cf4:	00 97       	sbiw	r24, 0x00	; 0
     cf6:	31 f0       	breq	.+12     	; 0xd04 <M_DIO_void_setPinDir+0x1ce>
     cf8:	2c 81       	ldd	r18, Y+4	; 0x04
     cfa:	3d 81       	ldd	r19, Y+5	; 0x05
     cfc:	21 30       	cpi	r18, 0x01	; 1
     cfe:	31 05       	cpc	r19, r1
     d00:	b1 f0       	breq	.+44     	; 0xd2e <M_DIO_void_setPinDir+0x1f8>
     d02:	28 c0       	rjmp	.+80     	; 0xd54 <M_DIO_void_setPinDir+0x21e>
				 {
					case IN:
						 CLR_BIT(DDRD,Pin);
     d04:	a1 e3       	ldi	r26, 0x31	; 49
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	e1 e3       	ldi	r30, 0x31	; 49
     d0a:	f0 e0       	ldi	r31, 0x00	; 0
     d0c:	80 81       	ld	r24, Z
     d0e:	48 2f       	mov	r20, r24
     d10:	8a 81       	ldd	r24, Y+2	; 0x02
     d12:	28 2f       	mov	r18, r24
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	02 2e       	mov	r0, r18
     d1c:	02 c0       	rjmp	.+4      	; 0xd22 <M_DIO_void_setPinDir+0x1ec>
     d1e:	88 0f       	add	r24, r24
     d20:	99 1f       	adc	r25, r25
     d22:	0a 94       	dec	r0
     d24:	e2 f7       	brpl	.-8      	; 0xd1e <M_DIO_void_setPinDir+0x1e8>
     d26:	80 95       	com	r24
     d28:	84 23       	and	r24, r20
     d2a:	8c 93       	st	X, r24
     d2c:	13 c0       	rjmp	.+38     	; 0xd54 <M_DIO_void_setPinDir+0x21e>
						 break;
					case OUT:
						SET_BIT(DDRD,Pin);
     d2e:	a1 e3       	ldi	r26, 0x31	; 49
     d30:	b0 e0       	ldi	r27, 0x00	; 0
     d32:	e1 e3       	ldi	r30, 0x31	; 49
     d34:	f0 e0       	ldi	r31, 0x00	; 0
     d36:	80 81       	ld	r24, Z
     d38:	48 2f       	mov	r20, r24
     d3a:	8a 81       	ldd	r24, Y+2	; 0x02
     d3c:	28 2f       	mov	r18, r24
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	02 2e       	mov	r0, r18
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <M_DIO_void_setPinDir+0x216>
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	0a 94       	dec	r0
     d4e:	e2 f7       	brpl	.-8      	; 0xd48 <M_DIO_void_setPinDir+0x212>
     d50:	84 2b       	or	r24, r20
     d52:	8c 93       	st	X, r24
						 break;
				}
				break;
	}
}
     d54:	2d 96       	adiw	r28, 0x0d	; 13
     d56:	0f b6       	in	r0, 0x3f	; 63
     d58:	f8 94       	cli
     d5a:	de bf       	out	0x3e, r29	; 62
     d5c:	0f be       	out	0x3f, r0	; 63
     d5e:	cd bf       	out	0x3d, r28	; 61
     d60:	cf 91       	pop	r28
     d62:	df 91       	pop	r29
     d64:	08 95       	ret

00000d66 <M_DIO_void_setPinValue>:
void M_DIO_void_setPinValue(u8 Port, u8 Pin, VALUE_T value)
{
     d66:	df 93       	push	r29
     d68:	cf 93       	push	r28
     d6a:	cd b7       	in	r28, 0x3d	; 61
     d6c:	de b7       	in	r29, 0x3e	; 62
     d6e:	2d 97       	sbiw	r28, 0x0d	; 13
     d70:	0f b6       	in	r0, 0x3f	; 63
     d72:	f8 94       	cli
     d74:	de bf       	out	0x3e, r29	; 62
     d76:	0f be       	out	0x3f, r0	; 63
     d78:	cd bf       	out	0x3d, r28	; 61
     d7a:	89 83       	std	Y+1, r24	; 0x01
     d7c:	6a 83       	std	Y+2, r22	; 0x02
     d7e:	4b 83       	std	Y+3, r20	; 0x03
	switch (Port)
     d80:	89 81       	ldd	r24, Y+1	; 0x01
     d82:	28 2f       	mov	r18, r24
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	3d 87       	std	Y+13, r19	; 0x0d
     d88:	2c 87       	std	Y+12, r18	; 0x0c
     d8a:	8c 85       	ldd	r24, Y+12	; 0x0c
     d8c:	9d 85       	ldd	r25, Y+13	; 0x0d
     d8e:	82 30       	cpi	r24, 0x02	; 2
     d90:	91 05       	cpc	r25, r1
     d92:	09 f4       	brne	.+2      	; 0xd96 <M_DIO_void_setPinValue+0x30>
     d94:	50 c0       	rjmp	.+160    	; 0xe36 <M_DIO_void_setPinValue+0xd0>
     d96:	2c 85       	ldd	r18, Y+12	; 0x0c
     d98:	3d 85       	ldd	r19, Y+13	; 0x0d
     d9a:	23 30       	cpi	r18, 0x03	; 3
     d9c:	31 05       	cpc	r19, r1
     d9e:	34 f4       	brge	.+12     	; 0xdac <M_DIO_void_setPinValue+0x46>
     da0:	8c 85       	ldd	r24, Y+12	; 0x0c
     da2:	9d 85       	ldd	r25, Y+13	; 0x0d
     da4:	81 30       	cpi	r24, 0x01	; 1
     da6:	91 05       	cpc	r25, r1
     da8:	71 f0       	breq	.+28     	; 0xdc6 <M_DIO_void_setPinValue+0x60>
     daa:	ec c0       	rjmp	.+472    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
     dac:	2c 85       	ldd	r18, Y+12	; 0x0c
     dae:	3d 85       	ldd	r19, Y+13	; 0x0d
     db0:	23 30       	cpi	r18, 0x03	; 3
     db2:	31 05       	cpc	r19, r1
     db4:	09 f4       	brne	.+2      	; 0xdb8 <M_DIO_void_setPinValue+0x52>
     db6:	77 c0       	rjmp	.+238    	; 0xea6 <M_DIO_void_setPinValue+0x140>
     db8:	8c 85       	ldd	r24, Y+12	; 0x0c
     dba:	9d 85       	ldd	r25, Y+13	; 0x0d
     dbc:	84 30       	cpi	r24, 0x04	; 4
     dbe:	91 05       	cpc	r25, r1
     dc0:	09 f4       	brne	.+2      	; 0xdc4 <M_DIO_void_setPinValue+0x5e>
     dc2:	a9 c0       	rjmp	.+338    	; 0xf16 <M_DIO_void_setPinValue+0x1b0>
     dc4:	df c0       	rjmp	.+446    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
		{
		case PORTA_ID :
			switch (value)
     dc6:	8b 81       	ldd	r24, Y+3	; 0x03
     dc8:	28 2f       	mov	r18, r24
     dca:	30 e0       	ldi	r19, 0x00	; 0
     dcc:	3b 87       	std	Y+11, r19	; 0x0b
     dce:	2a 87       	std	Y+10, r18	; 0x0a
     dd0:	8a 85       	ldd	r24, Y+10	; 0x0a
     dd2:	9b 85       	ldd	r25, Y+11	; 0x0b
     dd4:	00 97       	sbiw	r24, 0x00	; 0
     dd6:	31 f0       	breq	.+12     	; 0xde4 <M_DIO_void_setPinValue+0x7e>
     dd8:	2a 85       	ldd	r18, Y+10	; 0x0a
     dda:	3b 85       	ldd	r19, Y+11	; 0x0b
     ddc:	21 30       	cpi	r18, 0x01	; 1
     dde:	31 05       	cpc	r19, r1
     de0:	b1 f0       	breq	.+44     	; 0xe0e <M_DIO_void_setPinValue+0xa8>
     de2:	d0 c0       	rjmp	.+416    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
			{
			case LOW:
				 CLR_BIT(PORTA_REG,Pin);
     de4:	ab e3       	ldi	r26, 0x3B	; 59
     de6:	b0 e0       	ldi	r27, 0x00	; 0
     de8:	eb e3       	ldi	r30, 0x3B	; 59
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	80 81       	ld	r24, Z
     dee:	48 2f       	mov	r20, r24
     df0:	8a 81       	ldd	r24, Y+2	; 0x02
     df2:	28 2f       	mov	r18, r24
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	02 2e       	mov	r0, r18
     dfc:	02 c0       	rjmp	.+4      	; 0xe02 <M_DIO_void_setPinValue+0x9c>
     dfe:	88 0f       	add	r24, r24
     e00:	99 1f       	adc	r25, r25
     e02:	0a 94       	dec	r0
     e04:	e2 f7       	brpl	.-8      	; 0xdfe <M_DIO_void_setPinValue+0x98>
     e06:	80 95       	com	r24
     e08:	84 23       	and	r24, r20
     e0a:	8c 93       	st	X, r24
     e0c:	bb c0       	rjmp	.+374    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
				 break;
			case HIGH:
				SET_BIT(PORTA_REG,Pin);
     e0e:	ab e3       	ldi	r26, 0x3B	; 59
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	eb e3       	ldi	r30, 0x3B	; 59
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	48 2f       	mov	r20, r24
     e1a:	8a 81       	ldd	r24, Y+2	; 0x02
     e1c:	28 2f       	mov	r18, r24
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	02 2e       	mov	r0, r18
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <M_DIO_void_setPinValue+0xc6>
     e28:	88 0f       	add	r24, r24
     e2a:	99 1f       	adc	r25, r25
     e2c:	0a 94       	dec	r0
     e2e:	e2 f7       	brpl	.-8      	; 0xe28 <M_DIO_void_setPinValue+0xc2>
     e30:	84 2b       	or	r24, r20
     e32:	8c 93       	st	X, r24
     e34:	a7 c0       	rjmp	.+334    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
				break;
		   }
			break;
		case PORTB_ID :
			switch (value)
     e36:	8b 81       	ldd	r24, Y+3	; 0x03
     e38:	28 2f       	mov	r18, r24
     e3a:	30 e0       	ldi	r19, 0x00	; 0
     e3c:	39 87       	std	Y+9, r19	; 0x09
     e3e:	28 87       	std	Y+8, r18	; 0x08
     e40:	88 85       	ldd	r24, Y+8	; 0x08
     e42:	99 85       	ldd	r25, Y+9	; 0x09
     e44:	00 97       	sbiw	r24, 0x00	; 0
     e46:	31 f0       	breq	.+12     	; 0xe54 <M_DIO_void_setPinValue+0xee>
     e48:	28 85       	ldd	r18, Y+8	; 0x08
     e4a:	39 85       	ldd	r19, Y+9	; 0x09
     e4c:	21 30       	cpi	r18, 0x01	; 1
     e4e:	31 05       	cpc	r19, r1
     e50:	b1 f0       	breq	.+44     	; 0xe7e <M_DIO_void_setPinValue+0x118>
     e52:	98 c0       	rjmp	.+304    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
			{
			case LOW:
				 CLR_BIT(PORTB_REG,Pin);
     e54:	a8 e3       	ldi	r26, 0x38	; 56
     e56:	b0 e0       	ldi	r27, 0x00	; 0
     e58:	e8 e3       	ldi	r30, 0x38	; 56
     e5a:	f0 e0       	ldi	r31, 0x00	; 0
     e5c:	80 81       	ld	r24, Z
     e5e:	48 2f       	mov	r20, r24
     e60:	8a 81       	ldd	r24, Y+2	; 0x02
     e62:	28 2f       	mov	r18, r24
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	81 e0       	ldi	r24, 0x01	; 1
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	02 2e       	mov	r0, r18
     e6c:	02 c0       	rjmp	.+4      	; 0xe72 <M_DIO_void_setPinValue+0x10c>
     e6e:	88 0f       	add	r24, r24
     e70:	99 1f       	adc	r25, r25
     e72:	0a 94       	dec	r0
     e74:	e2 f7       	brpl	.-8      	; 0xe6e <M_DIO_void_setPinValue+0x108>
     e76:	80 95       	com	r24
     e78:	84 23       	and	r24, r20
     e7a:	8c 93       	st	X, r24
     e7c:	83 c0       	rjmp	.+262    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
				 break;
			case HIGH:
				 SET_BIT(PORTB_REG,Pin);
     e7e:	a8 e3       	ldi	r26, 0x38	; 56
     e80:	b0 e0       	ldi	r27, 0x00	; 0
     e82:	e8 e3       	ldi	r30, 0x38	; 56
     e84:	f0 e0       	ldi	r31, 0x00	; 0
     e86:	80 81       	ld	r24, Z
     e88:	48 2f       	mov	r20, r24
     e8a:	8a 81       	ldd	r24, Y+2	; 0x02
     e8c:	28 2f       	mov	r18, r24
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	81 e0       	ldi	r24, 0x01	; 1
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	02 2e       	mov	r0, r18
     e96:	02 c0       	rjmp	.+4      	; 0xe9c <M_DIO_void_setPinValue+0x136>
     e98:	88 0f       	add	r24, r24
     e9a:	99 1f       	adc	r25, r25
     e9c:	0a 94       	dec	r0
     e9e:	e2 f7       	brpl	.-8      	; 0xe98 <M_DIO_void_setPinValue+0x132>
     ea0:	84 2b       	or	r24, r20
     ea2:	8c 93       	st	X, r24
     ea4:	6f c0       	rjmp	.+222    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
				 break;
			}
			break;
		case PORTC_ID:
			switch (value)
     ea6:	8b 81       	ldd	r24, Y+3	; 0x03
     ea8:	28 2f       	mov	r18, r24
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	3f 83       	std	Y+7, r19	; 0x07
     eae:	2e 83       	std	Y+6, r18	; 0x06
     eb0:	8e 81       	ldd	r24, Y+6	; 0x06
     eb2:	9f 81       	ldd	r25, Y+7	; 0x07
     eb4:	00 97       	sbiw	r24, 0x00	; 0
     eb6:	31 f0       	breq	.+12     	; 0xec4 <M_DIO_void_setPinValue+0x15e>
     eb8:	2e 81       	ldd	r18, Y+6	; 0x06
     eba:	3f 81       	ldd	r19, Y+7	; 0x07
     ebc:	21 30       	cpi	r18, 0x01	; 1
     ebe:	31 05       	cpc	r19, r1
     ec0:	b1 f0       	breq	.+44     	; 0xeee <M_DIO_void_setPinValue+0x188>
     ec2:	60 c0       	rjmp	.+192    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
			{
			case LOW:
				 CLR_BIT(PORTC_REG,Pin);
     ec4:	a5 e3       	ldi	r26, 0x35	; 53
     ec6:	b0 e0       	ldi	r27, 0x00	; 0
     ec8:	e5 e3       	ldi	r30, 0x35	; 53
     eca:	f0 e0       	ldi	r31, 0x00	; 0
     ecc:	80 81       	ld	r24, Z
     ece:	48 2f       	mov	r20, r24
     ed0:	8a 81       	ldd	r24, Y+2	; 0x02
     ed2:	28 2f       	mov	r18, r24
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	02 2e       	mov	r0, r18
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <M_DIO_void_setPinValue+0x17c>
     ede:	88 0f       	add	r24, r24
     ee0:	99 1f       	adc	r25, r25
     ee2:	0a 94       	dec	r0
     ee4:	e2 f7       	brpl	.-8      	; 0xede <M_DIO_void_setPinValue+0x178>
     ee6:	80 95       	com	r24
     ee8:	84 23       	and	r24, r20
     eea:	8c 93       	st	X, r24
     eec:	4b c0       	rjmp	.+150    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
				break;
			case HIGH:
				 SET_BIT(PORTC_REG,Pin);
     eee:	a5 e3       	ldi	r26, 0x35	; 53
     ef0:	b0 e0       	ldi	r27, 0x00	; 0
     ef2:	e5 e3       	ldi	r30, 0x35	; 53
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
     ef6:	80 81       	ld	r24, Z
     ef8:	48 2f       	mov	r20, r24
     efa:	8a 81       	ldd	r24, Y+2	; 0x02
     efc:	28 2f       	mov	r18, r24
     efe:	30 e0       	ldi	r19, 0x00	; 0
     f00:	81 e0       	ldi	r24, 0x01	; 1
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	02 2e       	mov	r0, r18
     f06:	02 c0       	rjmp	.+4      	; 0xf0c <M_DIO_void_setPinValue+0x1a6>
     f08:	88 0f       	add	r24, r24
     f0a:	99 1f       	adc	r25, r25
     f0c:	0a 94       	dec	r0
     f0e:	e2 f7       	brpl	.-8      	; 0xf08 <M_DIO_void_setPinValue+0x1a2>
     f10:	84 2b       	or	r24, r20
     f12:	8c 93       	st	X, r24
     f14:	37 c0       	rjmp	.+110    	; 0xf84 <M_DIO_void_setPinValue+0x21e>
				break;
			}
			break;
		case PORTD_ID :
			 switch (value)
     f16:	8b 81       	ldd	r24, Y+3	; 0x03
     f18:	28 2f       	mov	r18, r24
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	3d 83       	std	Y+5, r19	; 0x05
     f1e:	2c 83       	std	Y+4, r18	; 0x04
     f20:	8c 81       	ldd	r24, Y+4	; 0x04
     f22:	9d 81       	ldd	r25, Y+5	; 0x05
     f24:	00 97       	sbiw	r24, 0x00	; 0
     f26:	31 f0       	breq	.+12     	; 0xf34 <M_DIO_void_setPinValue+0x1ce>
     f28:	2c 81       	ldd	r18, Y+4	; 0x04
     f2a:	3d 81       	ldd	r19, Y+5	; 0x05
     f2c:	21 30       	cpi	r18, 0x01	; 1
     f2e:	31 05       	cpc	r19, r1
     f30:	b1 f0       	breq	.+44     	; 0xf5e <M_DIO_void_setPinValue+0x1f8>
     f32:	28 c0       	rjmp	.+80     	; 0xf84 <M_DIO_void_setPinValue+0x21e>
			 {
				case LOW:
				   CLR_BIT(PORTD_REG,Pin);
     f34:	a2 e3       	ldi	r26, 0x32	; 50
     f36:	b0 e0       	ldi	r27, 0x00	; 0
     f38:	e2 e3       	ldi	r30, 0x32	; 50
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	80 81       	ld	r24, Z
     f3e:	48 2f       	mov	r20, r24
     f40:	8a 81       	ldd	r24, Y+2	; 0x02
     f42:	28 2f       	mov	r18, r24
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	81 e0       	ldi	r24, 0x01	; 1
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	02 2e       	mov	r0, r18
     f4c:	02 c0       	rjmp	.+4      	; 0xf52 <M_DIO_void_setPinValue+0x1ec>
     f4e:	88 0f       	add	r24, r24
     f50:	99 1f       	adc	r25, r25
     f52:	0a 94       	dec	r0
     f54:	e2 f7       	brpl	.-8      	; 0xf4e <M_DIO_void_setPinValue+0x1e8>
     f56:	80 95       	com	r24
     f58:	84 23       	and	r24, r20
     f5a:	8c 93       	st	X, r24
     f5c:	13 c0       	rjmp	.+38     	; 0xf84 <M_DIO_void_setPinValue+0x21e>
					break;
				case HIGH:
					SET_BIT(PORTD_REG,Pin);
     f5e:	a2 e3       	ldi	r26, 0x32	; 50
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	e2 e3       	ldi	r30, 0x32	; 50
     f64:	f0 e0       	ldi	r31, 0x00	; 0
     f66:	80 81       	ld	r24, Z
     f68:	48 2f       	mov	r20, r24
     f6a:	8a 81       	ldd	r24, Y+2	; 0x02
     f6c:	28 2f       	mov	r18, r24
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	02 2e       	mov	r0, r18
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <M_DIO_void_setPinValue+0x216>
     f78:	88 0f       	add	r24, r24
     f7a:	99 1f       	adc	r25, r25
     f7c:	0a 94       	dec	r0
     f7e:	e2 f7       	brpl	.-8      	; 0xf78 <M_DIO_void_setPinValue+0x212>
     f80:	84 2b       	or	r24, r20
     f82:	8c 93       	st	X, r24
					break;
			 }
			 break;
		}
}
     f84:	2d 96       	adiw	r28, 0x0d	; 13
     f86:	0f b6       	in	r0, 0x3f	; 63
     f88:	f8 94       	cli
     f8a:	de bf       	out	0x3e, r29	; 62
     f8c:	0f be       	out	0x3f, r0	; 63
     f8e:	cd bf       	out	0x3d, r28	; 61
     f90:	cf 91       	pop	r28
     f92:	df 91       	pop	r29
     f94:	08 95       	ret

00000f96 <M_DIO_void_getPinValue>:
void M_DIO_void_getPinValue(u8 Port, u8 Pin, u8 *pvalue)
{
     f96:	df 93       	push	r29
     f98:	cf 93       	push	r28
     f9a:	00 d0       	rcall	.+0      	; 0xf9c <M_DIO_void_getPinValue+0x6>
     f9c:	00 d0       	rcall	.+0      	; 0xf9e <M_DIO_void_getPinValue+0x8>
     f9e:	00 d0       	rcall	.+0      	; 0xfa0 <M_DIO_void_getPinValue+0xa>
     fa0:	cd b7       	in	r28, 0x3d	; 61
     fa2:	de b7       	in	r29, 0x3e	; 62
     fa4:	89 83       	std	Y+1, r24	; 0x01
     fa6:	6a 83       	std	Y+2, r22	; 0x02
     fa8:	5c 83       	std	Y+4, r21	; 0x04
     faa:	4b 83       	std	Y+3, r20	; 0x03
	switch (Port){
     fac:	89 81       	ldd	r24, Y+1	; 0x01
     fae:	28 2f       	mov	r18, r24
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	3e 83       	std	Y+6, r19	; 0x06
     fb4:	2d 83       	std	Y+5, r18	; 0x05
     fb6:	4d 81       	ldd	r20, Y+5	; 0x05
     fb8:	5e 81       	ldd	r21, Y+6	; 0x06
     fba:	42 30       	cpi	r20, 0x02	; 2
     fbc:	51 05       	cpc	r21, r1
     fbe:	59 f1       	breq	.+86     	; 0x1016 <M_DIO_void_getPinValue+0x80>
     fc0:	8d 81       	ldd	r24, Y+5	; 0x05
     fc2:	9e 81       	ldd	r25, Y+6	; 0x06
     fc4:	83 30       	cpi	r24, 0x03	; 3
     fc6:	91 05       	cpc	r25, r1
     fc8:	34 f4       	brge	.+12     	; 0xfd6 <M_DIO_void_getPinValue+0x40>
     fca:	2d 81       	ldd	r18, Y+5	; 0x05
     fcc:	3e 81       	ldd	r19, Y+6	; 0x06
     fce:	21 30       	cpi	r18, 0x01	; 1
     fd0:	31 05       	cpc	r19, r1
     fd2:	69 f0       	breq	.+26     	; 0xfee <M_DIO_void_getPinValue+0x58>
     fd4:	5b c0       	rjmp	.+182    	; 0x108c <M_DIO_void_getPinValue+0xf6>
     fd6:	4d 81       	ldd	r20, Y+5	; 0x05
     fd8:	5e 81       	ldd	r21, Y+6	; 0x06
     fda:	43 30       	cpi	r20, 0x03	; 3
     fdc:	51 05       	cpc	r21, r1
     fde:	79 f1       	breq	.+94     	; 0x103e <M_DIO_void_getPinValue+0xa8>
     fe0:	8d 81       	ldd	r24, Y+5	; 0x05
     fe2:	9e 81       	ldd	r25, Y+6	; 0x06
     fe4:	84 30       	cpi	r24, 0x04	; 4
     fe6:	91 05       	cpc	r25, r1
     fe8:	09 f4       	brne	.+2      	; 0xfec <M_DIO_void_getPinValue+0x56>
     fea:	3d c0       	rjmp	.+122    	; 0x1066 <M_DIO_void_getPinValue+0xd0>
     fec:	4f c0       	rjmp	.+158    	; 0x108c <M_DIO_void_getPinValue+0xf6>
	case PORTA_ID:
		*pvalue = GET_BIT(PINA_REG,Pin);
     fee:	e9 e3       	ldi	r30, 0x39	; 57
     ff0:	f0 e0       	ldi	r31, 0x00	; 0
     ff2:	80 81       	ld	r24, Z
     ff4:	28 2f       	mov	r18, r24
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	8a 81       	ldd	r24, Y+2	; 0x02
     ffa:	88 2f       	mov	r24, r24
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	a9 01       	movw	r20, r18
    1000:	02 c0       	rjmp	.+4      	; 0x1006 <M_DIO_void_getPinValue+0x70>
    1002:	55 95       	asr	r21
    1004:	47 95       	ror	r20
    1006:	8a 95       	dec	r24
    1008:	e2 f7       	brpl	.-8      	; 0x1002 <M_DIO_void_getPinValue+0x6c>
    100a:	ca 01       	movw	r24, r20
    100c:	81 70       	andi	r24, 0x01	; 1
    100e:	eb 81       	ldd	r30, Y+3	; 0x03
    1010:	fc 81       	ldd	r31, Y+4	; 0x04
    1012:	80 83       	st	Z, r24
    1014:	3b c0       	rjmp	.+118    	; 0x108c <M_DIO_void_getPinValue+0xf6>
		break;
	case PORTB_ID:
		*pvalue=GET_BIT(PINB_REG,Pin);
    1016:	e6 e3       	ldi	r30, 0x36	; 54
    1018:	f0 e0       	ldi	r31, 0x00	; 0
    101a:	80 81       	ld	r24, Z
    101c:	28 2f       	mov	r18, r24
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	8a 81       	ldd	r24, Y+2	; 0x02
    1022:	88 2f       	mov	r24, r24
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	a9 01       	movw	r20, r18
    1028:	02 c0       	rjmp	.+4      	; 0x102e <M_DIO_void_getPinValue+0x98>
    102a:	55 95       	asr	r21
    102c:	47 95       	ror	r20
    102e:	8a 95       	dec	r24
    1030:	e2 f7       	brpl	.-8      	; 0x102a <M_DIO_void_getPinValue+0x94>
    1032:	ca 01       	movw	r24, r20
    1034:	81 70       	andi	r24, 0x01	; 1
    1036:	eb 81       	ldd	r30, Y+3	; 0x03
    1038:	fc 81       	ldd	r31, Y+4	; 0x04
    103a:	80 83       	st	Z, r24
    103c:	27 c0       	rjmp	.+78     	; 0x108c <M_DIO_void_getPinValue+0xf6>
		break;
	case PORTC_ID:
		*pvalue=GET_BIT(PINC_REG,Pin);
    103e:	e3 e3       	ldi	r30, 0x33	; 51
    1040:	f0 e0       	ldi	r31, 0x00	; 0
    1042:	80 81       	ld	r24, Z
    1044:	28 2f       	mov	r18, r24
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	8a 81       	ldd	r24, Y+2	; 0x02
    104a:	88 2f       	mov	r24, r24
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	a9 01       	movw	r20, r18
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <M_DIO_void_getPinValue+0xc0>
    1052:	55 95       	asr	r21
    1054:	47 95       	ror	r20
    1056:	8a 95       	dec	r24
    1058:	e2 f7       	brpl	.-8      	; 0x1052 <M_DIO_void_getPinValue+0xbc>
    105a:	ca 01       	movw	r24, r20
    105c:	81 70       	andi	r24, 0x01	; 1
    105e:	eb 81       	ldd	r30, Y+3	; 0x03
    1060:	fc 81       	ldd	r31, Y+4	; 0x04
    1062:	80 83       	st	Z, r24
    1064:	13 c0       	rjmp	.+38     	; 0x108c <M_DIO_void_getPinValue+0xf6>
		break;
	case PORTD_ID:
		*pvalue=GET_BIT(PIND_REG,Pin);
    1066:	e0 e3       	ldi	r30, 0x30	; 48
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	28 2f       	mov	r18, r24
    106e:	30 e0       	ldi	r19, 0x00	; 0
    1070:	8a 81       	ldd	r24, Y+2	; 0x02
    1072:	88 2f       	mov	r24, r24
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	a9 01       	movw	r20, r18
    1078:	02 c0       	rjmp	.+4      	; 0x107e <M_DIO_void_getPinValue+0xe8>
    107a:	55 95       	asr	r21
    107c:	47 95       	ror	r20
    107e:	8a 95       	dec	r24
    1080:	e2 f7       	brpl	.-8      	; 0x107a <M_DIO_void_getPinValue+0xe4>
    1082:	ca 01       	movw	r24, r20
    1084:	81 70       	andi	r24, 0x01	; 1
    1086:	eb 81       	ldd	r30, Y+3	; 0x03
    1088:	fc 81       	ldd	r31, Y+4	; 0x04
    108a:	80 83       	st	Z, r24
		break;
	}
}
    108c:	26 96       	adiw	r28, 0x06	; 6
    108e:	0f b6       	in	r0, 0x3f	; 63
    1090:	f8 94       	cli
    1092:	de bf       	out	0x3e, r29	; 62
    1094:	0f be       	out	0x3f, r0	; 63
    1096:	cd bf       	out	0x3d, r28	; 61
    1098:	cf 91       	pop	r28
    109a:	df 91       	pop	r29
    109c:	08 95       	ret

0000109e <M_DIO_void_TogPinValue>:
void M_DIO_void_TogPinValue(u8 Port, u8 Pin)
{
    109e:	df 93       	push	r29
    10a0:	cf 93       	push	r28
    10a2:	00 d0       	rcall	.+0      	; 0x10a4 <M_DIO_void_TogPinValue+0x6>
    10a4:	00 d0       	rcall	.+0      	; 0x10a6 <M_DIO_void_TogPinValue+0x8>
    10a6:	cd b7       	in	r28, 0x3d	; 61
    10a8:	de b7       	in	r29, 0x3e	; 62
    10aa:	89 83       	std	Y+1, r24	; 0x01
    10ac:	6a 83       	std	Y+2, r22	; 0x02
	switch (Port){
    10ae:	89 81       	ldd	r24, Y+1	; 0x01
    10b0:	28 2f       	mov	r18, r24
    10b2:	30 e0       	ldi	r19, 0x00	; 0
    10b4:	3c 83       	std	Y+4, r19	; 0x04
    10b6:	2b 83       	std	Y+3, r18	; 0x03
    10b8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ba:	9c 81       	ldd	r25, Y+4	; 0x04
    10bc:	82 30       	cpi	r24, 0x02	; 2
    10be:	91 05       	cpc	r25, r1
    10c0:	51 f1       	breq	.+84     	; 0x1116 <M_DIO_void_TogPinValue+0x78>
    10c2:	2b 81       	ldd	r18, Y+3	; 0x03
    10c4:	3c 81       	ldd	r19, Y+4	; 0x04
    10c6:	23 30       	cpi	r18, 0x03	; 3
    10c8:	31 05       	cpc	r19, r1
    10ca:	34 f4       	brge	.+12     	; 0x10d8 <M_DIO_void_TogPinValue+0x3a>
    10cc:	8b 81       	ldd	r24, Y+3	; 0x03
    10ce:	9c 81       	ldd	r25, Y+4	; 0x04
    10d0:	81 30       	cpi	r24, 0x01	; 1
    10d2:	91 05       	cpc	r25, r1
    10d4:	61 f0       	breq	.+24     	; 0x10ee <M_DIO_void_TogPinValue+0x50>
    10d6:	5a c0       	rjmp	.+180    	; 0x118c <M_DIO_void_TogPinValue+0xee>
    10d8:	2b 81       	ldd	r18, Y+3	; 0x03
    10da:	3c 81       	ldd	r19, Y+4	; 0x04
    10dc:	23 30       	cpi	r18, 0x03	; 3
    10de:	31 05       	cpc	r19, r1
    10e0:	71 f1       	breq	.+92     	; 0x113e <M_DIO_void_TogPinValue+0xa0>
    10e2:	8b 81       	ldd	r24, Y+3	; 0x03
    10e4:	9c 81       	ldd	r25, Y+4	; 0x04
    10e6:	84 30       	cpi	r24, 0x04	; 4
    10e8:	91 05       	cpc	r25, r1
    10ea:	e9 f1       	breq	.+122    	; 0x1166 <M_DIO_void_TogPinValue+0xc8>
    10ec:	4f c0       	rjmp	.+158    	; 0x118c <M_DIO_void_TogPinValue+0xee>
		case PORTA_ID:
			TOG_BIT(PORTA_REG,Pin);
    10ee:	ab e3       	ldi	r26, 0x3B	; 59
    10f0:	b0 e0       	ldi	r27, 0x00	; 0
    10f2:	eb e3       	ldi	r30, 0x3B	; 59
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	80 81       	ld	r24, Z
    10f8:	48 2f       	mov	r20, r24
    10fa:	8a 81       	ldd	r24, Y+2	; 0x02
    10fc:	28 2f       	mov	r18, r24
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	81 e0       	ldi	r24, 0x01	; 1
    1102:	90 e0       	ldi	r25, 0x00	; 0
    1104:	02 2e       	mov	r0, r18
    1106:	02 c0       	rjmp	.+4      	; 0x110c <M_DIO_void_TogPinValue+0x6e>
    1108:	88 0f       	add	r24, r24
    110a:	99 1f       	adc	r25, r25
    110c:	0a 94       	dec	r0
    110e:	e2 f7       	brpl	.-8      	; 0x1108 <M_DIO_void_TogPinValue+0x6a>
    1110:	84 27       	eor	r24, r20
    1112:	8c 93       	st	X, r24
    1114:	3b c0       	rjmp	.+118    	; 0x118c <M_DIO_void_TogPinValue+0xee>
			break;
		case PORTB_ID:
			TOG_BIT(PORTB_REG,Pin);
    1116:	a8 e3       	ldi	r26, 0x38	; 56
    1118:	b0 e0       	ldi	r27, 0x00	; 0
    111a:	e8 e3       	ldi	r30, 0x38	; 56
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	80 81       	ld	r24, Z
    1120:	48 2f       	mov	r20, r24
    1122:	8a 81       	ldd	r24, Y+2	; 0x02
    1124:	28 2f       	mov	r18, r24
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	02 2e       	mov	r0, r18
    112e:	02 c0       	rjmp	.+4      	; 0x1134 <M_DIO_void_TogPinValue+0x96>
    1130:	88 0f       	add	r24, r24
    1132:	99 1f       	adc	r25, r25
    1134:	0a 94       	dec	r0
    1136:	e2 f7       	brpl	.-8      	; 0x1130 <M_DIO_void_TogPinValue+0x92>
    1138:	84 27       	eor	r24, r20
    113a:	8c 93       	st	X, r24
    113c:	27 c0       	rjmp	.+78     	; 0x118c <M_DIO_void_TogPinValue+0xee>
			break;
		case PORTC_ID:
			TOG_BIT(PORTC_REG,Pin);
    113e:	a5 e3       	ldi	r26, 0x35	; 53
    1140:	b0 e0       	ldi	r27, 0x00	; 0
    1142:	e5 e3       	ldi	r30, 0x35	; 53
    1144:	f0 e0       	ldi	r31, 0x00	; 0
    1146:	80 81       	ld	r24, Z
    1148:	48 2f       	mov	r20, r24
    114a:	8a 81       	ldd	r24, Y+2	; 0x02
    114c:	28 2f       	mov	r18, r24
    114e:	30 e0       	ldi	r19, 0x00	; 0
    1150:	81 e0       	ldi	r24, 0x01	; 1
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	02 2e       	mov	r0, r18
    1156:	02 c0       	rjmp	.+4      	; 0x115c <M_DIO_void_TogPinValue+0xbe>
    1158:	88 0f       	add	r24, r24
    115a:	99 1f       	adc	r25, r25
    115c:	0a 94       	dec	r0
    115e:	e2 f7       	brpl	.-8      	; 0x1158 <M_DIO_void_TogPinValue+0xba>
    1160:	84 27       	eor	r24, r20
    1162:	8c 93       	st	X, r24
    1164:	13 c0       	rjmp	.+38     	; 0x118c <M_DIO_void_TogPinValue+0xee>
			break;
		case PORTD_ID:
			TOG_BIT(PORTD_REG,Pin);
    1166:	a2 e3       	ldi	r26, 0x32	; 50
    1168:	b0 e0       	ldi	r27, 0x00	; 0
    116a:	e2 e3       	ldi	r30, 0x32	; 50
    116c:	f0 e0       	ldi	r31, 0x00	; 0
    116e:	80 81       	ld	r24, Z
    1170:	48 2f       	mov	r20, r24
    1172:	8a 81       	ldd	r24, Y+2	; 0x02
    1174:	28 2f       	mov	r18, r24
    1176:	30 e0       	ldi	r19, 0x00	; 0
    1178:	81 e0       	ldi	r24, 0x01	; 1
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	02 2e       	mov	r0, r18
    117e:	02 c0       	rjmp	.+4      	; 0x1184 <M_DIO_void_TogPinValue+0xe6>
    1180:	88 0f       	add	r24, r24
    1182:	99 1f       	adc	r25, r25
    1184:	0a 94       	dec	r0
    1186:	e2 f7       	brpl	.-8      	; 0x1180 <M_DIO_void_TogPinValue+0xe2>
    1188:	84 27       	eor	r24, r20
    118a:	8c 93       	st	X, r24
			break;
		}


}
    118c:	0f 90       	pop	r0
    118e:	0f 90       	pop	r0
    1190:	0f 90       	pop	r0
    1192:	0f 90       	pop	r0
    1194:	cf 91       	pop	r28
    1196:	df 91       	pop	r29
    1198:	08 95       	ret

0000119a <H_SSD_void_init>:



//u8 arr[]={0x3f,};
void H_SSD_void_init(void)
{
    119a:	df 93       	push	r29
    119c:	cf 93       	push	r28
    119e:	cd b7       	in	r28, 0x3d	; 61
    11a0:	de b7       	in	r29, 0x3e	; 62
	M_DIO_void_setPinDir(SSD_LED_A_PORT,  SSD_LED_A_PIN , OUT);
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	61 e0       	ldi	r22, 0x01	; 1
    11a6:	41 e0       	ldi	r20, 0x01	; 1
    11a8:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_B_PORT,  SSD_LED_B_PIN , OUT);
    11ac:	81 e0       	ldi	r24, 0x01	; 1
    11ae:	62 e0       	ldi	r22, 0x02	; 2
    11b0:	41 e0       	ldi	r20, 0x01	; 1
    11b2:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_C_PORT,  SSD_LED_C_PIN , OUT);
    11b6:	81 e0       	ldi	r24, 0x01	; 1
    11b8:	63 e0       	ldi	r22, 0x03	; 3
    11ba:	41 e0       	ldi	r20, 0x01	; 1
    11bc:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_D_PORT,  SSD_LED_D_PIN , OUT);
    11c0:	81 e0       	ldi	r24, 0x01	; 1
    11c2:	64 e0       	ldi	r22, 0x04	; 4
    11c4:	41 e0       	ldi	r20, 0x01	; 1
    11c6:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_E_PORT,  SSD_LED_E_PIN , OUT);
    11ca:	81 e0       	ldi	r24, 0x01	; 1
    11cc:	65 e0       	ldi	r22, 0x05	; 5
    11ce:	41 e0       	ldi	r20, 0x01	; 1
    11d0:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_F_PORT,  SSD_LED_F_PIN , OUT);
    11d4:	81 e0       	ldi	r24, 0x01	; 1
    11d6:	66 e0       	ldi	r22, 0x06	; 6
    11d8:	41 e0       	ldi	r20, 0x01	; 1
    11da:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_G_PORT,  SSD_LED_G_PIN , OUT);
    11de:	81 e0       	ldi	r24, 0x01	; 1
    11e0:	67 e0       	ldi	r22, 0x07	; 7
    11e2:	41 e0       	ldi	r20, 0x01	; 1
    11e4:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_LED_DOT_PORT,  SSD_LED_DOT_PIN , OUT);
    11e8:	82 e0       	ldi	r24, 0x02	; 2
    11ea:	60 e0       	ldi	r22, 0x00	; 0
    11ec:	41 e0       	ldi	r20, 0x01	; 1
    11ee:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>

	//ENABLE DIGITS 1

	M_DIO_void_setPinDir(SSD_DIG_1_EN_PORT,  SSD_DIG_1_EN_PIN , OUT);
    11f2:	83 e0       	ldi	r24, 0x03	; 3
    11f4:	66 e0       	ldi	r22, 0x06	; 6
    11f6:	41 e0       	ldi	r20, 0x01	; 1
    11f8:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
	M_DIO_void_setPinDir(SSD_DIG_2_EN_PORT,  SSD_DIG_2_EN_PIN , OUT);
    11fc:	83 e0       	ldi	r24, 0x03	; 3
    11fe:	67 e0       	ldi	r22, 0x07	; 7
    1200:	41 e0       	ldi	r20, 0x01	; 1
    1202:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
}
    1206:	cf 91       	pop	r28
    1208:	df 91       	pop	r29
    120a:	08 95       	ret

0000120c <H_SSD_void_DisplayNumber>:
void H_SSD_void_DisplayNumber(u8 number)
{
    120c:	df 93       	push	r29
    120e:	cf 93       	push	r28
    1210:	cd b7       	in	r28, 0x3d	; 61
    1212:	de b7       	in	r29, 0x3e	; 62
    1214:	a7 97       	sbiw	r28, 0x27	; 39
    1216:	0f b6       	in	r0, 0x3f	; 63
    1218:	f8 94       	cli
    121a:	de bf       	out	0x3e, r29	; 62
    121c:	0f be       	out	0x3f, r0	; 63
    121e:	cd bf       	out	0x3d, r28	; 61
    1220:	8b a3       	std	Y+35, r24	; 0x23
	if(number>99)
    1222:	8b a1       	ldd	r24, Y+35	; 0x23
    1224:	84 36       	cpi	r24, 0x64	; 100
    1226:	08 f0       	brcs	.+2      	; 0x122a <H_SSD_void_DisplayNumber+0x1e>
    1228:	04 c5       	rjmp	.+2568   	; 0x1c32 <H_SSD_void_DisplayNumber+0xa26>
	{
		return;
	}
	u32 i ;
	u8 units =number % 10;
    122a:	8b a1       	ldd	r24, Y+35	; 0x23
    122c:	9a e0       	ldi	r25, 0x0A	; 10
    122e:	69 2f       	mov	r22, r25
    1230:	0e 94 a5 17 	call	0x2f4a	; 0x2f4a <__udivmodqi4>
    1234:	89 2f       	mov	r24, r25
    1236:	8e 8f       	std	Y+30, r24	; 0x1e
	u8 tens = number/10;
    1238:	8b a1       	ldd	r24, Y+35	; 0x23
    123a:	9a e0       	ldi	r25, 0x0A	; 10
    123c:	69 2f       	mov	r22, r25
    123e:	0e 94 a5 17 	call	0x2f4a	; 0x2f4a <__udivmodqi4>
    1242:	8d 8f       	std	Y+29, r24	; 0x1d
	for(i=0;i<SSD_DISPLAYY_TIME ;i++){
    1244:	1f 8e       	std	Y+31, r1	; 0x1f
    1246:	18 a2       	std	Y+32, r1	; 0x20
    1248:	19 a2       	std	Y+33, r1	; 0x21
    124a:	1a a2       	std	Y+34, r1	; 0x22
    124c:	e8 c4       	rjmp	.+2512   	; 0x1c1e <H_SSD_void_DisplayNumber+0xa12>

		switch (units)
    124e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1250:	28 2f       	mov	r18, r24
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	3f a3       	std	Y+39, r19	; 0x27
    1256:	2e a3       	std	Y+38, r18	; 0x26
    1258:	8e a1       	ldd	r24, Y+38	; 0x26
    125a:	9f a1       	ldd	r25, Y+39	; 0x27
    125c:	84 30       	cpi	r24, 0x04	; 4
    125e:	91 05       	cpc	r25, r1
    1260:	09 f4       	brne	.+2      	; 0x1264 <H_SSD_void_DisplayNumber+0x58>
    1262:	f0 c0       	rjmp	.+480    	; 0x1444 <H_SSD_void_DisplayNumber+0x238>
    1264:	2e a1       	ldd	r18, Y+38	; 0x26
    1266:	3f a1       	ldd	r19, Y+39	; 0x27
    1268:	25 30       	cpi	r18, 0x05	; 5
    126a:	31 05       	cpc	r19, r1
    126c:	ec f4       	brge	.+58     	; 0x12a8 <H_SSD_void_DisplayNumber+0x9c>
    126e:	8e a1       	ldd	r24, Y+38	; 0x26
    1270:	9f a1       	ldd	r25, Y+39	; 0x27
    1272:	81 30       	cpi	r24, 0x01	; 1
    1274:	91 05       	cpc	r25, r1
    1276:	09 f4       	brne	.+2      	; 0x127a <H_SSD_void_DisplayNumber+0x6e>
    1278:	6a c0       	rjmp	.+212    	; 0x134e <H_SSD_void_DisplayNumber+0x142>
    127a:	2e a1       	ldd	r18, Y+38	; 0x26
    127c:	3f a1       	ldd	r19, Y+39	; 0x27
    127e:	22 30       	cpi	r18, 0x02	; 2
    1280:	31 05       	cpc	r19, r1
    1282:	2c f4       	brge	.+10     	; 0x128e <H_SSD_void_DisplayNumber+0x82>
    1284:	8e a1       	ldd	r24, Y+38	; 0x26
    1286:	9f a1       	ldd	r25, Y+39	; 0x27
    1288:	00 97       	sbiw	r24, 0x00	; 0
    128a:	99 f1       	breq	.+102    	; 0x12f2 <H_SSD_void_DisplayNumber+0xe6>
    128c:	d0 c1       	rjmp	.+928    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
    128e:	2e a1       	ldd	r18, Y+38	; 0x26
    1290:	3f a1       	ldd	r19, Y+39	; 0x27
    1292:	22 30       	cpi	r18, 0x02	; 2
    1294:	31 05       	cpc	r19, r1
    1296:	09 f4       	brne	.+2      	; 0x129a <H_SSD_void_DisplayNumber+0x8e>
    1298:	83 c0       	rjmp	.+262    	; 0x13a0 <H_SSD_void_DisplayNumber+0x194>
    129a:	8e a1       	ldd	r24, Y+38	; 0x26
    129c:	9f a1       	ldd	r25, Y+39	; 0x27
    129e:	83 30       	cpi	r24, 0x03	; 3
    12a0:	91 05       	cpc	r25, r1
    12a2:	09 f4       	brne	.+2      	; 0x12a6 <H_SSD_void_DisplayNumber+0x9a>
    12a4:	a6 c0       	rjmp	.+332    	; 0x13f2 <H_SSD_void_DisplayNumber+0x1e6>
    12a6:	c3 c1       	rjmp	.+902    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
    12a8:	2e a1       	ldd	r18, Y+38	; 0x26
    12aa:	3f a1       	ldd	r19, Y+39	; 0x27
    12ac:	27 30       	cpi	r18, 0x07	; 7
    12ae:	31 05       	cpc	r19, r1
    12b0:	09 f4       	brne	.+2      	; 0x12b4 <H_SSD_void_DisplayNumber+0xa8>
    12b2:	43 c1       	rjmp	.+646    	; 0x153a <H_SSD_void_DisplayNumber+0x32e>
    12b4:	8e a1       	ldd	r24, Y+38	; 0x26
    12b6:	9f a1       	ldd	r25, Y+39	; 0x27
    12b8:	88 30       	cpi	r24, 0x08	; 8
    12ba:	91 05       	cpc	r25, r1
    12bc:	6c f4       	brge	.+26     	; 0x12d8 <H_SSD_void_DisplayNumber+0xcc>
    12be:	2e a1       	ldd	r18, Y+38	; 0x26
    12c0:	3f a1       	ldd	r19, Y+39	; 0x27
    12c2:	25 30       	cpi	r18, 0x05	; 5
    12c4:	31 05       	cpc	r19, r1
    12c6:	09 f4       	brne	.+2      	; 0x12ca <H_SSD_void_DisplayNumber+0xbe>
    12c8:	e6 c0       	rjmp	.+460    	; 0x1496 <H_SSD_void_DisplayNumber+0x28a>
    12ca:	8e a1       	ldd	r24, Y+38	; 0x26
    12cc:	9f a1       	ldd	r25, Y+39	; 0x27
    12ce:	86 30       	cpi	r24, 0x06	; 6
    12d0:	91 05       	cpc	r25, r1
    12d2:	09 f4       	brne	.+2      	; 0x12d6 <H_SSD_void_DisplayNumber+0xca>
    12d4:	09 c1       	rjmp	.+530    	; 0x14e8 <H_SSD_void_DisplayNumber+0x2dc>
    12d6:	ab c1       	rjmp	.+854    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
    12d8:	2e a1       	ldd	r18, Y+38	; 0x26
    12da:	3f a1       	ldd	r19, Y+39	; 0x27
    12dc:	28 30       	cpi	r18, 0x08	; 8
    12de:	31 05       	cpc	r19, r1
    12e0:	09 f4       	brne	.+2      	; 0x12e4 <H_SSD_void_DisplayNumber+0xd8>
    12e2:	54 c1       	rjmp	.+680    	; 0x158c <H_SSD_void_DisplayNumber+0x380>
    12e4:	8e a1       	ldd	r24, Y+38	; 0x26
    12e6:	9f a1       	ldd	r25, Y+39	; 0x27
    12e8:	89 30       	cpi	r24, 0x09	; 9
    12ea:	91 05       	cpc	r25, r1
    12ec:	09 f4       	brne	.+2      	; 0x12f0 <H_SSD_void_DisplayNumber+0xe4>
    12ee:	77 c1       	rjmp	.+750    	; 0x15de <H_SSD_void_DisplayNumber+0x3d2>
    12f0:	9e c1       	rjmp	.+828    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
		{
		case 0:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    12f2:	81 e0       	ldi	r24, 0x01	; 1
    12f4:	61 e0       	ldi	r22, 0x01	; 1
    12f6:	41 e0       	ldi	r20, 0x01	; 1
    12f8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    12fc:	81 e0       	ldi	r24, 0x01	; 1
    12fe:	62 e0       	ldi	r22, 0x02	; 2
    1300:	41 e0       	ldi	r20, 0x01	; 1
    1302:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    1306:	81 e0       	ldi	r24, 0x01	; 1
    1308:	63 e0       	ldi	r22, 0x03	; 3
    130a:	41 e0       	ldi	r20, 0x01	; 1
    130c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    1310:	81 e0       	ldi	r24, 0x01	; 1
    1312:	64 e0       	ldi	r22, 0x04	; 4
    1314:	41 e0       	ldi	r20, 0x01	; 1
    1316:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    131a:	81 e0       	ldi	r24, 0x01	; 1
    131c:	65 e0       	ldi	r22, 0x05	; 5
    131e:	41 e0       	ldi	r20, 0x01	; 1
    1320:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	66 e0       	ldi	r22, 0x06	; 6
    1328:	41 e0       	ldi	r20, 0x01	; 1
    132a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	61 e0       	ldi	r22, 0x01	; 1
    1332:	41 e0       	ldi	r20, 0x01	; 1
    1334:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    1338:	81 e0       	ldi	r24, 0x01	; 1
    133a:	67 e0       	ldi	r22, 0x07	; 7
    133c:	40 e0       	ldi	r20, 0x00	; 0
    133e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1342:	82 e0       	ldi	r24, 0x02	; 2
    1344:	60 e0       	ldi	r22, 0x00	; 0
    1346:	40 e0       	ldi	r20, 0x00	; 0
    1348:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    134c:	70 c1       	rjmp	.+736    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
			break;

		case 1:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
    134e:	81 e0       	ldi	r24, 0x01	; 1
    1350:	61 e0       	ldi	r22, 0x01	; 1
    1352:	40 e0       	ldi	r20, 0x00	; 0
    1354:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    1358:	81 e0       	ldi	r24, 0x01	; 1
    135a:	62 e0       	ldi	r22, 0x02	; 2
    135c:	41 e0       	ldi	r20, 0x01	; 1
    135e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    1362:	81 e0       	ldi	r24, 0x01	; 1
    1364:	63 e0       	ldi	r22, 0x03	; 3
    1366:	41 e0       	ldi	r20, 0x01	; 1
    1368:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    136c:	81 e0       	ldi	r24, 0x01	; 1
    136e:	64 e0       	ldi	r22, 0x04	; 4
    1370:	40 e0       	ldi	r20, 0x00	; 0
    1372:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    1376:	81 e0       	ldi	r24, 0x01	; 1
    1378:	65 e0       	ldi	r22, 0x05	; 5
    137a:	40 e0       	ldi	r20, 0x00	; 0
    137c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    1380:	81 e0       	ldi	r24, 0x01	; 1
    1382:	66 e0       	ldi	r22, 0x06	; 6
    1384:	40 e0       	ldi	r20, 0x00	; 0
    1386:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    138a:	81 e0       	ldi	r24, 0x01	; 1
    138c:	67 e0       	ldi	r22, 0x07	; 7
    138e:	40 e0       	ldi	r20, 0x00	; 0
    1390:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1394:	82 e0       	ldi	r24, 0x02	; 2
    1396:	60 e0       	ldi	r22, 0x00	; 0
    1398:	40 e0       	ldi	r20, 0x00	; 0
    139a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    139e:	47 c1       	rjmp	.+654    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
			break;

		case 2:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    13a0:	81 e0       	ldi	r24, 0x01	; 1
    13a2:	61 e0       	ldi	r22, 0x01	; 1
    13a4:	41 e0       	ldi	r20, 0x01	; 1
    13a6:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    13aa:	81 e0       	ldi	r24, 0x01	; 1
    13ac:	62 e0       	ldi	r22, 0x02	; 2
    13ae:	41 e0       	ldi	r20, 0x01	; 1
    13b0:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,LOW);
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	63 e0       	ldi	r22, 0x03	; 3
    13b8:	40 e0       	ldi	r20, 0x00	; 0
    13ba:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    13be:	81 e0       	ldi	r24, 0x01	; 1
    13c0:	64 e0       	ldi	r22, 0x04	; 4
    13c2:	41 e0       	ldi	r20, 0x01	; 1
    13c4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	65 e0       	ldi	r22, 0x05	; 5
    13cc:	41 e0       	ldi	r20, 0x01	; 1
    13ce:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    13d2:	81 e0       	ldi	r24, 0x01	; 1
    13d4:	66 e0       	ldi	r22, 0x06	; 6
    13d6:	40 e0       	ldi	r20, 0x00	; 0
    13d8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    13dc:	81 e0       	ldi	r24, 0x01	; 1
    13de:	67 e0       	ldi	r22, 0x07	; 7
    13e0:	41 e0       	ldi	r20, 0x01	; 1
    13e2:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    13e6:	82 e0       	ldi	r24, 0x02	; 2
    13e8:	60 e0       	ldi	r22, 0x00	; 0
    13ea:	40 e0       	ldi	r20, 0x00	; 0
    13ec:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    13f0:	1e c1       	rjmp	.+572    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
			break;

		case 3:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    13f2:	81 e0       	ldi	r24, 0x01	; 1
    13f4:	61 e0       	ldi	r22, 0x01	; 1
    13f6:	41 e0       	ldi	r20, 0x01	; 1
    13f8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    13fc:	81 e0       	ldi	r24, 0x01	; 1
    13fe:	62 e0       	ldi	r22, 0x02	; 2
    1400:	41 e0       	ldi	r20, 0x01	; 1
    1402:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    1406:	81 e0       	ldi	r24, 0x01	; 1
    1408:	63 e0       	ldi	r22, 0x03	; 3
    140a:	41 e0       	ldi	r20, 0x01	; 1
    140c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	64 e0       	ldi	r22, 0x04	; 4
    1414:	41 e0       	ldi	r20, 0x01	; 1
    1416:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    141a:	81 e0       	ldi	r24, 0x01	; 1
    141c:	65 e0       	ldi	r22, 0x05	; 5
    141e:	40 e0       	ldi	r20, 0x00	; 0
    1420:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    1424:	81 e0       	ldi	r24, 0x01	; 1
    1426:	66 e0       	ldi	r22, 0x06	; 6
    1428:	40 e0       	ldi	r20, 0x00	; 0
    142a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    142e:	81 e0       	ldi	r24, 0x01	; 1
    1430:	67 e0       	ldi	r22, 0x07	; 7
    1432:	41 e0       	ldi	r20, 0x01	; 1
    1434:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1438:	82 e0       	ldi	r24, 0x02	; 2
    143a:	60 e0       	ldi	r22, 0x00	; 0
    143c:	40 e0       	ldi	r20, 0x00	; 0
    143e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1442:	f5 c0       	rjmp	.+490    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
			break;

		case 4:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
    1444:	81 e0       	ldi	r24, 0x01	; 1
    1446:	61 e0       	ldi	r22, 0x01	; 1
    1448:	40 e0       	ldi	r20, 0x00	; 0
    144a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    144e:	81 e0       	ldi	r24, 0x01	; 1
    1450:	62 e0       	ldi	r22, 0x02	; 2
    1452:	41 e0       	ldi	r20, 0x01	; 1
    1454:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    1458:	81 e0       	ldi	r24, 0x01	; 1
    145a:	63 e0       	ldi	r22, 0x03	; 3
    145c:	41 e0       	ldi	r20, 0x01	; 1
    145e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    1462:	81 e0       	ldi	r24, 0x01	; 1
    1464:	64 e0       	ldi	r22, 0x04	; 4
    1466:	40 e0       	ldi	r20, 0x00	; 0
    1468:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    146c:	81 e0       	ldi	r24, 0x01	; 1
    146e:	65 e0       	ldi	r22, 0x05	; 5
    1470:	40 e0       	ldi	r20, 0x00	; 0
    1472:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    1476:	81 e0       	ldi	r24, 0x01	; 1
    1478:	66 e0       	ldi	r22, 0x06	; 6
    147a:	41 e0       	ldi	r20, 0x01	; 1
    147c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    1480:	81 e0       	ldi	r24, 0x01	; 1
    1482:	67 e0       	ldi	r22, 0x07	; 7
    1484:	41 e0       	ldi	r20, 0x01	; 1
    1486:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    148a:	82 e0       	ldi	r24, 0x02	; 2
    148c:	60 e0       	ldi	r22, 0x00	; 0
    148e:	40 e0       	ldi	r20, 0x00	; 0
    1490:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1494:	cc c0       	rjmp	.+408    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
			break;

		case 5:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    1496:	81 e0       	ldi	r24, 0x01	; 1
    1498:	61 e0       	ldi	r22, 0x01	; 1
    149a:	41 e0       	ldi	r20, 0x01	; 1
    149c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
    14a0:	81 e0       	ldi	r24, 0x01	; 1
    14a2:	62 e0       	ldi	r22, 0x02	; 2
    14a4:	40 e0       	ldi	r20, 0x00	; 0
    14a6:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	63 e0       	ldi	r22, 0x03	; 3
    14ae:	41 e0       	ldi	r20, 0x01	; 1
    14b0:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	64 e0       	ldi	r22, 0x04	; 4
    14b8:	41 e0       	ldi	r20, 0x01	; 1
    14ba:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    14be:	81 e0       	ldi	r24, 0x01	; 1
    14c0:	65 e0       	ldi	r22, 0x05	; 5
    14c2:	40 e0       	ldi	r20, 0x00	; 0
    14c4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	66 e0       	ldi	r22, 0x06	; 6
    14cc:	41 e0       	ldi	r20, 0x01	; 1
    14ce:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    14d2:	81 e0       	ldi	r24, 0x01	; 1
    14d4:	67 e0       	ldi	r22, 0x07	; 7
    14d6:	41 e0       	ldi	r20, 0x01	; 1
    14d8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    14dc:	82 e0       	ldi	r24, 0x02	; 2
    14de:	60 e0       	ldi	r22, 0x00	; 0
    14e0:	40 e0       	ldi	r20, 0x00	; 0
    14e2:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    14e6:	a3 c0       	rjmp	.+326    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
			break;
		case 6:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    14e8:	81 e0       	ldi	r24, 0x01	; 1
    14ea:	61 e0       	ldi	r22, 0x01	; 1
    14ec:	41 e0       	ldi	r20, 0x01	; 1
    14ee:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
    14f2:	81 e0       	ldi	r24, 0x01	; 1
    14f4:	62 e0       	ldi	r22, 0x02	; 2
    14f6:	40 e0       	ldi	r20, 0x00	; 0
    14f8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    14fc:	81 e0       	ldi	r24, 0x01	; 1
    14fe:	63 e0       	ldi	r22, 0x03	; 3
    1500:	41 e0       	ldi	r20, 0x01	; 1
    1502:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	64 e0       	ldi	r22, 0x04	; 4
    150a:	41 e0       	ldi	r20, 0x01	; 1
    150c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    1510:	81 e0       	ldi	r24, 0x01	; 1
    1512:	65 e0       	ldi	r22, 0x05	; 5
    1514:	41 e0       	ldi	r20, 0x01	; 1
    1516:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    151a:	81 e0       	ldi	r24, 0x01	; 1
    151c:	66 e0       	ldi	r22, 0x06	; 6
    151e:	41 e0       	ldi	r20, 0x01	; 1
    1520:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    1524:	81 e0       	ldi	r24, 0x01	; 1
    1526:	67 e0       	ldi	r22, 0x07	; 7
    1528:	41 e0       	ldi	r20, 0x01	; 1
    152a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    152e:	82 e0       	ldi	r24, 0x02	; 2
    1530:	60 e0       	ldi	r22, 0x00	; 0
    1532:	40 e0       	ldi	r20, 0x00	; 0
    1534:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1538:	7a c0       	rjmp	.+244    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
			break;
		case 7:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    153a:	81 e0       	ldi	r24, 0x01	; 1
    153c:	61 e0       	ldi	r22, 0x01	; 1
    153e:	41 e0       	ldi	r20, 0x01	; 1
    1540:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    1544:	81 e0       	ldi	r24, 0x01	; 1
    1546:	62 e0       	ldi	r22, 0x02	; 2
    1548:	41 e0       	ldi	r20, 0x01	; 1
    154a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    154e:	81 e0       	ldi	r24, 0x01	; 1
    1550:	63 e0       	ldi	r22, 0x03	; 3
    1552:	41 e0       	ldi	r20, 0x01	; 1
    1554:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    1558:	81 e0       	ldi	r24, 0x01	; 1
    155a:	64 e0       	ldi	r22, 0x04	; 4
    155c:	40 e0       	ldi	r20, 0x00	; 0
    155e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	65 e0       	ldi	r22, 0x05	; 5
    1566:	40 e0       	ldi	r20, 0x00	; 0
    1568:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    156c:	81 e0       	ldi	r24, 0x01	; 1
    156e:	66 e0       	ldi	r22, 0x06	; 6
    1570:	40 e0       	ldi	r20, 0x00	; 0
    1572:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    1576:	81 e0       	ldi	r24, 0x01	; 1
    1578:	67 e0       	ldi	r22, 0x07	; 7
    157a:	40 e0       	ldi	r20, 0x00	; 0
    157c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1580:	82 e0       	ldi	r24, 0x02	; 2
    1582:	60 e0       	ldi	r22, 0x00	; 0
    1584:	40 e0       	ldi	r20, 0x00	; 0
    1586:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    158a:	51 c0       	rjmp	.+162    	; 0x162e <H_SSD_void_DisplayNumber+0x422>
			break;
		case 8:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    158c:	81 e0       	ldi	r24, 0x01	; 1
    158e:	61 e0       	ldi	r22, 0x01	; 1
    1590:	41 e0       	ldi	r20, 0x01	; 1
    1592:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    1596:	81 e0       	ldi	r24, 0x01	; 1
    1598:	62 e0       	ldi	r22, 0x02	; 2
    159a:	41 e0       	ldi	r20, 0x01	; 1
    159c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    15a0:	81 e0       	ldi	r24, 0x01	; 1
    15a2:	63 e0       	ldi	r22, 0x03	; 3
    15a4:	41 e0       	ldi	r20, 0x01	; 1
    15a6:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    15aa:	81 e0       	ldi	r24, 0x01	; 1
    15ac:	64 e0       	ldi	r22, 0x04	; 4
    15ae:	41 e0       	ldi	r20, 0x01	; 1
    15b0:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    15b4:	81 e0       	ldi	r24, 0x01	; 1
    15b6:	65 e0       	ldi	r22, 0x05	; 5
    15b8:	41 e0       	ldi	r20, 0x01	; 1
    15ba:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    15be:	81 e0       	ldi	r24, 0x01	; 1
    15c0:	66 e0       	ldi	r22, 0x06	; 6
    15c2:	41 e0       	ldi	r20, 0x01	; 1
    15c4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    15c8:	81 e0       	ldi	r24, 0x01	; 1
    15ca:	67 e0       	ldi	r22, 0x07	; 7
    15cc:	41 e0       	ldi	r20, 0x01	; 1
    15ce:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    15d2:	82 e0       	ldi	r24, 0x02	; 2
    15d4:	60 e0       	ldi	r22, 0x00	; 0
    15d6:	40 e0       	ldi	r20, 0x00	; 0
    15d8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    15dc:	28 c0       	rjmp	.+80     	; 0x162e <H_SSD_void_DisplayNumber+0x422>
			break;
		case 9:
			M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    15de:	81 e0       	ldi	r24, 0x01	; 1
    15e0:	61 e0       	ldi	r22, 0x01	; 1
    15e2:	41 e0       	ldi	r20, 0x01	; 1
    15e4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    15e8:	81 e0       	ldi	r24, 0x01	; 1
    15ea:	62 e0       	ldi	r22, 0x02	; 2
    15ec:	41 e0       	ldi	r20, 0x01	; 1
    15ee:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    15f2:	81 e0       	ldi	r24, 0x01	; 1
    15f4:	63 e0       	ldi	r22, 0x03	; 3
    15f6:	41 e0       	ldi	r20, 0x01	; 1
    15f8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	64 e0       	ldi	r22, 0x04	; 4
    1600:	41 e0       	ldi	r20, 0x01	; 1
    1602:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    1606:	81 e0       	ldi	r24, 0x01	; 1
    1608:	65 e0       	ldi	r22, 0x05	; 5
    160a:	40 e0       	ldi	r20, 0x00	; 0
    160c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    1610:	81 e0       	ldi	r24, 0x01	; 1
    1612:	66 e0       	ldi	r22, 0x06	; 6
    1614:	41 e0       	ldi	r20, 0x01	; 1
    1616:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    161a:	81 e0       	ldi	r24, 0x01	; 1
    161c:	67 e0       	ldi	r22, 0x07	; 7
    161e:	41 e0       	ldi	r20, 0x01	; 1
    1620:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1624:	82 e0       	ldi	r24, 0x02	; 2
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	40 e0       	ldi	r20, 0x00	; 0
    162a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>


		}
		//enable digit 1
		//disable digit 2
		M_DIO_void_setPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,HIGH);
    162e:	83 e0       	ldi	r24, 0x03	; 3
    1630:	66 e0       	ldi	r22, 0x06	; 6
    1632:	41 e0       	ldi	r20, 0x01	; 1
    1634:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
    1638:	83 e0       	ldi	r24, 0x03	; 3
    163a:	67 e0       	ldi	r22, 0x07	; 7
    163c:	40 e0       	ldi	r20, 0x00	; 0
    163e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1642:	80 e0       	ldi	r24, 0x00	; 0
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	a0 e8       	ldi	r26, 0x80	; 128
    1648:	bf e3       	ldi	r27, 0x3F	; 63
    164a:	89 8f       	std	Y+25, r24	; 0x19
    164c:	9a 8f       	std	Y+26, r25	; 0x1a
    164e:	ab 8f       	std	Y+27, r26	; 0x1b
    1650:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1652:	69 8d       	ldd	r22, Y+25	; 0x19
    1654:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1656:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1658:	9c 8d       	ldd	r25, Y+28	; 0x1c
    165a:	20 e0       	ldi	r18, 0x00	; 0
    165c:	30 e0       	ldi	r19, 0x00	; 0
    165e:	4a e7       	ldi	r20, 0x7A	; 122
    1660:	55 e4       	ldi	r21, 0x45	; 69
    1662:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1666:	dc 01       	movw	r26, r24
    1668:	cb 01       	movw	r24, r22
    166a:	8d 8b       	std	Y+21, r24	; 0x15
    166c:	9e 8b       	std	Y+22, r25	; 0x16
    166e:	af 8b       	std	Y+23, r26	; 0x17
    1670:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1672:	6d 89       	ldd	r22, Y+21	; 0x15
    1674:	7e 89       	ldd	r23, Y+22	; 0x16
    1676:	8f 89       	ldd	r24, Y+23	; 0x17
    1678:	98 8d       	ldd	r25, Y+24	; 0x18
    167a:	20 e0       	ldi	r18, 0x00	; 0
    167c:	30 e0       	ldi	r19, 0x00	; 0
    167e:	40 e8       	ldi	r20, 0x80	; 128
    1680:	5f e3       	ldi	r21, 0x3F	; 63
    1682:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1686:	88 23       	and	r24, r24
    1688:	2c f4       	brge	.+10     	; 0x1694 <H_SSD_void_DisplayNumber+0x488>
		__ticks = 1;
    168a:	81 e0       	ldi	r24, 0x01	; 1
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	9c 8b       	std	Y+20, r25	; 0x14
    1690:	8b 8b       	std	Y+19, r24	; 0x13
    1692:	3f c0       	rjmp	.+126    	; 0x1712 <H_SSD_void_DisplayNumber+0x506>
	else if (__tmp > 65535)
    1694:	6d 89       	ldd	r22, Y+21	; 0x15
    1696:	7e 89       	ldd	r23, Y+22	; 0x16
    1698:	8f 89       	ldd	r24, Y+23	; 0x17
    169a:	98 8d       	ldd	r25, Y+24	; 0x18
    169c:	20 e0       	ldi	r18, 0x00	; 0
    169e:	3f ef       	ldi	r19, 0xFF	; 255
    16a0:	4f e7       	ldi	r20, 0x7F	; 127
    16a2:	57 e4       	ldi	r21, 0x47	; 71
    16a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16a8:	18 16       	cp	r1, r24
    16aa:	4c f5       	brge	.+82     	; 0x16fe <H_SSD_void_DisplayNumber+0x4f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16ac:	69 8d       	ldd	r22, Y+25	; 0x19
    16ae:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16b0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16b2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	40 e2       	ldi	r20, 0x20	; 32
    16ba:	51 e4       	ldi	r21, 0x41	; 65
    16bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16c0:	dc 01       	movw	r26, r24
    16c2:	cb 01       	movw	r24, r22
    16c4:	bc 01       	movw	r22, r24
    16c6:	cd 01       	movw	r24, r26
    16c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16cc:	dc 01       	movw	r26, r24
    16ce:	cb 01       	movw	r24, r22
    16d0:	9c 8b       	std	Y+20, r25	; 0x14
    16d2:	8b 8b       	std	Y+19, r24	; 0x13
    16d4:	0f c0       	rjmp	.+30     	; 0x16f4 <H_SSD_void_DisplayNumber+0x4e8>
    16d6:	80 e9       	ldi	r24, 0x90	; 144
    16d8:	91 e0       	ldi	r25, 0x01	; 1
    16da:	9a 8b       	std	Y+18, r25	; 0x12
    16dc:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    16de:	89 89       	ldd	r24, Y+17	; 0x11
    16e0:	9a 89       	ldd	r25, Y+18	; 0x12
    16e2:	01 97       	sbiw	r24, 0x01	; 1
    16e4:	f1 f7       	brne	.-4      	; 0x16e2 <H_SSD_void_DisplayNumber+0x4d6>
    16e6:	9a 8b       	std	Y+18, r25	; 0x12
    16e8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16ea:	8b 89       	ldd	r24, Y+19	; 0x13
    16ec:	9c 89       	ldd	r25, Y+20	; 0x14
    16ee:	01 97       	sbiw	r24, 0x01	; 1
    16f0:	9c 8b       	std	Y+20, r25	; 0x14
    16f2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16f4:	8b 89       	ldd	r24, Y+19	; 0x13
    16f6:	9c 89       	ldd	r25, Y+20	; 0x14
    16f8:	00 97       	sbiw	r24, 0x00	; 0
    16fa:	69 f7       	brne	.-38     	; 0x16d6 <H_SSD_void_DisplayNumber+0x4ca>
    16fc:	14 c0       	rjmp	.+40     	; 0x1726 <H_SSD_void_DisplayNumber+0x51a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16fe:	6d 89       	ldd	r22, Y+21	; 0x15
    1700:	7e 89       	ldd	r23, Y+22	; 0x16
    1702:	8f 89       	ldd	r24, Y+23	; 0x17
    1704:	98 8d       	ldd	r25, Y+24	; 0x18
    1706:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    170a:	dc 01       	movw	r26, r24
    170c:	cb 01       	movw	r24, r22
    170e:	9c 8b       	std	Y+20, r25	; 0x14
    1710:	8b 8b       	std	Y+19, r24	; 0x13
    1712:	8b 89       	ldd	r24, Y+19	; 0x13
    1714:	9c 89       	ldd	r25, Y+20	; 0x14
    1716:	98 8b       	std	Y+16, r25	; 0x10
    1718:	8f 87       	std	Y+15, r24	; 0x0f
    171a:	8f 85       	ldd	r24, Y+15	; 0x0f
    171c:	98 89       	ldd	r25, Y+16	; 0x10
    171e:	01 97       	sbiw	r24, 0x01	; 1
    1720:	f1 f7       	brne	.-4      	; 0x171e <H_SSD_void_DisplayNumber+0x512>
    1722:	98 8b       	std	Y+16, r25	; 0x10
    1724:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);
		M_DIO_void_setPinValue(SSD_DIG_1_EN_PORT,SSD_DIG_1_EN_PIN,LOW);
    1726:	83 e0       	ldi	r24, 0x03	; 3
    1728:	66 e0       	ldi	r22, 0x06	; 6
    172a:	40 e0       	ldi	r20, 0x00	; 0
    172c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
		switch (tens)
    1730:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1732:	28 2f       	mov	r18, r24
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	3d a3       	std	Y+37, r19	; 0x25
    1738:	2c a3       	std	Y+36, r18	; 0x24
    173a:	8c a1       	ldd	r24, Y+36	; 0x24
    173c:	9d a1       	ldd	r25, Y+37	; 0x25
    173e:	84 30       	cpi	r24, 0x04	; 4
    1740:	91 05       	cpc	r25, r1
    1742:	09 f4       	brne	.+2      	; 0x1746 <H_SSD_void_DisplayNumber+0x53a>
    1744:	f0 c0       	rjmp	.+480    	; 0x1926 <H_SSD_void_DisplayNumber+0x71a>
    1746:	2c a1       	ldd	r18, Y+36	; 0x24
    1748:	3d a1       	ldd	r19, Y+37	; 0x25
    174a:	25 30       	cpi	r18, 0x05	; 5
    174c:	31 05       	cpc	r19, r1
    174e:	ec f4       	brge	.+58     	; 0x178a <H_SSD_void_DisplayNumber+0x57e>
    1750:	8c a1       	ldd	r24, Y+36	; 0x24
    1752:	9d a1       	ldd	r25, Y+37	; 0x25
    1754:	81 30       	cpi	r24, 0x01	; 1
    1756:	91 05       	cpc	r25, r1
    1758:	09 f4       	brne	.+2      	; 0x175c <H_SSD_void_DisplayNumber+0x550>
    175a:	6a c0       	rjmp	.+212    	; 0x1830 <H_SSD_void_DisplayNumber+0x624>
    175c:	2c a1       	ldd	r18, Y+36	; 0x24
    175e:	3d a1       	ldd	r19, Y+37	; 0x25
    1760:	22 30       	cpi	r18, 0x02	; 2
    1762:	31 05       	cpc	r19, r1
    1764:	2c f4       	brge	.+10     	; 0x1770 <H_SSD_void_DisplayNumber+0x564>
    1766:	8c a1       	ldd	r24, Y+36	; 0x24
    1768:	9d a1       	ldd	r25, Y+37	; 0x25
    176a:	00 97       	sbiw	r24, 0x00	; 0
    176c:	99 f1       	breq	.+102    	; 0x17d4 <H_SSD_void_DisplayNumber+0x5c8>
    176e:	d0 c1       	rjmp	.+928    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
    1770:	2c a1       	ldd	r18, Y+36	; 0x24
    1772:	3d a1       	ldd	r19, Y+37	; 0x25
    1774:	22 30       	cpi	r18, 0x02	; 2
    1776:	31 05       	cpc	r19, r1
    1778:	09 f4       	brne	.+2      	; 0x177c <H_SSD_void_DisplayNumber+0x570>
    177a:	83 c0       	rjmp	.+262    	; 0x1882 <H_SSD_void_DisplayNumber+0x676>
    177c:	8c a1       	ldd	r24, Y+36	; 0x24
    177e:	9d a1       	ldd	r25, Y+37	; 0x25
    1780:	83 30       	cpi	r24, 0x03	; 3
    1782:	91 05       	cpc	r25, r1
    1784:	09 f4       	brne	.+2      	; 0x1788 <H_SSD_void_DisplayNumber+0x57c>
    1786:	a6 c0       	rjmp	.+332    	; 0x18d4 <H_SSD_void_DisplayNumber+0x6c8>
    1788:	c3 c1       	rjmp	.+902    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
    178a:	2c a1       	ldd	r18, Y+36	; 0x24
    178c:	3d a1       	ldd	r19, Y+37	; 0x25
    178e:	27 30       	cpi	r18, 0x07	; 7
    1790:	31 05       	cpc	r19, r1
    1792:	09 f4       	brne	.+2      	; 0x1796 <H_SSD_void_DisplayNumber+0x58a>
    1794:	43 c1       	rjmp	.+646    	; 0x1a1c <H_SSD_void_DisplayNumber+0x810>
    1796:	8c a1       	ldd	r24, Y+36	; 0x24
    1798:	9d a1       	ldd	r25, Y+37	; 0x25
    179a:	88 30       	cpi	r24, 0x08	; 8
    179c:	91 05       	cpc	r25, r1
    179e:	6c f4       	brge	.+26     	; 0x17ba <H_SSD_void_DisplayNumber+0x5ae>
    17a0:	2c a1       	ldd	r18, Y+36	; 0x24
    17a2:	3d a1       	ldd	r19, Y+37	; 0x25
    17a4:	25 30       	cpi	r18, 0x05	; 5
    17a6:	31 05       	cpc	r19, r1
    17a8:	09 f4       	brne	.+2      	; 0x17ac <H_SSD_void_DisplayNumber+0x5a0>
    17aa:	e6 c0       	rjmp	.+460    	; 0x1978 <H_SSD_void_DisplayNumber+0x76c>
    17ac:	8c a1       	ldd	r24, Y+36	; 0x24
    17ae:	9d a1       	ldd	r25, Y+37	; 0x25
    17b0:	86 30       	cpi	r24, 0x06	; 6
    17b2:	91 05       	cpc	r25, r1
    17b4:	09 f4       	brne	.+2      	; 0x17b8 <H_SSD_void_DisplayNumber+0x5ac>
    17b6:	09 c1       	rjmp	.+530    	; 0x19ca <H_SSD_void_DisplayNumber+0x7be>
    17b8:	ab c1       	rjmp	.+854    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
    17ba:	2c a1       	ldd	r18, Y+36	; 0x24
    17bc:	3d a1       	ldd	r19, Y+37	; 0x25
    17be:	28 30       	cpi	r18, 0x08	; 8
    17c0:	31 05       	cpc	r19, r1
    17c2:	09 f4       	brne	.+2      	; 0x17c6 <H_SSD_void_DisplayNumber+0x5ba>
    17c4:	54 c1       	rjmp	.+680    	; 0x1a6e <H_SSD_void_DisplayNumber+0x862>
    17c6:	8c a1       	ldd	r24, Y+36	; 0x24
    17c8:	9d a1       	ldd	r25, Y+37	; 0x25
    17ca:	89 30       	cpi	r24, 0x09	; 9
    17cc:	91 05       	cpc	r25, r1
    17ce:	09 f4       	brne	.+2      	; 0x17d2 <H_SSD_void_DisplayNumber+0x5c6>
    17d0:	77 c1       	rjmp	.+750    	; 0x1ac0 <H_SSD_void_DisplayNumber+0x8b4>
    17d2:	9e c1       	rjmp	.+828    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
		{
		case 0:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    17d4:	81 e0       	ldi	r24, 0x01	; 1
    17d6:	61 e0       	ldi	r22, 0x01	; 1
    17d8:	41 e0       	ldi	r20, 0x01	; 1
    17da:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    17de:	81 e0       	ldi	r24, 0x01	; 1
    17e0:	62 e0       	ldi	r22, 0x02	; 2
    17e2:	41 e0       	ldi	r20, 0x01	; 1
    17e4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	63 e0       	ldi	r22, 0x03	; 3
    17ec:	41 e0       	ldi	r20, 0x01	; 1
    17ee:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    17f2:	81 e0       	ldi	r24, 0x01	; 1
    17f4:	64 e0       	ldi	r22, 0x04	; 4
    17f6:	41 e0       	ldi	r20, 0x01	; 1
    17f8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    17fc:	81 e0       	ldi	r24, 0x01	; 1
    17fe:	65 e0       	ldi	r22, 0x05	; 5
    1800:	41 e0       	ldi	r20, 0x01	; 1
    1802:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    1806:	81 e0       	ldi	r24, 0x01	; 1
    1808:	66 e0       	ldi	r22, 0x06	; 6
    180a:	41 e0       	ldi	r20, 0x01	; 1
    180c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    1810:	81 e0       	ldi	r24, 0x01	; 1
    1812:	61 e0       	ldi	r22, 0x01	; 1
    1814:	41 e0       	ldi	r20, 0x01	; 1
    1816:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    181a:	81 e0       	ldi	r24, 0x01	; 1
    181c:	67 e0       	ldi	r22, 0x07	; 7
    181e:	40 e0       	ldi	r20, 0x00	; 0
    1820:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1824:	82 e0       	ldi	r24, 0x02	; 2
    1826:	60 e0       	ldi	r22, 0x00	; 0
    1828:	40 e0       	ldi	r20, 0x00	; 0
    182a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    182e:	70 c1       	rjmp	.+736    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
					break;

				case 1:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
    1830:	81 e0       	ldi	r24, 0x01	; 1
    1832:	61 e0       	ldi	r22, 0x01	; 1
    1834:	40 e0       	ldi	r20, 0x00	; 0
    1836:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    183a:	81 e0       	ldi	r24, 0x01	; 1
    183c:	62 e0       	ldi	r22, 0x02	; 2
    183e:	41 e0       	ldi	r20, 0x01	; 1
    1840:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    1844:	81 e0       	ldi	r24, 0x01	; 1
    1846:	63 e0       	ldi	r22, 0x03	; 3
    1848:	41 e0       	ldi	r20, 0x01	; 1
    184a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    184e:	81 e0       	ldi	r24, 0x01	; 1
    1850:	64 e0       	ldi	r22, 0x04	; 4
    1852:	40 e0       	ldi	r20, 0x00	; 0
    1854:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    1858:	81 e0       	ldi	r24, 0x01	; 1
    185a:	65 e0       	ldi	r22, 0x05	; 5
    185c:	40 e0       	ldi	r20, 0x00	; 0
    185e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    1862:	81 e0       	ldi	r24, 0x01	; 1
    1864:	66 e0       	ldi	r22, 0x06	; 6
    1866:	40 e0       	ldi	r20, 0x00	; 0
    1868:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    186c:	81 e0       	ldi	r24, 0x01	; 1
    186e:	67 e0       	ldi	r22, 0x07	; 7
    1870:	40 e0       	ldi	r20, 0x00	; 0
    1872:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1876:	82 e0       	ldi	r24, 0x02	; 2
    1878:	60 e0       	ldi	r22, 0x00	; 0
    187a:	40 e0       	ldi	r20, 0x00	; 0
    187c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1880:	47 c1       	rjmp	.+654    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
					break;

				case 2:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    1882:	81 e0       	ldi	r24, 0x01	; 1
    1884:	61 e0       	ldi	r22, 0x01	; 1
    1886:	41 e0       	ldi	r20, 0x01	; 1
    1888:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    188c:	81 e0       	ldi	r24, 0x01	; 1
    188e:	62 e0       	ldi	r22, 0x02	; 2
    1890:	41 e0       	ldi	r20, 0x01	; 1
    1892:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,LOW);
    1896:	81 e0       	ldi	r24, 0x01	; 1
    1898:	63 e0       	ldi	r22, 0x03	; 3
    189a:	40 e0       	ldi	r20, 0x00	; 0
    189c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    18a0:	81 e0       	ldi	r24, 0x01	; 1
    18a2:	64 e0       	ldi	r22, 0x04	; 4
    18a4:	41 e0       	ldi	r20, 0x01	; 1
    18a6:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    18aa:	81 e0       	ldi	r24, 0x01	; 1
    18ac:	65 e0       	ldi	r22, 0x05	; 5
    18ae:	41 e0       	ldi	r20, 0x01	; 1
    18b0:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	66 e0       	ldi	r22, 0x06	; 6
    18b8:	40 e0       	ldi	r20, 0x00	; 0
    18ba:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    18be:	81 e0       	ldi	r24, 0x01	; 1
    18c0:	67 e0       	ldi	r22, 0x07	; 7
    18c2:	41 e0       	ldi	r20, 0x01	; 1
    18c4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    18c8:	82 e0       	ldi	r24, 0x02	; 2
    18ca:	60 e0       	ldi	r22, 0x00	; 0
    18cc:	40 e0       	ldi	r20, 0x00	; 0
    18ce:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    18d2:	1e c1       	rjmp	.+572    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
					break;

				case 3:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    18d4:	81 e0       	ldi	r24, 0x01	; 1
    18d6:	61 e0       	ldi	r22, 0x01	; 1
    18d8:	41 e0       	ldi	r20, 0x01	; 1
    18da:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	62 e0       	ldi	r22, 0x02	; 2
    18e2:	41 e0       	ldi	r20, 0x01	; 1
    18e4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    18e8:	81 e0       	ldi	r24, 0x01	; 1
    18ea:	63 e0       	ldi	r22, 0x03	; 3
    18ec:	41 e0       	ldi	r20, 0x01	; 1
    18ee:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	64 e0       	ldi	r22, 0x04	; 4
    18f6:	41 e0       	ldi	r20, 0x01	; 1
    18f8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    18fc:	81 e0       	ldi	r24, 0x01	; 1
    18fe:	65 e0       	ldi	r22, 0x05	; 5
    1900:	40 e0       	ldi	r20, 0x00	; 0
    1902:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	66 e0       	ldi	r22, 0x06	; 6
    190a:	40 e0       	ldi	r20, 0x00	; 0
    190c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    1910:	81 e0       	ldi	r24, 0x01	; 1
    1912:	67 e0       	ldi	r22, 0x07	; 7
    1914:	41 e0       	ldi	r20, 0x01	; 1
    1916:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    191a:	82 e0       	ldi	r24, 0x02	; 2
    191c:	60 e0       	ldi	r22, 0x00	; 0
    191e:	40 e0       	ldi	r20, 0x00	; 0
    1920:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1924:	f5 c0       	rjmp	.+490    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
					break;

				case 4:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,LOW);
    1926:	81 e0       	ldi	r24, 0x01	; 1
    1928:	61 e0       	ldi	r22, 0x01	; 1
    192a:	40 e0       	ldi	r20, 0x00	; 0
    192c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    1930:	81 e0       	ldi	r24, 0x01	; 1
    1932:	62 e0       	ldi	r22, 0x02	; 2
    1934:	41 e0       	ldi	r20, 0x01	; 1
    1936:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    193a:	81 e0       	ldi	r24, 0x01	; 1
    193c:	63 e0       	ldi	r22, 0x03	; 3
    193e:	41 e0       	ldi	r20, 0x01	; 1
    1940:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    1944:	81 e0       	ldi	r24, 0x01	; 1
    1946:	64 e0       	ldi	r22, 0x04	; 4
    1948:	40 e0       	ldi	r20, 0x00	; 0
    194a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    194e:	81 e0       	ldi	r24, 0x01	; 1
    1950:	65 e0       	ldi	r22, 0x05	; 5
    1952:	40 e0       	ldi	r20, 0x00	; 0
    1954:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    1958:	81 e0       	ldi	r24, 0x01	; 1
    195a:	66 e0       	ldi	r22, 0x06	; 6
    195c:	41 e0       	ldi	r20, 0x01	; 1
    195e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    1962:	81 e0       	ldi	r24, 0x01	; 1
    1964:	67 e0       	ldi	r22, 0x07	; 7
    1966:	41 e0       	ldi	r20, 0x01	; 1
    1968:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    196c:	82 e0       	ldi	r24, 0x02	; 2
    196e:	60 e0       	ldi	r22, 0x00	; 0
    1970:	40 e0       	ldi	r20, 0x00	; 0
    1972:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1976:	cc c0       	rjmp	.+408    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
					break;

				case 5:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    1978:	81 e0       	ldi	r24, 0x01	; 1
    197a:	61 e0       	ldi	r22, 0x01	; 1
    197c:	41 e0       	ldi	r20, 0x01	; 1
    197e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
    1982:	81 e0       	ldi	r24, 0x01	; 1
    1984:	62 e0       	ldi	r22, 0x02	; 2
    1986:	40 e0       	ldi	r20, 0x00	; 0
    1988:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    198c:	81 e0       	ldi	r24, 0x01	; 1
    198e:	63 e0       	ldi	r22, 0x03	; 3
    1990:	41 e0       	ldi	r20, 0x01	; 1
    1992:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    1996:	81 e0       	ldi	r24, 0x01	; 1
    1998:	64 e0       	ldi	r22, 0x04	; 4
    199a:	41 e0       	ldi	r20, 0x01	; 1
    199c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    19a0:	81 e0       	ldi	r24, 0x01	; 1
    19a2:	65 e0       	ldi	r22, 0x05	; 5
    19a4:	40 e0       	ldi	r20, 0x00	; 0
    19a6:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    19aa:	81 e0       	ldi	r24, 0x01	; 1
    19ac:	66 e0       	ldi	r22, 0x06	; 6
    19ae:	41 e0       	ldi	r20, 0x01	; 1
    19b0:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    19b4:	81 e0       	ldi	r24, 0x01	; 1
    19b6:	67 e0       	ldi	r22, 0x07	; 7
    19b8:	41 e0       	ldi	r20, 0x01	; 1
    19ba:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    19be:	82 e0       	ldi	r24, 0x02	; 2
    19c0:	60 e0       	ldi	r22, 0x00	; 0
    19c2:	40 e0       	ldi	r20, 0x00	; 0
    19c4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    19c8:	a3 c0       	rjmp	.+326    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
					break;
				case 6:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    19ca:	81 e0       	ldi	r24, 0x01	; 1
    19cc:	61 e0       	ldi	r22, 0x01	; 1
    19ce:	41 e0       	ldi	r20, 0x01	; 1
    19d0:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,LOW);
    19d4:	81 e0       	ldi	r24, 0x01	; 1
    19d6:	62 e0       	ldi	r22, 0x02	; 2
    19d8:	40 e0       	ldi	r20, 0x00	; 0
    19da:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    19de:	81 e0       	ldi	r24, 0x01	; 1
    19e0:	63 e0       	ldi	r22, 0x03	; 3
    19e2:	41 e0       	ldi	r20, 0x01	; 1
    19e4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    19e8:	81 e0       	ldi	r24, 0x01	; 1
    19ea:	64 e0       	ldi	r22, 0x04	; 4
    19ec:	41 e0       	ldi	r20, 0x01	; 1
    19ee:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    19f2:	81 e0       	ldi	r24, 0x01	; 1
    19f4:	65 e0       	ldi	r22, 0x05	; 5
    19f6:	41 e0       	ldi	r20, 0x01	; 1
    19f8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    19fc:	81 e0       	ldi	r24, 0x01	; 1
    19fe:	66 e0       	ldi	r22, 0x06	; 6
    1a00:	41 e0       	ldi	r20, 0x01	; 1
    1a02:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    1a06:	81 e0       	ldi	r24, 0x01	; 1
    1a08:	67 e0       	ldi	r22, 0x07	; 7
    1a0a:	41 e0       	ldi	r20, 0x01	; 1
    1a0c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1a10:	82 e0       	ldi	r24, 0x02	; 2
    1a12:	60 e0       	ldi	r22, 0x00	; 0
    1a14:	40 e0       	ldi	r20, 0x00	; 0
    1a16:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1a1a:	7a c0       	rjmp	.+244    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
					break;
				case 7:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    1a1c:	81 e0       	ldi	r24, 0x01	; 1
    1a1e:	61 e0       	ldi	r22, 0x01	; 1
    1a20:	41 e0       	ldi	r20, 0x01	; 1
    1a22:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    1a26:	81 e0       	ldi	r24, 0x01	; 1
    1a28:	62 e0       	ldi	r22, 0x02	; 2
    1a2a:	41 e0       	ldi	r20, 0x01	; 1
    1a2c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    1a30:	81 e0       	ldi	r24, 0x01	; 1
    1a32:	63 e0       	ldi	r22, 0x03	; 3
    1a34:	41 e0       	ldi	r20, 0x01	; 1
    1a36:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,LOW);
    1a3a:	81 e0       	ldi	r24, 0x01	; 1
    1a3c:	64 e0       	ldi	r22, 0x04	; 4
    1a3e:	40 e0       	ldi	r20, 0x00	; 0
    1a40:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	65 e0       	ldi	r22, 0x05	; 5
    1a48:	40 e0       	ldi	r20, 0x00	; 0
    1a4a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,LOW);
    1a4e:	81 e0       	ldi	r24, 0x01	; 1
    1a50:	66 e0       	ldi	r22, 0x06	; 6
    1a52:	40 e0       	ldi	r20, 0x00	; 0
    1a54:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,LOW);
    1a58:	81 e0       	ldi	r24, 0x01	; 1
    1a5a:	67 e0       	ldi	r22, 0x07	; 7
    1a5c:	40 e0       	ldi	r20, 0x00	; 0
    1a5e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1a62:	82 e0       	ldi	r24, 0x02	; 2
    1a64:	60 e0       	ldi	r22, 0x00	; 0
    1a66:	40 e0       	ldi	r20, 0x00	; 0
    1a68:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1a6c:	51 c0       	rjmp	.+162    	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
					break;
				case 8:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    1a6e:	81 e0       	ldi	r24, 0x01	; 1
    1a70:	61 e0       	ldi	r22, 0x01	; 1
    1a72:	41 e0       	ldi	r20, 0x01	; 1
    1a74:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    1a78:	81 e0       	ldi	r24, 0x01	; 1
    1a7a:	62 e0       	ldi	r22, 0x02	; 2
    1a7c:	41 e0       	ldi	r20, 0x01	; 1
    1a7e:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    1a82:	81 e0       	ldi	r24, 0x01	; 1
    1a84:	63 e0       	ldi	r22, 0x03	; 3
    1a86:	41 e0       	ldi	r20, 0x01	; 1
    1a88:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    1a8c:	81 e0       	ldi	r24, 0x01	; 1
    1a8e:	64 e0       	ldi	r22, 0x04	; 4
    1a90:	41 e0       	ldi	r20, 0x01	; 1
    1a92:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,HIGH);
    1a96:	81 e0       	ldi	r24, 0x01	; 1
    1a98:	65 e0       	ldi	r22, 0x05	; 5
    1a9a:	41 e0       	ldi	r20, 0x01	; 1
    1a9c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    1aa0:	81 e0       	ldi	r24, 0x01	; 1
    1aa2:	66 e0       	ldi	r22, 0x06	; 6
    1aa4:	41 e0       	ldi	r20, 0x01	; 1
    1aa6:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    1aaa:	81 e0       	ldi	r24, 0x01	; 1
    1aac:	67 e0       	ldi	r22, 0x07	; 7
    1aae:	41 e0       	ldi	r20, 0x01	; 1
    1ab0:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1ab4:	82 e0       	ldi	r24, 0x02	; 2
    1ab6:	60 e0       	ldi	r22, 0x00	; 0
    1ab8:	40 e0       	ldi	r20, 0x00	; 0
    1aba:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1abe:	28 c0       	rjmp	.+80     	; 0x1b10 <H_SSD_void_DisplayNumber+0x904>
					break;
				case 9:
					M_DIO_void_setPinValue(SSD_LED_A_PORT,SSD_LED_A_PIN,HIGH);
    1ac0:	81 e0       	ldi	r24, 0x01	; 1
    1ac2:	61 e0       	ldi	r22, 0x01	; 1
    1ac4:	41 e0       	ldi	r20, 0x01	; 1
    1ac6:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_B_PORT,SSD_LED_B_PIN,HIGH);
    1aca:	81 e0       	ldi	r24, 0x01	; 1
    1acc:	62 e0       	ldi	r22, 0x02	; 2
    1ace:	41 e0       	ldi	r20, 0x01	; 1
    1ad0:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_C_PORT,SSD_LED_C_PIN,HIGH);
    1ad4:	81 e0       	ldi	r24, 0x01	; 1
    1ad6:	63 e0       	ldi	r22, 0x03	; 3
    1ad8:	41 e0       	ldi	r20, 0x01	; 1
    1ada:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_D_PORT,SSD_LED_D_PIN,HIGH);
    1ade:	81 e0       	ldi	r24, 0x01	; 1
    1ae0:	64 e0       	ldi	r22, 0x04	; 4
    1ae2:	41 e0       	ldi	r20, 0x01	; 1
    1ae4:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_E_PORT,SSD_LED_E_PIN,LOW);
    1ae8:	81 e0       	ldi	r24, 0x01	; 1
    1aea:	65 e0       	ldi	r22, 0x05	; 5
    1aec:	40 e0       	ldi	r20, 0x00	; 0
    1aee:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_F_PORT,SSD_LED_F_PIN,HIGH);
    1af2:	81 e0       	ldi	r24, 0x01	; 1
    1af4:	66 e0       	ldi	r22, 0x06	; 6
    1af6:	41 e0       	ldi	r20, 0x01	; 1
    1af8:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_G_PORT,SSD_LED_G_PIN,HIGH);
    1afc:	81 e0       	ldi	r24, 0x01	; 1
    1afe:	67 e0       	ldi	r22, 0x07	; 7
    1b00:	41 e0       	ldi	r20, 0x01	; 1
    1b02:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
					M_DIO_void_setPinValue(SSD_LED_DOT_PORT,SSD_LED_DOT_PIN,LOW);
    1b06:	82 e0       	ldi	r24, 0x02	; 2
    1b08:	60 e0       	ldi	r22, 0x00	; 0
    1b0a:	40 e0       	ldi	r20, 0x00	; 0
    1b0c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>



				}
		//enable digit 2
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,HIGH);
    1b10:	83 e0       	ldi	r24, 0x03	; 3
    1b12:	67 e0       	ldi	r22, 0x07	; 7
    1b14:	41 e0       	ldi	r20, 0x01	; 1
    1b16:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1b1a:	80 e0       	ldi	r24, 0x00	; 0
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	a0 e8       	ldi	r26, 0x80	; 128
    1b20:	bf e3       	ldi	r27, 0x3F	; 63
    1b22:	8b 87       	std	Y+11, r24	; 0x0b
    1b24:	9c 87       	std	Y+12, r25	; 0x0c
    1b26:	ad 87       	std	Y+13, r26	; 0x0d
    1b28:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b2a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b2c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b2e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b30:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b32:	20 e0       	ldi	r18, 0x00	; 0
    1b34:	30 e0       	ldi	r19, 0x00	; 0
    1b36:	4a e7       	ldi	r20, 0x7A	; 122
    1b38:	55 e4       	ldi	r21, 0x45	; 69
    1b3a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b3e:	dc 01       	movw	r26, r24
    1b40:	cb 01       	movw	r24, r22
    1b42:	8f 83       	std	Y+7, r24	; 0x07
    1b44:	98 87       	std	Y+8, r25	; 0x08
    1b46:	a9 87       	std	Y+9, r26	; 0x09
    1b48:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b4a:	6f 81       	ldd	r22, Y+7	; 0x07
    1b4c:	78 85       	ldd	r23, Y+8	; 0x08
    1b4e:	89 85       	ldd	r24, Y+9	; 0x09
    1b50:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b52:	20 e0       	ldi	r18, 0x00	; 0
    1b54:	30 e0       	ldi	r19, 0x00	; 0
    1b56:	40 e8       	ldi	r20, 0x80	; 128
    1b58:	5f e3       	ldi	r21, 0x3F	; 63
    1b5a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b5e:	88 23       	and	r24, r24
    1b60:	2c f4       	brge	.+10     	; 0x1b6c <H_SSD_void_DisplayNumber+0x960>
		__ticks = 1;
    1b62:	81 e0       	ldi	r24, 0x01	; 1
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	9e 83       	std	Y+6, r25	; 0x06
    1b68:	8d 83       	std	Y+5, r24	; 0x05
    1b6a:	3f c0       	rjmp	.+126    	; 0x1bea <H_SSD_void_DisplayNumber+0x9de>
	else if (__tmp > 65535)
    1b6c:	6f 81       	ldd	r22, Y+7	; 0x07
    1b6e:	78 85       	ldd	r23, Y+8	; 0x08
    1b70:	89 85       	ldd	r24, Y+9	; 0x09
    1b72:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b74:	20 e0       	ldi	r18, 0x00	; 0
    1b76:	3f ef       	ldi	r19, 0xFF	; 255
    1b78:	4f e7       	ldi	r20, 0x7F	; 127
    1b7a:	57 e4       	ldi	r21, 0x47	; 71
    1b7c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b80:	18 16       	cp	r1, r24
    1b82:	4c f5       	brge	.+82     	; 0x1bd6 <H_SSD_void_DisplayNumber+0x9ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b84:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b86:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b88:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b8a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b8c:	20 e0       	ldi	r18, 0x00	; 0
    1b8e:	30 e0       	ldi	r19, 0x00	; 0
    1b90:	40 e2       	ldi	r20, 0x20	; 32
    1b92:	51 e4       	ldi	r21, 0x41	; 65
    1b94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b98:	dc 01       	movw	r26, r24
    1b9a:	cb 01       	movw	r24, r22
    1b9c:	bc 01       	movw	r22, r24
    1b9e:	cd 01       	movw	r24, r26
    1ba0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ba4:	dc 01       	movw	r26, r24
    1ba6:	cb 01       	movw	r24, r22
    1ba8:	9e 83       	std	Y+6, r25	; 0x06
    1baa:	8d 83       	std	Y+5, r24	; 0x05
    1bac:	0f c0       	rjmp	.+30     	; 0x1bcc <H_SSD_void_DisplayNumber+0x9c0>
    1bae:	80 e9       	ldi	r24, 0x90	; 144
    1bb0:	91 e0       	ldi	r25, 0x01	; 1
    1bb2:	9c 83       	std	Y+4, r25	; 0x04
    1bb4:	8b 83       	std	Y+3, r24	; 0x03
    1bb6:	8b 81       	ldd	r24, Y+3	; 0x03
    1bb8:	9c 81       	ldd	r25, Y+4	; 0x04
    1bba:	01 97       	sbiw	r24, 0x01	; 1
    1bbc:	f1 f7       	brne	.-4      	; 0x1bba <H_SSD_void_DisplayNumber+0x9ae>
    1bbe:	9c 83       	std	Y+4, r25	; 0x04
    1bc0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bc2:	8d 81       	ldd	r24, Y+5	; 0x05
    1bc4:	9e 81       	ldd	r25, Y+6	; 0x06
    1bc6:	01 97       	sbiw	r24, 0x01	; 1
    1bc8:	9e 83       	std	Y+6, r25	; 0x06
    1bca:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bcc:	8d 81       	ldd	r24, Y+5	; 0x05
    1bce:	9e 81       	ldd	r25, Y+6	; 0x06
    1bd0:	00 97       	sbiw	r24, 0x00	; 0
    1bd2:	69 f7       	brne	.-38     	; 0x1bae <H_SSD_void_DisplayNumber+0x9a2>
    1bd4:	14 c0       	rjmp	.+40     	; 0x1bfe <H_SSD_void_DisplayNumber+0x9f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bd6:	6f 81       	ldd	r22, Y+7	; 0x07
    1bd8:	78 85       	ldd	r23, Y+8	; 0x08
    1bda:	89 85       	ldd	r24, Y+9	; 0x09
    1bdc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bde:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1be2:	dc 01       	movw	r26, r24
    1be4:	cb 01       	movw	r24, r22
    1be6:	9e 83       	std	Y+6, r25	; 0x06
    1be8:	8d 83       	std	Y+5, r24	; 0x05
    1bea:	8d 81       	ldd	r24, Y+5	; 0x05
    1bec:	9e 81       	ldd	r25, Y+6	; 0x06
    1bee:	9a 83       	std	Y+2, r25	; 0x02
    1bf0:	89 83       	std	Y+1, r24	; 0x01
    1bf2:	89 81       	ldd	r24, Y+1	; 0x01
    1bf4:	9a 81       	ldd	r25, Y+2	; 0x02
    1bf6:	01 97       	sbiw	r24, 0x01	; 1
    1bf8:	f1 f7       	brne	.-4      	; 0x1bf6 <H_SSD_void_DisplayNumber+0x9ea>
    1bfa:	9a 83       	std	Y+2, r25	; 0x02
    1bfc:	89 83       	std	Y+1, r24	; 0x01

		_delay_ms(1);
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
    1bfe:	83 e0       	ldi	r24, 0x03	; 3
    1c00:	67 e0       	ldi	r22, 0x07	; 7
    1c02:	40 e0       	ldi	r20, 0x00	; 0
    1c04:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
		return;
	}
	u32 i ;
	u8 units =number % 10;
	u8 tens = number/10;
	for(i=0;i<SSD_DISPLAYY_TIME ;i++){
    1c08:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c0a:	98 a1       	ldd	r25, Y+32	; 0x20
    1c0c:	a9 a1       	ldd	r26, Y+33	; 0x21
    1c0e:	ba a1       	ldd	r27, Y+34	; 0x22
    1c10:	01 96       	adiw	r24, 0x01	; 1
    1c12:	a1 1d       	adc	r26, r1
    1c14:	b1 1d       	adc	r27, r1
    1c16:	8f 8f       	std	Y+31, r24	; 0x1f
    1c18:	98 a3       	std	Y+32, r25	; 0x20
    1c1a:	a9 a3       	std	Y+33, r26	; 0x21
    1c1c:	ba a3       	std	Y+34, r27	; 0x22
    1c1e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c20:	98 a1       	ldd	r25, Y+32	; 0x20
    1c22:	a9 a1       	ldd	r26, Y+33	; 0x21
    1c24:	ba a1       	ldd	r27, Y+34	; 0x22
    1c26:	8a 3f       	cpi	r24, 0xFA	; 250
    1c28:	91 05       	cpc	r25, r1
    1c2a:	a1 05       	cpc	r26, r1
    1c2c:	b1 05       	cpc	r27, r1
    1c2e:	08 f4       	brcc	.+2      	; 0x1c32 <H_SSD_void_DisplayNumber+0xa26>
    1c30:	0e cb       	rjmp	.-2532   	; 0x124e <H_SSD_void_DisplayNumber+0x42>
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,HIGH);

		_delay_ms(1);
		M_DIO_void_setPinValue(SSD_DIG_2_EN_PORT,SSD_DIG_2_EN_PIN,LOW);
	}
}
    1c32:	a7 96       	adiw	r28, 0x27	; 39
    1c34:	0f b6       	in	r0, 0x3f	; 63
    1c36:	f8 94       	cli
    1c38:	de bf       	out	0x3e, r29	; 62
    1c3a:	0f be       	out	0x3f, r0	; 63
    1c3c:	cd bf       	out	0x3d, r28	; 61
    1c3e:	cf 91       	pop	r28
    1c40:	df 91       	pop	r29
    1c42:	08 95       	ret

00001c44 <H_PB_void_init>:
#include"PB_int.h"
#include<util/delay.h>


void H_PB_void_init(const PB_t *ptr)
{
    1c44:	df 93       	push	r29
    1c46:	cf 93       	push	r28
    1c48:	00 d0       	rcall	.+0      	; 0x1c4a <H_PB_void_init+0x6>
    1c4a:	cd b7       	in	r28, 0x3d	; 61
    1c4c:	de b7       	in	r29, 0x3e	; 62
    1c4e:	9a 83       	std	Y+2, r25	; 0x02
    1c50:	89 83       	std	Y+1, r24	; 0x01
	M_DIO_void_setPinDir(ptr->PB_port, ptr->PB_pin,IN);
    1c52:	e9 81       	ldd	r30, Y+1	; 0x01
    1c54:	fa 81       	ldd	r31, Y+2	; 0x02
    1c56:	81 81       	ldd	r24, Z+1	; 0x01
    1c58:	e9 81       	ldd	r30, Y+1	; 0x01
    1c5a:	fa 81       	ldd	r31, Y+2	; 0x02
    1c5c:	92 81       	ldd	r25, Z+2	; 0x02
    1c5e:	69 2f       	mov	r22, r25
    1c60:	40 e0       	ldi	r20, 0x00	; 0
    1c62:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
}
    1c66:	0f 90       	pop	r0
    1c68:	0f 90       	pop	r0
    1c6a:	cf 91       	pop	r28
    1c6c:	df 91       	pop	r29
    1c6e:	08 95       	ret

00001c70 <H_PB_void_read>:
void H_PB_void_read(const PB_t *ptr,u8 *pvalue)
{
    1c70:	df 93       	push	r29
    1c72:	cf 93       	push	r28
    1c74:	cd b7       	in	r28, 0x3d	; 61
    1c76:	de b7       	in	r29, 0x3e	; 62
    1c78:	62 97       	sbiw	r28, 0x12	; 18
    1c7a:	0f b6       	in	r0, 0x3f	; 63
    1c7c:	f8 94       	cli
    1c7e:	de bf       	out	0x3e, r29	; 62
    1c80:	0f be       	out	0x3f, r0	; 63
    1c82:	cd bf       	out	0x3d, r28	; 61
    1c84:	98 8b       	std	Y+16, r25	; 0x10
    1c86:	8f 87       	std	Y+15, r24	; 0x0f
    1c88:	7a 8b       	std	Y+18, r23	; 0x12
    1c8a:	69 8b       	std	Y+17, r22	; 0x11
	//u8 read;

	if(ptr -> PB_activeMood == ACTIVE_LOW)
    1c8c:	ef 85       	ldd	r30, Y+15	; 0x0f
    1c8e:	f8 89       	ldd	r31, Y+16	; 0x10
    1c90:	83 81       	ldd	r24, Z+3	; 0x03
    1c92:	88 23       	and	r24, r24
    1c94:	d1 f4       	brne	.+52     	; 0x1cca <H_PB_void_read+0x5a>
	{
		*pvalue=NOT_PRESSED_ACTIVE_LOW ;
    1c96:	e9 89       	ldd	r30, Y+17	; 0x11
    1c98:	fa 89       	ldd	r31, Y+18	; 0x12
    1c9a:	81 e0       	ldi	r24, 0x01	; 1
    1c9c:	80 83       	st	Z, r24
		M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, pvalue);
    1c9e:	ef 85       	ldd	r30, Y+15	; 0x0f
    1ca0:	f8 89       	ldd	r31, Y+16	; 0x10
    1ca2:	81 81       	ldd	r24, Z+1	; 0x01
    1ca4:	ef 85       	ldd	r30, Y+15	; 0x0f
    1ca6:	f8 89       	ldd	r31, Y+16	; 0x10
    1ca8:	92 81       	ldd	r25, Z+2	; 0x02
    1caa:	29 89       	ldd	r18, Y+17	; 0x11
    1cac:	3a 89       	ldd	r19, Y+18	; 0x12
    1cae:	69 2f       	mov	r22, r25
    1cb0:	a9 01       	movw	r20, r18
    1cb2:	0e 94 cb 07 	call	0xf96	; 0xf96 <M_DIO_void_getPinValue>
		if(*pvalue==PRESSED_ACTIVE_LOW)
    1cb6:	e9 89       	ldd	r30, Y+17	; 0x11
    1cb8:	fa 89       	ldd	r31, Y+18	; 0x12
    1cba:	80 81       	ld	r24, Z
    1cbc:	88 23       	and	r24, r24
    1cbe:	09 f0       	breq	.+2      	; 0x1cc2 <H_PB_void_read+0x52>
    1cc0:	c1 c0       	rjmp	.+386    	; 0x1e44 <H_PB_void_read+0x1d4>
		{
			*pvalue=PRESSED_ACTIVE_LOW;
    1cc2:	e9 89       	ldd	r30, Y+17	; 0x11
    1cc4:	fa 89       	ldd	r31, Y+18	; 0x12
    1cc6:	10 82       	st	Z, r1
    1cc8:	bd c0       	rjmp	.+378    	; 0x1e44 <H_PB_void_read+0x1d4>
			return;
		}
	}
	else if(ptr->PB_activeMood==ACTIVE_HIGH)
    1cca:	ef 85       	ldd	r30, Y+15	; 0x0f
    1ccc:	f8 89       	ldd	r31, Y+16	; 0x10
    1cce:	83 81       	ldd	r24, Z+3	; 0x03
    1cd0:	81 30       	cpi	r24, 0x01	; 1
    1cd2:	09 f0       	breq	.+2      	; 0x1cd6 <H_PB_void_read+0x66>
    1cd4:	b7 c0       	rjmp	.+366    	; 0x1e44 <H_PB_void_read+0x1d4>
	{
		//u8 read;

		if(ptr->PB_activeMood==ACTIVE_HIGH)
    1cd6:	ef 85       	ldd	r30, Y+15	; 0x0f
    1cd8:	f8 89       	ldd	r31, Y+16	; 0x10
    1cda:	83 81       	ldd	r24, Z+3	; 0x03
    1cdc:	81 30       	cpi	r24, 0x01	; 1
    1cde:	09 f0       	breq	.+2      	; 0x1ce2 <H_PB_void_read+0x72>
    1ce0:	b1 c0       	rjmp	.+354    	; 0x1e44 <H_PB_void_read+0x1d4>
		{
			*pvalue=NOT_PRESSED_ACTIVEHIGH ;
    1ce2:	e9 89       	ldd	r30, Y+17	; 0x11
    1ce4:	fa 89       	ldd	r31, Y+18	; 0x12
    1ce6:	10 82       	st	Z, r1
			M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
    1ce8:	ef 85       	ldd	r30, Y+15	; 0x0f
    1cea:	f8 89       	ldd	r31, Y+16	; 0x10
    1cec:	81 81       	ldd	r24, Z+1	; 0x01
    1cee:	ef 85       	ldd	r30, Y+15	; 0x0f
    1cf0:	f8 89       	ldd	r31, Y+16	; 0x10
    1cf2:	92 81       	ldd	r25, Z+2	; 0x02
    1cf4:	9e 01       	movw	r18, r28
    1cf6:	2f 5e       	subi	r18, 0xEF	; 239
    1cf8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cfa:	69 2f       	mov	r22, r25
    1cfc:	a9 01       	movw	r20, r18
    1cfe:	0e 94 cb 07 	call	0xf96	; 0xf96 <M_DIO_void_getPinValue>
			if(*pvalue==PRESSED_ACTIVE_HIGH){
    1d02:	e9 89       	ldd	r30, Y+17	; 0x11
    1d04:	fa 89       	ldd	r31, Y+18	; 0x12
    1d06:	80 81       	ld	r24, Z
    1d08:	81 30       	cpi	r24, 0x01	; 1
    1d0a:	09 f0       	breq	.+2      	; 0x1d0e <H_PB_void_read+0x9e>
    1d0c:	9b c0       	rjmp	.+310    	; 0x1e44 <H_PB_void_read+0x1d4>
    1d0e:	80 e0       	ldi	r24, 0x00	; 0
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	a8 e4       	ldi	r26, 0x48	; 72
    1d14:	b3 e4       	ldi	r27, 0x43	; 67
    1d16:	8b 87       	std	Y+11, r24	; 0x0b
    1d18:	9c 87       	std	Y+12, r25	; 0x0c
    1d1a:	ad 87       	std	Y+13, r26	; 0x0d
    1d1c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d1e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d20:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d22:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d24:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d26:	20 e0       	ldi	r18, 0x00	; 0
    1d28:	30 e0       	ldi	r19, 0x00	; 0
    1d2a:	4a e7       	ldi	r20, 0x7A	; 122
    1d2c:	55 e4       	ldi	r21, 0x45	; 69
    1d2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d32:	dc 01       	movw	r26, r24
    1d34:	cb 01       	movw	r24, r22
    1d36:	8f 83       	std	Y+7, r24	; 0x07
    1d38:	98 87       	std	Y+8, r25	; 0x08
    1d3a:	a9 87       	std	Y+9, r26	; 0x09
    1d3c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d3e:	6f 81       	ldd	r22, Y+7	; 0x07
    1d40:	78 85       	ldd	r23, Y+8	; 0x08
    1d42:	89 85       	ldd	r24, Y+9	; 0x09
    1d44:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	40 e8       	ldi	r20, 0x80	; 128
    1d4c:	5f e3       	ldi	r21, 0x3F	; 63
    1d4e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d52:	88 23       	and	r24, r24
    1d54:	2c f4       	brge	.+10     	; 0x1d60 <H_PB_void_read+0xf0>
		__ticks = 1;
    1d56:	81 e0       	ldi	r24, 0x01	; 1
    1d58:	90 e0       	ldi	r25, 0x00	; 0
    1d5a:	9e 83       	std	Y+6, r25	; 0x06
    1d5c:	8d 83       	std	Y+5, r24	; 0x05
    1d5e:	3f c0       	rjmp	.+126    	; 0x1dde <H_PB_void_read+0x16e>
	else if (__tmp > 65535)
    1d60:	6f 81       	ldd	r22, Y+7	; 0x07
    1d62:	78 85       	ldd	r23, Y+8	; 0x08
    1d64:	89 85       	ldd	r24, Y+9	; 0x09
    1d66:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d68:	20 e0       	ldi	r18, 0x00	; 0
    1d6a:	3f ef       	ldi	r19, 0xFF	; 255
    1d6c:	4f e7       	ldi	r20, 0x7F	; 127
    1d6e:	57 e4       	ldi	r21, 0x47	; 71
    1d70:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d74:	18 16       	cp	r1, r24
    1d76:	4c f5       	brge	.+82     	; 0x1dca <H_PB_void_read+0x15a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d78:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d7a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d7c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d7e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d80:	20 e0       	ldi	r18, 0x00	; 0
    1d82:	30 e0       	ldi	r19, 0x00	; 0
    1d84:	40 e2       	ldi	r20, 0x20	; 32
    1d86:	51 e4       	ldi	r21, 0x41	; 65
    1d88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d8c:	dc 01       	movw	r26, r24
    1d8e:	cb 01       	movw	r24, r22
    1d90:	bc 01       	movw	r22, r24
    1d92:	cd 01       	movw	r24, r26
    1d94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d98:	dc 01       	movw	r26, r24
    1d9a:	cb 01       	movw	r24, r22
    1d9c:	9e 83       	std	Y+6, r25	; 0x06
    1d9e:	8d 83       	std	Y+5, r24	; 0x05
    1da0:	0f c0       	rjmp	.+30     	; 0x1dc0 <H_PB_void_read+0x150>
    1da2:	80 e9       	ldi	r24, 0x90	; 144
    1da4:	91 e0       	ldi	r25, 0x01	; 1
    1da6:	9c 83       	std	Y+4, r25	; 0x04
    1da8:	8b 83       	std	Y+3, r24	; 0x03
    1daa:	8b 81       	ldd	r24, Y+3	; 0x03
    1dac:	9c 81       	ldd	r25, Y+4	; 0x04
    1dae:	01 97       	sbiw	r24, 0x01	; 1
    1db0:	f1 f7       	brne	.-4      	; 0x1dae <H_PB_void_read+0x13e>
    1db2:	9c 83       	std	Y+4, r25	; 0x04
    1db4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1db6:	8d 81       	ldd	r24, Y+5	; 0x05
    1db8:	9e 81       	ldd	r25, Y+6	; 0x06
    1dba:	01 97       	sbiw	r24, 0x01	; 1
    1dbc:	9e 83       	std	Y+6, r25	; 0x06
    1dbe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dc0:	8d 81       	ldd	r24, Y+5	; 0x05
    1dc2:	9e 81       	ldd	r25, Y+6	; 0x06
    1dc4:	00 97       	sbiw	r24, 0x00	; 0
    1dc6:	69 f7       	brne	.-38     	; 0x1da2 <H_PB_void_read+0x132>
    1dc8:	14 c0       	rjmp	.+40     	; 0x1df2 <H_PB_void_read+0x182>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dca:	6f 81       	ldd	r22, Y+7	; 0x07
    1dcc:	78 85       	ldd	r23, Y+8	; 0x08
    1dce:	89 85       	ldd	r24, Y+9	; 0x09
    1dd0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dd2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dd6:	dc 01       	movw	r26, r24
    1dd8:	cb 01       	movw	r24, r22
    1dda:	9e 83       	std	Y+6, r25	; 0x06
    1ddc:	8d 83       	std	Y+5, r24	; 0x05
    1dde:	8d 81       	ldd	r24, Y+5	; 0x05
    1de0:	9e 81       	ldd	r25, Y+6	; 0x06
    1de2:	9a 83       	std	Y+2, r25	; 0x02
    1de4:	89 83       	std	Y+1, r24	; 0x01
    1de6:	89 81       	ldd	r24, Y+1	; 0x01
    1de8:	9a 81       	ldd	r25, Y+2	; 0x02
    1dea:	01 97       	sbiw	r24, 0x01	; 1
    1dec:	f1 f7       	brne	.-4      	; 0x1dea <H_PB_void_read+0x17a>
    1dee:	9a 83       	std	Y+2, r25	; 0x02
    1df0:	89 83       	std	Y+1, r24	; 0x01
				_delay_ms(200);

				M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
    1df2:	ef 85       	ldd	r30, Y+15	; 0x0f
    1df4:	f8 89       	ldd	r31, Y+16	; 0x10
    1df6:	81 81       	ldd	r24, Z+1	; 0x01
    1df8:	ef 85       	ldd	r30, Y+15	; 0x0f
    1dfa:	f8 89       	ldd	r31, Y+16	; 0x10
    1dfc:	92 81       	ldd	r25, Z+2	; 0x02
    1dfe:	9e 01       	movw	r18, r28
    1e00:	2f 5e       	subi	r18, 0xEF	; 239
    1e02:	3f 4f       	sbci	r19, 0xFF	; 255
    1e04:	69 2f       	mov	r22, r25
    1e06:	a9 01       	movw	r20, r18
    1e08:	0e 94 cb 07 	call	0xf96	; 0xf96 <M_DIO_void_getPinValue>
				if (*pvalue==PRESSED_ACTIVE_HIGH)
    1e0c:	e9 89       	ldd	r30, Y+17	; 0x11
    1e0e:	fa 89       	ldd	r31, Y+18	; 0x12
    1e10:	80 81       	ld	r24, Z
    1e12:	81 30       	cpi	r24, 0x01	; 1
    1e14:	b9 f4       	brne	.+46     	; 0x1e44 <H_PB_void_read+0x1d4>
    1e16:	0d c0       	rjmp	.+26     	; 0x1e32 <H_PB_void_read+0x1c2>
				{
					while(*pvalue==PRESSED_ACTIVE_HIGH)
					{
						M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
    1e18:	ef 85       	ldd	r30, Y+15	; 0x0f
    1e1a:	f8 89       	ldd	r31, Y+16	; 0x10
    1e1c:	81 81       	ldd	r24, Z+1	; 0x01
    1e1e:	ef 85       	ldd	r30, Y+15	; 0x0f
    1e20:	f8 89       	ldd	r31, Y+16	; 0x10
    1e22:	92 81       	ldd	r25, Z+2	; 0x02
    1e24:	9e 01       	movw	r18, r28
    1e26:	2f 5e       	subi	r18, 0xEF	; 239
    1e28:	3f 4f       	sbci	r19, 0xFF	; 255
    1e2a:	69 2f       	mov	r22, r25
    1e2c:	a9 01       	movw	r20, r18
    1e2e:	0e 94 cb 07 	call	0xf96	; 0xf96 <M_DIO_void_getPinValue>
				_delay_ms(200);

				M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
				if (*pvalue==PRESSED_ACTIVE_HIGH)
				{
					while(*pvalue==PRESSED_ACTIVE_HIGH)
    1e32:	e9 89       	ldd	r30, Y+17	; 0x11
    1e34:	fa 89       	ldd	r31, Y+18	; 0x12
    1e36:	80 81       	ld	r24, Z
    1e38:	81 30       	cpi	r24, 0x01	; 1
    1e3a:	71 f3       	breq	.-36     	; 0x1e18 <H_PB_void_read+0x1a8>
					{
						M_DIO_void_getPinValue(ptr->PB_port, ptr->PB_pin, &pvalue);
					}
					*pvalue=PRESSED_ACTIVE_HIGH;
    1e3c:	e9 89       	ldd	r30, Y+17	; 0x11
    1e3e:	fa 89       	ldd	r31, Y+18	; 0x12
    1e40:	81 e0       	ldi	r24, 0x01	; 1
    1e42:	80 83       	st	Z, r24
				}

			}
		}
	}
}
    1e44:	62 96       	adiw	r28, 0x12	; 18
    1e46:	0f b6       	in	r0, 0x3f	; 63
    1e48:	f8 94       	cli
    1e4a:	de bf       	out	0x3e, r29	; 62
    1e4c:	0f be       	out	0x3f, r0	; 63
    1e4e:	cd bf       	out	0x3d, r28	; 61
    1e50:	cf 91       	pop	r28
    1e52:	df 91       	pop	r29
    1e54:	08 95       	ret

00001e56 <H_Led_void_ledInit>:
#include "LED_priv.h"
#include"LED_config.h"
#include"LED_int.h"

void  H_Led_void_ledInit(u8 LedID)
{
    1e56:	df 93       	push	r29
    1e58:	cf 93       	push	r28
    1e5a:	00 d0       	rcall	.+0      	; 0x1e5c <H_Led_void_ledInit+0x6>
    1e5c:	0f 92       	push	r0
    1e5e:	cd b7       	in	r28, 0x3d	; 61
    1e60:	de b7       	in	r29, 0x3e	; 62
    1e62:	89 83       	std	Y+1, r24	; 0x01
	switch (LedID)
    1e64:	89 81       	ldd	r24, Y+1	; 0x01
    1e66:	28 2f       	mov	r18, r24
    1e68:	30 e0       	ldi	r19, 0x00	; 0
    1e6a:	3b 83       	std	Y+3, r19	; 0x03
    1e6c:	2a 83       	std	Y+2, r18	; 0x02
    1e6e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e70:	9b 81       	ldd	r25, Y+3	; 0x03
    1e72:	81 30       	cpi	r24, 0x01	; 1
    1e74:	91 05       	cpc	r25, r1
    1e76:	79 f0       	breq	.+30     	; 0x1e96 <H_Led_void_ledInit+0x40>
    1e78:	2a 81       	ldd	r18, Y+2	; 0x02
    1e7a:	3b 81       	ldd	r19, Y+3	; 0x03
    1e7c:	22 30       	cpi	r18, 0x02	; 2
    1e7e:	31 05       	cpc	r19, r1
    1e80:	81 f0       	breq	.+32     	; 0x1ea2 <H_Led_void_ledInit+0x4c>
    1e82:	8a 81       	ldd	r24, Y+2	; 0x02
    1e84:	9b 81       	ldd	r25, Y+3	; 0x03
    1e86:	00 97       	sbiw	r24, 0x00	; 0
    1e88:	89 f4       	brne	.+34     	; 0x1eac <H_Led_void_ledInit+0x56>
	{
	case RED_LED :
			M_DIO_void_setPinDir(LED_RED_PORT,  LED_RED_PIN , OUT);
    1e8a:	83 e0       	ldi	r24, 0x03	; 3
    1e8c:	60 e0       	ldi	r22, 0x00	; 0
    1e8e:	41 e0       	ldi	r20, 0x01	; 1
    1e90:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
    1e94:	0b c0       	rjmp	.+22     	; 0x1eac <H_Led_void_ledInit+0x56>
		break;
	case GRN_LED :
			M_DIO_void_setPinDir(LED_GRN_PORT,  LED_GRN_PIN , OUT);
    1e96:	83 e0       	ldi	r24, 0x03	; 3
    1e98:	62 e0       	ldi	r22, 0x02	; 2
    1e9a:	41 e0       	ldi	r20, 0x01	; 1
    1e9c:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
    1ea0:	05 c0       	rjmp	.+10     	; 0x1eac <H_Led_void_ledInit+0x56>
			break;
	case BLU_LED :
			M_DIO_void_setPinDir(LED_BLU_PORT,  LED_BLU_PIN , OUT);
    1ea2:	83 e0       	ldi	r24, 0x03	; 3
    1ea4:	61 e0       	ldi	r22, 0x01	; 1
    1ea6:	41 e0       	ldi	r20, 0x01	; 1
    1ea8:	0e 94 9b 05 	call	0xb36	; 0xb36 <M_DIO_void_setPinDir>
			break;
	}
}
    1eac:	0f 90       	pop	r0
    1eae:	0f 90       	pop	r0
    1eb0:	0f 90       	pop	r0
    1eb2:	cf 91       	pop	r28
    1eb4:	df 91       	pop	r29
    1eb6:	08 95       	ret

00001eb8 <H_Led_void_setON>:


void  H_Led_void_setON(u8 LedID)
{
    1eb8:	df 93       	push	r29
    1eba:	cf 93       	push	r28
    1ebc:	00 d0       	rcall	.+0      	; 0x1ebe <H_Led_void_setON+0x6>
    1ebe:	0f 92       	push	r0
    1ec0:	cd b7       	in	r28, 0x3d	; 61
    1ec2:	de b7       	in	r29, 0x3e	; 62
    1ec4:	89 83       	std	Y+1, r24	; 0x01
	switch(LedID)
    1ec6:	89 81       	ldd	r24, Y+1	; 0x01
    1ec8:	28 2f       	mov	r18, r24
    1eca:	30 e0       	ldi	r19, 0x00	; 0
    1ecc:	3b 83       	std	Y+3, r19	; 0x03
    1ece:	2a 83       	std	Y+2, r18	; 0x02
    1ed0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ed2:	9b 81       	ldd	r25, Y+3	; 0x03
    1ed4:	81 30       	cpi	r24, 0x01	; 1
    1ed6:	91 05       	cpc	r25, r1
    1ed8:	79 f0       	breq	.+30     	; 0x1ef8 <H_Led_void_setON+0x40>
    1eda:	2a 81       	ldd	r18, Y+2	; 0x02
    1edc:	3b 81       	ldd	r19, Y+3	; 0x03
    1ede:	22 30       	cpi	r18, 0x02	; 2
    1ee0:	31 05       	cpc	r19, r1
    1ee2:	81 f0       	breq	.+32     	; 0x1f04 <H_Led_void_setON+0x4c>
    1ee4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ee6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ee8:	00 97       	sbiw	r24, 0x00	; 0
    1eea:	89 f4       	brne	.+34     	; 0x1f0e <H_Led_void_setON+0x56>
	{
	case RED_LED :
#if (LED_RED_DIRECTION == LED_FORWARD )
		M_DIO_void_setPinValue(LED_RED_PORT,LED_RED_PIN,HIGH);
    1eec:	83 e0       	ldi	r24, 0x03	; 3
    1eee:	60 e0       	ldi	r22, 0x00	; 0
    1ef0:	41 e0       	ldi	r20, 0x01	; 1
    1ef2:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1ef6:	0b c0       	rjmp	.+22     	; 0x1f0e <H_Led_void_setON+0x56>
#endif
		break;

	case GRN_LED :
#if (LED_GRN_DIRECTION == LED_FORWARD )
		M_DIO_void_setPinValue(LED_GRN_PORT,LED_GRN_PIN,HIGH);
    1ef8:	83 e0       	ldi	r24, 0x03	; 3
    1efa:	62 e0       	ldi	r22, 0x02	; 2
    1efc:	41 e0       	ldi	r20, 0x01	; 1
    1efe:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1f02:	05 c0       	rjmp	.+10     	; 0x1f0e <H_Led_void_setON+0x56>
		M_DIO_void_setPinValue(LED_GRN_PORT,LED_GRN_PIN,LOW);
#endif
		break;
	case BLU_LED :
	#if (LED_BLU_DIRECTION == LED_FORWARD )
			M_DIO_void_setPinValue(LED_BLU_PORT,LED_BLU_PIN,HIGH);
    1f04:	83 e0       	ldi	r24, 0x03	; 3
    1f06:	61 e0       	ldi	r22, 0x01	; 1
    1f08:	41 e0       	ldi	r20, 0x01	; 1
    1f0a:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
			break;



	}
}
    1f0e:	0f 90       	pop	r0
    1f10:	0f 90       	pop	r0
    1f12:	0f 90       	pop	r0
    1f14:	cf 91       	pop	r28
    1f16:	df 91       	pop	r29
    1f18:	08 95       	ret

00001f1a <H_Led_void_setOFF>:
void  H_Led_void_setOFF(u8 LedID)
{
    1f1a:	df 93       	push	r29
    1f1c:	cf 93       	push	r28
    1f1e:	00 d0       	rcall	.+0      	; 0x1f20 <H_Led_void_setOFF+0x6>
    1f20:	0f 92       	push	r0
    1f22:	cd b7       	in	r28, 0x3d	; 61
    1f24:	de b7       	in	r29, 0x3e	; 62
    1f26:	89 83       	std	Y+1, r24	; 0x01
	switch(LedID)
    1f28:	89 81       	ldd	r24, Y+1	; 0x01
    1f2a:	28 2f       	mov	r18, r24
    1f2c:	30 e0       	ldi	r19, 0x00	; 0
    1f2e:	3b 83       	std	Y+3, r19	; 0x03
    1f30:	2a 83       	std	Y+2, r18	; 0x02
    1f32:	8a 81       	ldd	r24, Y+2	; 0x02
    1f34:	9b 81       	ldd	r25, Y+3	; 0x03
    1f36:	81 30       	cpi	r24, 0x01	; 1
    1f38:	91 05       	cpc	r25, r1
    1f3a:	79 f0       	breq	.+30     	; 0x1f5a <H_Led_void_setOFF+0x40>
    1f3c:	2a 81       	ldd	r18, Y+2	; 0x02
    1f3e:	3b 81       	ldd	r19, Y+3	; 0x03
    1f40:	22 30       	cpi	r18, 0x02	; 2
    1f42:	31 05       	cpc	r19, r1
    1f44:	81 f0       	breq	.+32     	; 0x1f66 <H_Led_void_setOFF+0x4c>
    1f46:	8a 81       	ldd	r24, Y+2	; 0x02
    1f48:	9b 81       	ldd	r25, Y+3	; 0x03
    1f4a:	00 97       	sbiw	r24, 0x00	; 0
    1f4c:	89 f4       	brne	.+34     	; 0x1f70 <H_Led_void_setOFF+0x56>
		{
		case RED_LED :
	#if (LED_RED_DIRECTION == LED_FORWARD )
			M_DIO_void_setPinValue(LED_RED_PORT,LED_RED_PIN,LOW);
    1f4e:	83 e0       	ldi	r24, 0x03	; 3
    1f50:	60 e0       	ldi	r22, 0x00	; 0
    1f52:	40 e0       	ldi	r20, 0x00	; 0
    1f54:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1f58:	0b c0       	rjmp	.+22     	; 0x1f70 <H_Led_void_setOFF+0x56>
	#endif
			break;

		case GRN_LED :
	#if (LED_GRN_DIRECTION == LED_FORWARD )
			M_DIO_void_setPinValue(LED_GRN_PORT,LED_GRN_PIN,LOW);
    1f5a:	83 e0       	ldi	r24, 0x03	; 3
    1f5c:	62 e0       	ldi	r22, 0x02	; 2
    1f5e:	40 e0       	ldi	r20, 0x00	; 0
    1f60:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
    1f64:	05 c0       	rjmp	.+10     	; 0x1f70 <H_Led_void_setOFF+0x56>
			M_DIO_void_setPinValue(LED_GRN_PORT,LED_GRN_PIN,HIGH);
	#endif
			break;
		case BLU_LED :
		#if (LED_BLU_DIRECTION == LED_FORWARD )
				M_DIO_void_setPinValue(LED_BLU_PORT,LED_BLU_PIN,LOW);
    1f66:	83 e0       	ldi	r24, 0x03	; 3
    1f68:	61 e0       	ldi	r22, 0x01	; 1
    1f6a:	40 e0       	ldi	r20, 0x00	; 0
    1f6c:	0e 94 b3 06 	call	0xd66	; 0xd66 <M_DIO_void_setPinValue>
				M_DIO_void_setPinValue(LED_BLU_PORT,LED_BLU_PIN,HIGH);
		#endif
				break;

		}
}
    1f70:	0f 90       	pop	r0
    1f72:	0f 90       	pop	r0
    1f74:	0f 90       	pop	r0
    1f76:	cf 91       	pop	r28
    1f78:	df 91       	pop	r29
    1f7a:	08 95       	ret

00001f7c <H_Led_void_toggle>:

void  H_Led_void_toggle(u8 LedID)
{
    1f7c:	df 93       	push	r29
    1f7e:	cf 93       	push	r28
    1f80:	00 d0       	rcall	.+0      	; 0x1f82 <H_Led_void_toggle+0x6>
    1f82:	0f 92       	push	r0
    1f84:	cd b7       	in	r28, 0x3d	; 61
    1f86:	de b7       	in	r29, 0x3e	; 62
    1f88:	89 83       	std	Y+1, r24	; 0x01
	switch (LedID)
    1f8a:	89 81       	ldd	r24, Y+1	; 0x01
    1f8c:	28 2f       	mov	r18, r24
    1f8e:	30 e0       	ldi	r19, 0x00	; 0
    1f90:	3b 83       	std	Y+3, r19	; 0x03
    1f92:	2a 83       	std	Y+2, r18	; 0x02
    1f94:	8a 81       	ldd	r24, Y+2	; 0x02
    1f96:	9b 81       	ldd	r25, Y+3	; 0x03
    1f98:	81 30       	cpi	r24, 0x01	; 1
    1f9a:	91 05       	cpc	r25, r1
    1f9c:	71 f0       	breq	.+28     	; 0x1fba <H_Led_void_toggle+0x3e>
    1f9e:	2a 81       	ldd	r18, Y+2	; 0x02
    1fa0:	3b 81       	ldd	r19, Y+3	; 0x03
    1fa2:	22 30       	cpi	r18, 0x02	; 2
    1fa4:	31 05       	cpc	r19, r1
    1fa6:	71 f0       	breq	.+28     	; 0x1fc4 <H_Led_void_toggle+0x48>
    1fa8:	8a 81       	ldd	r24, Y+2	; 0x02
    1faa:	9b 81       	ldd	r25, Y+3	; 0x03
    1fac:	00 97       	sbiw	r24, 0x00	; 0
    1fae:	71 f4       	brne	.+28     	; 0x1fcc <H_Led_void_toggle+0x50>
		{
		case RED_LED :
			 M_DIO_void_TogPinValue(LED_RED_PORT,LED_RED_PIN);
    1fb0:	83 e0       	ldi	r24, 0x03	; 3
    1fb2:	60 e0       	ldi	r22, 0x00	; 0
    1fb4:	0e 94 4f 08 	call	0x109e	; 0x109e <M_DIO_void_TogPinValue>
    1fb8:	09 c0       	rjmp	.+18     	; 0x1fcc <H_Led_void_toggle+0x50>

			break;
		case GRN_LED :
			 M_DIO_void_TogPinValue(LED_GRN_PORT, LED_GRN_PIN);
    1fba:	83 e0       	ldi	r24, 0x03	; 3
    1fbc:	62 e0       	ldi	r22, 0x02	; 2
    1fbe:	0e 94 4f 08 	call	0x109e	; 0x109e <M_DIO_void_TogPinValue>
    1fc2:	04 c0       	rjmp	.+8      	; 0x1fcc <H_Led_void_toggle+0x50>

				break;
		case BLU_LED :
			 M_DIO_void_TogPinValue(LED_BLU_PORT,LED_BLU_PIN);
    1fc4:	83 e0       	ldi	r24, 0x03	; 3
    1fc6:	61 e0       	ldi	r22, 0x01	; 1
    1fc8:	0e 94 4f 08 	call	0x109e	; 0x109e <M_DIO_void_TogPinValue>

				break;
		}
}
    1fcc:	0f 90       	pop	r0
    1fce:	0f 90       	pop	r0
    1fd0:	0f 90       	pop	r0
    1fd2:	cf 91       	pop	r28
    1fd4:	df 91       	pop	r29
    1fd6:	08 95       	ret

00001fd8 <Animation1>:

void Animation1()
{
    1fd8:	0f 93       	push	r16
    1fda:	1f 93       	push	r17
    1fdc:	df 93       	push	r29
    1fde:	cf 93       	push	r28
    1fe0:	cd b7       	in	r28, 0x3d	; 61
    1fe2:	de b7       	in	r29, 0x3e	; 62
    1fe4:	c4 55       	subi	r28, 0x54	; 84
    1fe6:	d0 40       	sbci	r29, 0x00	; 0
    1fe8:	0f b6       	in	r0, 0x3f	; 63
    1fea:	f8 94       	cli
    1fec:	de bf       	out	0x3e, r29	; 62
    1fee:	0f be       	out	0x3f, r0	; 63
    1ff0:	cd bf       	out	0x3d, r28	; 61
	H_Led_void_setON(RED_LED);
    1ff2:	80 e0       	ldi	r24, 0x00	; 0
    1ff4:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
	H_Led_void_setON(BLU_LED);
    1ff8:	82 e0       	ldi	r24, 0x02	; 2
    1ffa:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
    1ffe:	fe 01       	movw	r30, r28
    2000:	ef 5a       	subi	r30, 0xAF	; 175
    2002:	ff 4f       	sbci	r31, 0xFF	; 255
    2004:	80 e0       	ldi	r24, 0x00	; 0
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	aa ef       	ldi	r26, 0xFA	; 250
    200a:	b3 e4       	ldi	r27, 0x43	; 67
    200c:	80 83       	st	Z, r24
    200e:	91 83       	std	Z+1, r25	; 0x01
    2010:	a2 83       	std	Z+2, r26	; 0x02
    2012:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2014:	8e 01       	movw	r16, r28
    2016:	03 5b       	subi	r16, 0xB3	; 179
    2018:	1f 4f       	sbci	r17, 0xFF	; 255
    201a:	fe 01       	movw	r30, r28
    201c:	ef 5a       	subi	r30, 0xAF	; 175
    201e:	ff 4f       	sbci	r31, 0xFF	; 255
    2020:	60 81       	ld	r22, Z
    2022:	71 81       	ldd	r23, Z+1	; 0x01
    2024:	82 81       	ldd	r24, Z+2	; 0x02
    2026:	93 81       	ldd	r25, Z+3	; 0x03
    2028:	20 e0       	ldi	r18, 0x00	; 0
    202a:	30 e0       	ldi	r19, 0x00	; 0
    202c:	4a e7       	ldi	r20, 0x7A	; 122
    202e:	55 e4       	ldi	r21, 0x45	; 69
    2030:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2034:	dc 01       	movw	r26, r24
    2036:	cb 01       	movw	r24, r22
    2038:	f8 01       	movw	r30, r16
    203a:	80 83       	st	Z, r24
    203c:	91 83       	std	Z+1, r25	; 0x01
    203e:	a2 83       	std	Z+2, r26	; 0x02
    2040:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2042:	fe 01       	movw	r30, r28
    2044:	e3 5b       	subi	r30, 0xB3	; 179
    2046:	ff 4f       	sbci	r31, 0xFF	; 255
    2048:	60 81       	ld	r22, Z
    204a:	71 81       	ldd	r23, Z+1	; 0x01
    204c:	82 81       	ldd	r24, Z+2	; 0x02
    204e:	93 81       	ldd	r25, Z+3	; 0x03
    2050:	20 e0       	ldi	r18, 0x00	; 0
    2052:	30 e0       	ldi	r19, 0x00	; 0
    2054:	40 e8       	ldi	r20, 0x80	; 128
    2056:	5f e3       	ldi	r21, 0x3F	; 63
    2058:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    205c:	88 23       	and	r24, r24
    205e:	44 f4       	brge	.+16     	; 0x2070 <Animation1+0x98>
		__ticks = 1;
    2060:	fe 01       	movw	r30, r28
    2062:	e5 5b       	subi	r30, 0xB5	; 181
    2064:	ff 4f       	sbci	r31, 0xFF	; 255
    2066:	81 e0       	ldi	r24, 0x01	; 1
    2068:	90 e0       	ldi	r25, 0x00	; 0
    206a:	91 83       	std	Z+1, r25	; 0x01
    206c:	80 83       	st	Z, r24
    206e:	64 c0       	rjmp	.+200    	; 0x2138 <Animation1+0x160>
	else if (__tmp > 65535)
    2070:	fe 01       	movw	r30, r28
    2072:	e3 5b       	subi	r30, 0xB3	; 179
    2074:	ff 4f       	sbci	r31, 0xFF	; 255
    2076:	60 81       	ld	r22, Z
    2078:	71 81       	ldd	r23, Z+1	; 0x01
    207a:	82 81       	ldd	r24, Z+2	; 0x02
    207c:	93 81       	ldd	r25, Z+3	; 0x03
    207e:	20 e0       	ldi	r18, 0x00	; 0
    2080:	3f ef       	ldi	r19, 0xFF	; 255
    2082:	4f e7       	ldi	r20, 0x7F	; 127
    2084:	57 e4       	ldi	r21, 0x47	; 71
    2086:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    208a:	18 16       	cp	r1, r24
    208c:	0c f0       	brlt	.+2      	; 0x2090 <Animation1+0xb8>
    208e:	43 c0       	rjmp	.+134    	; 0x2116 <Animation1+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2090:	fe 01       	movw	r30, r28
    2092:	ef 5a       	subi	r30, 0xAF	; 175
    2094:	ff 4f       	sbci	r31, 0xFF	; 255
    2096:	60 81       	ld	r22, Z
    2098:	71 81       	ldd	r23, Z+1	; 0x01
    209a:	82 81       	ldd	r24, Z+2	; 0x02
    209c:	93 81       	ldd	r25, Z+3	; 0x03
    209e:	20 e0       	ldi	r18, 0x00	; 0
    20a0:	30 e0       	ldi	r19, 0x00	; 0
    20a2:	40 e2       	ldi	r20, 0x20	; 32
    20a4:	51 e4       	ldi	r21, 0x41	; 65
    20a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20aa:	dc 01       	movw	r26, r24
    20ac:	cb 01       	movw	r24, r22
    20ae:	8e 01       	movw	r16, r28
    20b0:	05 5b       	subi	r16, 0xB5	; 181
    20b2:	1f 4f       	sbci	r17, 0xFF	; 255
    20b4:	bc 01       	movw	r22, r24
    20b6:	cd 01       	movw	r24, r26
    20b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20bc:	dc 01       	movw	r26, r24
    20be:	cb 01       	movw	r24, r22
    20c0:	f8 01       	movw	r30, r16
    20c2:	91 83       	std	Z+1, r25	; 0x01
    20c4:	80 83       	st	Z, r24
    20c6:	1f c0       	rjmp	.+62     	; 0x2106 <Animation1+0x12e>
    20c8:	fe 01       	movw	r30, r28
    20ca:	e7 5b       	subi	r30, 0xB7	; 183
    20cc:	ff 4f       	sbci	r31, 0xFF	; 255
    20ce:	80 e9       	ldi	r24, 0x90	; 144
    20d0:	91 e0       	ldi	r25, 0x01	; 1
    20d2:	91 83       	std	Z+1, r25	; 0x01
    20d4:	80 83       	st	Z, r24
    20d6:	fe 01       	movw	r30, r28
    20d8:	e7 5b       	subi	r30, 0xB7	; 183
    20da:	ff 4f       	sbci	r31, 0xFF	; 255
    20dc:	80 81       	ld	r24, Z
    20de:	91 81       	ldd	r25, Z+1	; 0x01
    20e0:	01 97       	sbiw	r24, 0x01	; 1
    20e2:	f1 f7       	brne	.-4      	; 0x20e0 <Animation1+0x108>
    20e4:	fe 01       	movw	r30, r28
    20e6:	e7 5b       	subi	r30, 0xB7	; 183
    20e8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ea:	91 83       	std	Z+1, r25	; 0x01
    20ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ee:	de 01       	movw	r26, r28
    20f0:	a5 5b       	subi	r26, 0xB5	; 181
    20f2:	bf 4f       	sbci	r27, 0xFF	; 255
    20f4:	fe 01       	movw	r30, r28
    20f6:	e5 5b       	subi	r30, 0xB5	; 181
    20f8:	ff 4f       	sbci	r31, 0xFF	; 255
    20fa:	80 81       	ld	r24, Z
    20fc:	91 81       	ldd	r25, Z+1	; 0x01
    20fe:	01 97       	sbiw	r24, 0x01	; 1
    2100:	11 96       	adiw	r26, 0x01	; 1
    2102:	9c 93       	st	X, r25
    2104:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2106:	fe 01       	movw	r30, r28
    2108:	e5 5b       	subi	r30, 0xB5	; 181
    210a:	ff 4f       	sbci	r31, 0xFF	; 255
    210c:	80 81       	ld	r24, Z
    210e:	91 81       	ldd	r25, Z+1	; 0x01
    2110:	00 97       	sbiw	r24, 0x00	; 0
    2112:	d1 f6       	brne	.-76     	; 0x20c8 <Animation1+0xf0>
    2114:	27 c0       	rjmp	.+78     	; 0x2164 <Animation1+0x18c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2116:	8e 01       	movw	r16, r28
    2118:	05 5b       	subi	r16, 0xB5	; 181
    211a:	1f 4f       	sbci	r17, 0xFF	; 255
    211c:	fe 01       	movw	r30, r28
    211e:	e3 5b       	subi	r30, 0xB3	; 179
    2120:	ff 4f       	sbci	r31, 0xFF	; 255
    2122:	60 81       	ld	r22, Z
    2124:	71 81       	ldd	r23, Z+1	; 0x01
    2126:	82 81       	ldd	r24, Z+2	; 0x02
    2128:	93 81       	ldd	r25, Z+3	; 0x03
    212a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    212e:	dc 01       	movw	r26, r24
    2130:	cb 01       	movw	r24, r22
    2132:	f8 01       	movw	r30, r16
    2134:	91 83       	std	Z+1, r25	; 0x01
    2136:	80 83       	st	Z, r24
    2138:	de 01       	movw	r26, r28
    213a:	a9 5b       	subi	r26, 0xB9	; 185
    213c:	bf 4f       	sbci	r27, 0xFF	; 255
    213e:	fe 01       	movw	r30, r28
    2140:	e5 5b       	subi	r30, 0xB5	; 181
    2142:	ff 4f       	sbci	r31, 0xFF	; 255
    2144:	80 81       	ld	r24, Z
    2146:	91 81       	ldd	r25, Z+1	; 0x01
    2148:	8d 93       	st	X+, r24
    214a:	9c 93       	st	X, r25
    214c:	fe 01       	movw	r30, r28
    214e:	e9 5b       	subi	r30, 0xB9	; 185
    2150:	ff 4f       	sbci	r31, 0xFF	; 255
    2152:	80 81       	ld	r24, Z
    2154:	91 81       	ldd	r25, Z+1	; 0x01
    2156:	01 97       	sbiw	r24, 0x01	; 1
    2158:	f1 f7       	brne	.-4      	; 0x2156 <Animation1+0x17e>
    215a:	fe 01       	movw	r30, r28
    215c:	e9 5b       	subi	r30, 0xB9	; 185
    215e:	ff 4f       	sbci	r31, 0xFF	; 255
    2160:	91 83       	std	Z+1, r25	; 0x01
    2162:	80 83       	st	Z, r24
	_delay_ms(500);
	H_Led_void_setOFF(RED_LED);
    2164:	80 e0       	ldi	r24, 0x00	; 0
    2166:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
	H_Led_void_setOFF(BLU_LED);
    216a:	82 e0       	ldi	r24, 0x02	; 2
    216c:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
    2170:	fe 01       	movw	r30, r28
    2172:	ed 5b       	subi	r30, 0xBD	; 189
    2174:	ff 4f       	sbci	r31, 0xFF	; 255
    2176:	80 e0       	ldi	r24, 0x00	; 0
    2178:	90 e0       	ldi	r25, 0x00	; 0
    217a:	aa ef       	ldi	r26, 0xFA	; 250
    217c:	b3 e4       	ldi	r27, 0x43	; 67
    217e:	80 83       	st	Z, r24
    2180:	91 83       	std	Z+1, r25	; 0x01
    2182:	a2 83       	std	Z+2, r26	; 0x02
    2184:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2186:	8e 01       	movw	r16, r28
    2188:	01 5c       	subi	r16, 0xC1	; 193
    218a:	1f 4f       	sbci	r17, 0xFF	; 255
    218c:	fe 01       	movw	r30, r28
    218e:	ed 5b       	subi	r30, 0xBD	; 189
    2190:	ff 4f       	sbci	r31, 0xFF	; 255
    2192:	60 81       	ld	r22, Z
    2194:	71 81       	ldd	r23, Z+1	; 0x01
    2196:	82 81       	ldd	r24, Z+2	; 0x02
    2198:	93 81       	ldd	r25, Z+3	; 0x03
    219a:	20 e0       	ldi	r18, 0x00	; 0
    219c:	30 e0       	ldi	r19, 0x00	; 0
    219e:	4a e7       	ldi	r20, 0x7A	; 122
    21a0:	55 e4       	ldi	r21, 0x45	; 69
    21a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21a6:	dc 01       	movw	r26, r24
    21a8:	cb 01       	movw	r24, r22
    21aa:	f8 01       	movw	r30, r16
    21ac:	80 83       	st	Z, r24
    21ae:	91 83       	std	Z+1, r25	; 0x01
    21b0:	a2 83       	std	Z+2, r26	; 0x02
    21b2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21b4:	fe 01       	movw	r30, r28
    21b6:	ff 96       	adiw	r30, 0x3f	; 63
    21b8:	60 81       	ld	r22, Z
    21ba:	71 81       	ldd	r23, Z+1	; 0x01
    21bc:	82 81       	ldd	r24, Z+2	; 0x02
    21be:	93 81       	ldd	r25, Z+3	; 0x03
    21c0:	20 e0       	ldi	r18, 0x00	; 0
    21c2:	30 e0       	ldi	r19, 0x00	; 0
    21c4:	40 e8       	ldi	r20, 0x80	; 128
    21c6:	5f e3       	ldi	r21, 0x3F	; 63
    21c8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21cc:	88 23       	and	r24, r24
    21ce:	2c f4       	brge	.+10     	; 0x21da <Animation1+0x202>
		__ticks = 1;
    21d0:	81 e0       	ldi	r24, 0x01	; 1
    21d2:	90 e0       	ldi	r25, 0x00	; 0
    21d4:	9e af       	std	Y+62, r25	; 0x3e
    21d6:	8d af       	std	Y+61, r24	; 0x3d
    21d8:	46 c0       	rjmp	.+140    	; 0x2266 <Animation1+0x28e>
	else if (__tmp > 65535)
    21da:	fe 01       	movw	r30, r28
    21dc:	ff 96       	adiw	r30, 0x3f	; 63
    21de:	60 81       	ld	r22, Z
    21e0:	71 81       	ldd	r23, Z+1	; 0x01
    21e2:	82 81       	ldd	r24, Z+2	; 0x02
    21e4:	93 81       	ldd	r25, Z+3	; 0x03
    21e6:	20 e0       	ldi	r18, 0x00	; 0
    21e8:	3f ef       	ldi	r19, 0xFF	; 255
    21ea:	4f e7       	ldi	r20, 0x7F	; 127
    21ec:	57 e4       	ldi	r21, 0x47	; 71
    21ee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21f2:	18 16       	cp	r1, r24
    21f4:	64 f5       	brge	.+88     	; 0x224e <Animation1+0x276>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21f6:	fe 01       	movw	r30, r28
    21f8:	ed 5b       	subi	r30, 0xBD	; 189
    21fa:	ff 4f       	sbci	r31, 0xFF	; 255
    21fc:	60 81       	ld	r22, Z
    21fe:	71 81       	ldd	r23, Z+1	; 0x01
    2200:	82 81       	ldd	r24, Z+2	; 0x02
    2202:	93 81       	ldd	r25, Z+3	; 0x03
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	40 e2       	ldi	r20, 0x20	; 32
    220a:	51 e4       	ldi	r21, 0x41	; 65
    220c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2210:	dc 01       	movw	r26, r24
    2212:	cb 01       	movw	r24, r22
    2214:	bc 01       	movw	r22, r24
    2216:	cd 01       	movw	r24, r26
    2218:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    221c:	dc 01       	movw	r26, r24
    221e:	cb 01       	movw	r24, r22
    2220:	9e af       	std	Y+62, r25	; 0x3e
    2222:	8d af       	std	Y+61, r24	; 0x3d
    2224:	0f c0       	rjmp	.+30     	; 0x2244 <Animation1+0x26c>
    2226:	80 e9       	ldi	r24, 0x90	; 144
    2228:	91 e0       	ldi	r25, 0x01	; 1
    222a:	9c af       	std	Y+60, r25	; 0x3c
    222c:	8b af       	std	Y+59, r24	; 0x3b
    222e:	8b ad       	ldd	r24, Y+59	; 0x3b
    2230:	9c ad       	ldd	r25, Y+60	; 0x3c
    2232:	01 97       	sbiw	r24, 0x01	; 1
    2234:	f1 f7       	brne	.-4      	; 0x2232 <Animation1+0x25a>
    2236:	9c af       	std	Y+60, r25	; 0x3c
    2238:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    223a:	8d ad       	ldd	r24, Y+61	; 0x3d
    223c:	9e ad       	ldd	r25, Y+62	; 0x3e
    223e:	01 97       	sbiw	r24, 0x01	; 1
    2240:	9e af       	std	Y+62, r25	; 0x3e
    2242:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2244:	8d ad       	ldd	r24, Y+61	; 0x3d
    2246:	9e ad       	ldd	r25, Y+62	; 0x3e
    2248:	00 97       	sbiw	r24, 0x00	; 0
    224a:	69 f7       	brne	.-38     	; 0x2226 <Animation1+0x24e>
    224c:	16 c0       	rjmp	.+44     	; 0x227a <Animation1+0x2a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    224e:	fe 01       	movw	r30, r28
    2250:	ff 96       	adiw	r30, 0x3f	; 63
    2252:	60 81       	ld	r22, Z
    2254:	71 81       	ldd	r23, Z+1	; 0x01
    2256:	82 81       	ldd	r24, Z+2	; 0x02
    2258:	93 81       	ldd	r25, Z+3	; 0x03
    225a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    225e:	dc 01       	movw	r26, r24
    2260:	cb 01       	movw	r24, r22
    2262:	9e af       	std	Y+62, r25	; 0x3e
    2264:	8d af       	std	Y+61, r24	; 0x3d
    2266:	8d ad       	ldd	r24, Y+61	; 0x3d
    2268:	9e ad       	ldd	r25, Y+62	; 0x3e
    226a:	9a af       	std	Y+58, r25	; 0x3a
    226c:	89 af       	std	Y+57, r24	; 0x39
    226e:	89 ad       	ldd	r24, Y+57	; 0x39
    2270:	9a ad       	ldd	r25, Y+58	; 0x3a
    2272:	01 97       	sbiw	r24, 0x01	; 1
    2274:	f1 f7       	brne	.-4      	; 0x2272 <Animation1+0x29a>
    2276:	9a af       	std	Y+58, r25	; 0x3a
    2278:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(500);
    H_Led_void_setON(BLU_LED);
    227a:	82 e0       	ldi	r24, 0x02	; 2
    227c:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
    H_Led_void_setON(GRN_LED);
    2280:	81 e0       	ldi	r24, 0x01	; 1
    2282:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
    2286:	80 e0       	ldi	r24, 0x00	; 0
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	aa ef       	ldi	r26, 0xFA	; 250
    228c:	b3 e4       	ldi	r27, 0x43	; 67
    228e:	8d ab       	std	Y+53, r24	; 0x35
    2290:	9e ab       	std	Y+54, r25	; 0x36
    2292:	af ab       	std	Y+55, r26	; 0x37
    2294:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2296:	6d a9       	ldd	r22, Y+53	; 0x35
    2298:	7e a9       	ldd	r23, Y+54	; 0x36
    229a:	8f a9       	ldd	r24, Y+55	; 0x37
    229c:	98 ad       	ldd	r25, Y+56	; 0x38
    229e:	20 e0       	ldi	r18, 0x00	; 0
    22a0:	30 e0       	ldi	r19, 0x00	; 0
    22a2:	4a e7       	ldi	r20, 0x7A	; 122
    22a4:	55 e4       	ldi	r21, 0x45	; 69
    22a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22aa:	dc 01       	movw	r26, r24
    22ac:	cb 01       	movw	r24, r22
    22ae:	89 ab       	std	Y+49, r24	; 0x31
    22b0:	9a ab       	std	Y+50, r25	; 0x32
    22b2:	ab ab       	std	Y+51, r26	; 0x33
    22b4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    22b6:	69 a9       	ldd	r22, Y+49	; 0x31
    22b8:	7a a9       	ldd	r23, Y+50	; 0x32
    22ba:	8b a9       	ldd	r24, Y+51	; 0x33
    22bc:	9c a9       	ldd	r25, Y+52	; 0x34
    22be:	20 e0       	ldi	r18, 0x00	; 0
    22c0:	30 e0       	ldi	r19, 0x00	; 0
    22c2:	40 e8       	ldi	r20, 0x80	; 128
    22c4:	5f e3       	ldi	r21, 0x3F	; 63
    22c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22ca:	88 23       	and	r24, r24
    22cc:	2c f4       	brge	.+10     	; 0x22d8 <Animation1+0x300>
		__ticks = 1;
    22ce:	81 e0       	ldi	r24, 0x01	; 1
    22d0:	90 e0       	ldi	r25, 0x00	; 0
    22d2:	98 ab       	std	Y+48, r25	; 0x30
    22d4:	8f a7       	std	Y+47, r24	; 0x2f
    22d6:	3f c0       	rjmp	.+126    	; 0x2356 <Animation1+0x37e>
	else if (__tmp > 65535)
    22d8:	69 a9       	ldd	r22, Y+49	; 0x31
    22da:	7a a9       	ldd	r23, Y+50	; 0x32
    22dc:	8b a9       	ldd	r24, Y+51	; 0x33
    22de:	9c a9       	ldd	r25, Y+52	; 0x34
    22e0:	20 e0       	ldi	r18, 0x00	; 0
    22e2:	3f ef       	ldi	r19, 0xFF	; 255
    22e4:	4f e7       	ldi	r20, 0x7F	; 127
    22e6:	57 e4       	ldi	r21, 0x47	; 71
    22e8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22ec:	18 16       	cp	r1, r24
    22ee:	4c f5       	brge	.+82     	; 0x2342 <Animation1+0x36a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22f0:	6d a9       	ldd	r22, Y+53	; 0x35
    22f2:	7e a9       	ldd	r23, Y+54	; 0x36
    22f4:	8f a9       	ldd	r24, Y+55	; 0x37
    22f6:	98 ad       	ldd	r25, Y+56	; 0x38
    22f8:	20 e0       	ldi	r18, 0x00	; 0
    22fa:	30 e0       	ldi	r19, 0x00	; 0
    22fc:	40 e2       	ldi	r20, 0x20	; 32
    22fe:	51 e4       	ldi	r21, 0x41	; 65
    2300:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2304:	dc 01       	movw	r26, r24
    2306:	cb 01       	movw	r24, r22
    2308:	bc 01       	movw	r22, r24
    230a:	cd 01       	movw	r24, r26
    230c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2310:	dc 01       	movw	r26, r24
    2312:	cb 01       	movw	r24, r22
    2314:	98 ab       	std	Y+48, r25	; 0x30
    2316:	8f a7       	std	Y+47, r24	; 0x2f
    2318:	0f c0       	rjmp	.+30     	; 0x2338 <Animation1+0x360>
    231a:	80 e9       	ldi	r24, 0x90	; 144
    231c:	91 e0       	ldi	r25, 0x01	; 1
    231e:	9e a7       	std	Y+46, r25	; 0x2e
    2320:	8d a7       	std	Y+45, r24	; 0x2d
    2322:	8d a5       	ldd	r24, Y+45	; 0x2d
    2324:	9e a5       	ldd	r25, Y+46	; 0x2e
    2326:	01 97       	sbiw	r24, 0x01	; 1
    2328:	f1 f7       	brne	.-4      	; 0x2326 <Animation1+0x34e>
    232a:	9e a7       	std	Y+46, r25	; 0x2e
    232c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    232e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2330:	98 a9       	ldd	r25, Y+48	; 0x30
    2332:	01 97       	sbiw	r24, 0x01	; 1
    2334:	98 ab       	std	Y+48, r25	; 0x30
    2336:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2338:	8f a5       	ldd	r24, Y+47	; 0x2f
    233a:	98 a9       	ldd	r25, Y+48	; 0x30
    233c:	00 97       	sbiw	r24, 0x00	; 0
    233e:	69 f7       	brne	.-38     	; 0x231a <Animation1+0x342>
    2340:	14 c0       	rjmp	.+40     	; 0x236a <Animation1+0x392>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2342:	69 a9       	ldd	r22, Y+49	; 0x31
    2344:	7a a9       	ldd	r23, Y+50	; 0x32
    2346:	8b a9       	ldd	r24, Y+51	; 0x33
    2348:	9c a9       	ldd	r25, Y+52	; 0x34
    234a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    234e:	dc 01       	movw	r26, r24
    2350:	cb 01       	movw	r24, r22
    2352:	98 ab       	std	Y+48, r25	; 0x30
    2354:	8f a7       	std	Y+47, r24	; 0x2f
    2356:	8f a5       	ldd	r24, Y+47	; 0x2f
    2358:	98 a9       	ldd	r25, Y+48	; 0x30
    235a:	9c a7       	std	Y+44, r25	; 0x2c
    235c:	8b a7       	std	Y+43, r24	; 0x2b
    235e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2360:	9c a5       	ldd	r25, Y+44	; 0x2c
    2362:	01 97       	sbiw	r24, 0x01	; 1
    2364:	f1 f7       	brne	.-4      	; 0x2362 <Animation1+0x38a>
    2366:	9c a7       	std	Y+44, r25	; 0x2c
    2368:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(500);
    H_Led_void_setOFF(BLU_LED);
    236a:	82 e0       	ldi	r24, 0x02	; 2
    236c:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
    H_Led_void_setOFF(GRN_LED);
    2370:	81 e0       	ldi	r24, 0x01	; 1
    2372:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
    2376:	80 e0       	ldi	r24, 0x00	; 0
    2378:	90 e0       	ldi	r25, 0x00	; 0
    237a:	aa ef       	ldi	r26, 0xFA	; 250
    237c:	b3 e4       	ldi	r27, 0x43	; 67
    237e:	8f a3       	std	Y+39, r24	; 0x27
    2380:	98 a7       	std	Y+40, r25	; 0x28
    2382:	a9 a7       	std	Y+41, r26	; 0x29
    2384:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2386:	6f a1       	ldd	r22, Y+39	; 0x27
    2388:	78 a5       	ldd	r23, Y+40	; 0x28
    238a:	89 a5       	ldd	r24, Y+41	; 0x29
    238c:	9a a5       	ldd	r25, Y+42	; 0x2a
    238e:	20 e0       	ldi	r18, 0x00	; 0
    2390:	30 e0       	ldi	r19, 0x00	; 0
    2392:	4a e7       	ldi	r20, 0x7A	; 122
    2394:	55 e4       	ldi	r21, 0x45	; 69
    2396:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    239a:	dc 01       	movw	r26, r24
    239c:	cb 01       	movw	r24, r22
    239e:	8b a3       	std	Y+35, r24	; 0x23
    23a0:	9c a3       	std	Y+36, r25	; 0x24
    23a2:	ad a3       	std	Y+37, r26	; 0x25
    23a4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    23a6:	6b a1       	ldd	r22, Y+35	; 0x23
    23a8:	7c a1       	ldd	r23, Y+36	; 0x24
    23aa:	8d a1       	ldd	r24, Y+37	; 0x25
    23ac:	9e a1       	ldd	r25, Y+38	; 0x26
    23ae:	20 e0       	ldi	r18, 0x00	; 0
    23b0:	30 e0       	ldi	r19, 0x00	; 0
    23b2:	40 e8       	ldi	r20, 0x80	; 128
    23b4:	5f e3       	ldi	r21, 0x3F	; 63
    23b6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23ba:	88 23       	and	r24, r24
    23bc:	2c f4       	brge	.+10     	; 0x23c8 <Animation1+0x3f0>
		__ticks = 1;
    23be:	81 e0       	ldi	r24, 0x01	; 1
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	9a a3       	std	Y+34, r25	; 0x22
    23c4:	89 a3       	std	Y+33, r24	; 0x21
    23c6:	3f c0       	rjmp	.+126    	; 0x2446 <Animation1+0x46e>
	else if (__tmp > 65535)
    23c8:	6b a1       	ldd	r22, Y+35	; 0x23
    23ca:	7c a1       	ldd	r23, Y+36	; 0x24
    23cc:	8d a1       	ldd	r24, Y+37	; 0x25
    23ce:	9e a1       	ldd	r25, Y+38	; 0x26
    23d0:	20 e0       	ldi	r18, 0x00	; 0
    23d2:	3f ef       	ldi	r19, 0xFF	; 255
    23d4:	4f e7       	ldi	r20, 0x7F	; 127
    23d6:	57 e4       	ldi	r21, 0x47	; 71
    23d8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23dc:	18 16       	cp	r1, r24
    23de:	4c f5       	brge	.+82     	; 0x2432 <Animation1+0x45a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23e0:	6f a1       	ldd	r22, Y+39	; 0x27
    23e2:	78 a5       	ldd	r23, Y+40	; 0x28
    23e4:	89 a5       	ldd	r24, Y+41	; 0x29
    23e6:	9a a5       	ldd	r25, Y+42	; 0x2a
    23e8:	20 e0       	ldi	r18, 0x00	; 0
    23ea:	30 e0       	ldi	r19, 0x00	; 0
    23ec:	40 e2       	ldi	r20, 0x20	; 32
    23ee:	51 e4       	ldi	r21, 0x41	; 65
    23f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23f4:	dc 01       	movw	r26, r24
    23f6:	cb 01       	movw	r24, r22
    23f8:	bc 01       	movw	r22, r24
    23fa:	cd 01       	movw	r24, r26
    23fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2400:	dc 01       	movw	r26, r24
    2402:	cb 01       	movw	r24, r22
    2404:	9a a3       	std	Y+34, r25	; 0x22
    2406:	89 a3       	std	Y+33, r24	; 0x21
    2408:	0f c0       	rjmp	.+30     	; 0x2428 <Animation1+0x450>
    240a:	80 e9       	ldi	r24, 0x90	; 144
    240c:	91 e0       	ldi	r25, 0x01	; 1
    240e:	98 a3       	std	Y+32, r25	; 0x20
    2410:	8f 8f       	std	Y+31, r24	; 0x1f
    2412:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2414:	98 a1       	ldd	r25, Y+32	; 0x20
    2416:	01 97       	sbiw	r24, 0x01	; 1
    2418:	f1 f7       	brne	.-4      	; 0x2416 <Animation1+0x43e>
    241a:	98 a3       	std	Y+32, r25	; 0x20
    241c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    241e:	89 a1       	ldd	r24, Y+33	; 0x21
    2420:	9a a1       	ldd	r25, Y+34	; 0x22
    2422:	01 97       	sbiw	r24, 0x01	; 1
    2424:	9a a3       	std	Y+34, r25	; 0x22
    2426:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2428:	89 a1       	ldd	r24, Y+33	; 0x21
    242a:	9a a1       	ldd	r25, Y+34	; 0x22
    242c:	00 97       	sbiw	r24, 0x00	; 0
    242e:	69 f7       	brne	.-38     	; 0x240a <Animation1+0x432>
    2430:	14 c0       	rjmp	.+40     	; 0x245a <Animation1+0x482>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2432:	6b a1       	ldd	r22, Y+35	; 0x23
    2434:	7c a1       	ldd	r23, Y+36	; 0x24
    2436:	8d a1       	ldd	r24, Y+37	; 0x25
    2438:	9e a1       	ldd	r25, Y+38	; 0x26
    243a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    243e:	dc 01       	movw	r26, r24
    2440:	cb 01       	movw	r24, r22
    2442:	9a a3       	std	Y+34, r25	; 0x22
    2444:	89 a3       	std	Y+33, r24	; 0x21
    2446:	89 a1       	ldd	r24, Y+33	; 0x21
    2448:	9a a1       	ldd	r25, Y+34	; 0x22
    244a:	9e 8f       	std	Y+30, r25	; 0x1e
    244c:	8d 8f       	std	Y+29, r24	; 0x1d
    244e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2450:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2452:	01 97       	sbiw	r24, 0x01	; 1
    2454:	f1 f7       	brne	.-4      	; 0x2452 <Animation1+0x47a>
    2456:	9e 8f       	std	Y+30, r25	; 0x1e
    2458:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(500);
    H_Led_void_setON(RED_LED);
    245a:	80 e0       	ldi	r24, 0x00	; 0
    245c:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
    H_Led_void_setON(GRN_LED);
    2460:	81 e0       	ldi	r24, 0x01	; 1
    2462:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
    2466:	80 e0       	ldi	r24, 0x00	; 0
    2468:	90 e0       	ldi	r25, 0x00	; 0
    246a:	aa ef       	ldi	r26, 0xFA	; 250
    246c:	b3 e4       	ldi	r27, 0x43	; 67
    246e:	89 8f       	std	Y+25, r24	; 0x19
    2470:	9a 8f       	std	Y+26, r25	; 0x1a
    2472:	ab 8f       	std	Y+27, r26	; 0x1b
    2474:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2476:	69 8d       	ldd	r22, Y+25	; 0x19
    2478:	7a 8d       	ldd	r23, Y+26	; 0x1a
    247a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    247c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    247e:	20 e0       	ldi	r18, 0x00	; 0
    2480:	30 e0       	ldi	r19, 0x00	; 0
    2482:	4a e7       	ldi	r20, 0x7A	; 122
    2484:	55 e4       	ldi	r21, 0x45	; 69
    2486:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    248a:	dc 01       	movw	r26, r24
    248c:	cb 01       	movw	r24, r22
    248e:	8d 8b       	std	Y+21, r24	; 0x15
    2490:	9e 8b       	std	Y+22, r25	; 0x16
    2492:	af 8b       	std	Y+23, r26	; 0x17
    2494:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2496:	6d 89       	ldd	r22, Y+21	; 0x15
    2498:	7e 89       	ldd	r23, Y+22	; 0x16
    249a:	8f 89       	ldd	r24, Y+23	; 0x17
    249c:	98 8d       	ldd	r25, Y+24	; 0x18
    249e:	20 e0       	ldi	r18, 0x00	; 0
    24a0:	30 e0       	ldi	r19, 0x00	; 0
    24a2:	40 e8       	ldi	r20, 0x80	; 128
    24a4:	5f e3       	ldi	r21, 0x3F	; 63
    24a6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    24aa:	88 23       	and	r24, r24
    24ac:	2c f4       	brge	.+10     	; 0x24b8 <Animation1+0x4e0>
		__ticks = 1;
    24ae:	81 e0       	ldi	r24, 0x01	; 1
    24b0:	90 e0       	ldi	r25, 0x00	; 0
    24b2:	9c 8b       	std	Y+20, r25	; 0x14
    24b4:	8b 8b       	std	Y+19, r24	; 0x13
    24b6:	3f c0       	rjmp	.+126    	; 0x2536 <Animation1+0x55e>
	else if (__tmp > 65535)
    24b8:	6d 89       	ldd	r22, Y+21	; 0x15
    24ba:	7e 89       	ldd	r23, Y+22	; 0x16
    24bc:	8f 89       	ldd	r24, Y+23	; 0x17
    24be:	98 8d       	ldd	r25, Y+24	; 0x18
    24c0:	20 e0       	ldi	r18, 0x00	; 0
    24c2:	3f ef       	ldi	r19, 0xFF	; 255
    24c4:	4f e7       	ldi	r20, 0x7F	; 127
    24c6:	57 e4       	ldi	r21, 0x47	; 71
    24c8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24cc:	18 16       	cp	r1, r24
    24ce:	4c f5       	brge	.+82     	; 0x2522 <Animation1+0x54a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24d0:	69 8d       	ldd	r22, Y+25	; 0x19
    24d2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    24d4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    24d6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    24d8:	20 e0       	ldi	r18, 0x00	; 0
    24da:	30 e0       	ldi	r19, 0x00	; 0
    24dc:	40 e2       	ldi	r20, 0x20	; 32
    24de:	51 e4       	ldi	r21, 0x41	; 65
    24e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24e4:	dc 01       	movw	r26, r24
    24e6:	cb 01       	movw	r24, r22
    24e8:	bc 01       	movw	r22, r24
    24ea:	cd 01       	movw	r24, r26
    24ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24f0:	dc 01       	movw	r26, r24
    24f2:	cb 01       	movw	r24, r22
    24f4:	9c 8b       	std	Y+20, r25	; 0x14
    24f6:	8b 8b       	std	Y+19, r24	; 0x13
    24f8:	0f c0       	rjmp	.+30     	; 0x2518 <Animation1+0x540>
    24fa:	80 e9       	ldi	r24, 0x90	; 144
    24fc:	91 e0       	ldi	r25, 0x01	; 1
    24fe:	9a 8b       	std	Y+18, r25	; 0x12
    2500:	89 8b       	std	Y+17, r24	; 0x11
    2502:	89 89       	ldd	r24, Y+17	; 0x11
    2504:	9a 89       	ldd	r25, Y+18	; 0x12
    2506:	01 97       	sbiw	r24, 0x01	; 1
    2508:	f1 f7       	brne	.-4      	; 0x2506 <Animation1+0x52e>
    250a:	9a 8b       	std	Y+18, r25	; 0x12
    250c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    250e:	8b 89       	ldd	r24, Y+19	; 0x13
    2510:	9c 89       	ldd	r25, Y+20	; 0x14
    2512:	01 97       	sbiw	r24, 0x01	; 1
    2514:	9c 8b       	std	Y+20, r25	; 0x14
    2516:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2518:	8b 89       	ldd	r24, Y+19	; 0x13
    251a:	9c 89       	ldd	r25, Y+20	; 0x14
    251c:	00 97       	sbiw	r24, 0x00	; 0
    251e:	69 f7       	brne	.-38     	; 0x24fa <Animation1+0x522>
    2520:	14 c0       	rjmp	.+40     	; 0x254a <Animation1+0x572>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2522:	6d 89       	ldd	r22, Y+21	; 0x15
    2524:	7e 89       	ldd	r23, Y+22	; 0x16
    2526:	8f 89       	ldd	r24, Y+23	; 0x17
    2528:	98 8d       	ldd	r25, Y+24	; 0x18
    252a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    252e:	dc 01       	movw	r26, r24
    2530:	cb 01       	movw	r24, r22
    2532:	9c 8b       	std	Y+20, r25	; 0x14
    2534:	8b 8b       	std	Y+19, r24	; 0x13
    2536:	8b 89       	ldd	r24, Y+19	; 0x13
    2538:	9c 89       	ldd	r25, Y+20	; 0x14
    253a:	98 8b       	std	Y+16, r25	; 0x10
    253c:	8f 87       	std	Y+15, r24	; 0x0f
    253e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2540:	98 89       	ldd	r25, Y+16	; 0x10
    2542:	01 97       	sbiw	r24, 0x01	; 1
    2544:	f1 f7       	brne	.-4      	; 0x2542 <Animation1+0x56a>
    2546:	98 8b       	std	Y+16, r25	; 0x10
    2548:	8f 87       	std	Y+15, r24	; 0x0f
     _delay_ms(500);
     H_Led_void_setOFF(RED_LED);
    254a:	80 e0       	ldi	r24, 0x00	; 0
    254c:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
     H_Led_void_setOFF(GRN_LED);
    2550:	81 e0       	ldi	r24, 0x01	; 1
    2552:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
    2556:	80 e0       	ldi	r24, 0x00	; 0
    2558:	90 e0       	ldi	r25, 0x00	; 0
    255a:	aa ef       	ldi	r26, 0xFA	; 250
    255c:	b3 e4       	ldi	r27, 0x43	; 67
    255e:	8b 87       	std	Y+11, r24	; 0x0b
    2560:	9c 87       	std	Y+12, r25	; 0x0c
    2562:	ad 87       	std	Y+13, r26	; 0x0d
    2564:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2566:	6b 85       	ldd	r22, Y+11	; 0x0b
    2568:	7c 85       	ldd	r23, Y+12	; 0x0c
    256a:	8d 85       	ldd	r24, Y+13	; 0x0d
    256c:	9e 85       	ldd	r25, Y+14	; 0x0e
    256e:	20 e0       	ldi	r18, 0x00	; 0
    2570:	30 e0       	ldi	r19, 0x00	; 0
    2572:	4a e7       	ldi	r20, 0x7A	; 122
    2574:	55 e4       	ldi	r21, 0x45	; 69
    2576:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    257a:	dc 01       	movw	r26, r24
    257c:	cb 01       	movw	r24, r22
    257e:	8f 83       	std	Y+7, r24	; 0x07
    2580:	98 87       	std	Y+8, r25	; 0x08
    2582:	a9 87       	std	Y+9, r26	; 0x09
    2584:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2586:	6f 81       	ldd	r22, Y+7	; 0x07
    2588:	78 85       	ldd	r23, Y+8	; 0x08
    258a:	89 85       	ldd	r24, Y+9	; 0x09
    258c:	9a 85       	ldd	r25, Y+10	; 0x0a
    258e:	20 e0       	ldi	r18, 0x00	; 0
    2590:	30 e0       	ldi	r19, 0x00	; 0
    2592:	40 e8       	ldi	r20, 0x80	; 128
    2594:	5f e3       	ldi	r21, 0x3F	; 63
    2596:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    259a:	88 23       	and	r24, r24
    259c:	2c f4       	brge	.+10     	; 0x25a8 <Animation1+0x5d0>
		__ticks = 1;
    259e:	81 e0       	ldi	r24, 0x01	; 1
    25a0:	90 e0       	ldi	r25, 0x00	; 0
    25a2:	9e 83       	std	Y+6, r25	; 0x06
    25a4:	8d 83       	std	Y+5, r24	; 0x05
    25a6:	3f c0       	rjmp	.+126    	; 0x2626 <Animation1+0x64e>
	else if (__tmp > 65535)
    25a8:	6f 81       	ldd	r22, Y+7	; 0x07
    25aa:	78 85       	ldd	r23, Y+8	; 0x08
    25ac:	89 85       	ldd	r24, Y+9	; 0x09
    25ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    25b0:	20 e0       	ldi	r18, 0x00	; 0
    25b2:	3f ef       	ldi	r19, 0xFF	; 255
    25b4:	4f e7       	ldi	r20, 0x7F	; 127
    25b6:	57 e4       	ldi	r21, 0x47	; 71
    25b8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25bc:	18 16       	cp	r1, r24
    25be:	4c f5       	brge	.+82     	; 0x2612 <Animation1+0x63a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    25c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    25c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    25c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    25c8:	20 e0       	ldi	r18, 0x00	; 0
    25ca:	30 e0       	ldi	r19, 0x00	; 0
    25cc:	40 e2       	ldi	r20, 0x20	; 32
    25ce:	51 e4       	ldi	r21, 0x41	; 65
    25d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25d4:	dc 01       	movw	r26, r24
    25d6:	cb 01       	movw	r24, r22
    25d8:	bc 01       	movw	r22, r24
    25da:	cd 01       	movw	r24, r26
    25dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25e0:	dc 01       	movw	r26, r24
    25e2:	cb 01       	movw	r24, r22
    25e4:	9e 83       	std	Y+6, r25	; 0x06
    25e6:	8d 83       	std	Y+5, r24	; 0x05
    25e8:	0f c0       	rjmp	.+30     	; 0x2608 <Animation1+0x630>
    25ea:	80 e9       	ldi	r24, 0x90	; 144
    25ec:	91 e0       	ldi	r25, 0x01	; 1
    25ee:	9c 83       	std	Y+4, r25	; 0x04
    25f0:	8b 83       	std	Y+3, r24	; 0x03
    25f2:	8b 81       	ldd	r24, Y+3	; 0x03
    25f4:	9c 81       	ldd	r25, Y+4	; 0x04
    25f6:	01 97       	sbiw	r24, 0x01	; 1
    25f8:	f1 f7       	brne	.-4      	; 0x25f6 <Animation1+0x61e>
    25fa:	9c 83       	std	Y+4, r25	; 0x04
    25fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25fe:	8d 81       	ldd	r24, Y+5	; 0x05
    2600:	9e 81       	ldd	r25, Y+6	; 0x06
    2602:	01 97       	sbiw	r24, 0x01	; 1
    2604:	9e 83       	std	Y+6, r25	; 0x06
    2606:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2608:	8d 81       	ldd	r24, Y+5	; 0x05
    260a:	9e 81       	ldd	r25, Y+6	; 0x06
    260c:	00 97       	sbiw	r24, 0x00	; 0
    260e:	69 f7       	brne	.-38     	; 0x25ea <Animation1+0x612>
    2610:	14 c0       	rjmp	.+40     	; 0x263a <Animation1+0x662>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2612:	6f 81       	ldd	r22, Y+7	; 0x07
    2614:	78 85       	ldd	r23, Y+8	; 0x08
    2616:	89 85       	ldd	r24, Y+9	; 0x09
    2618:	9a 85       	ldd	r25, Y+10	; 0x0a
    261a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    261e:	dc 01       	movw	r26, r24
    2620:	cb 01       	movw	r24, r22
    2622:	9e 83       	std	Y+6, r25	; 0x06
    2624:	8d 83       	std	Y+5, r24	; 0x05
    2626:	8d 81       	ldd	r24, Y+5	; 0x05
    2628:	9e 81       	ldd	r25, Y+6	; 0x06
    262a:	9a 83       	std	Y+2, r25	; 0x02
    262c:	89 83       	std	Y+1, r24	; 0x01
    262e:	89 81       	ldd	r24, Y+1	; 0x01
    2630:	9a 81       	ldd	r25, Y+2	; 0x02
    2632:	01 97       	sbiw	r24, 0x01	; 1
    2634:	f1 f7       	brne	.-4      	; 0x2632 <Animation1+0x65a>
    2636:	9a 83       	std	Y+2, r25	; 0x02
    2638:	89 83       	std	Y+1, r24	; 0x01
     _delay_ms(500);

}
    263a:	cc 5a       	subi	r28, 0xAC	; 172
    263c:	df 4f       	sbci	r29, 0xFF	; 255
    263e:	0f b6       	in	r0, 0x3f	; 63
    2640:	f8 94       	cli
    2642:	de bf       	out	0x3e, r29	; 62
    2644:	0f be       	out	0x3f, r0	; 63
    2646:	cd bf       	out	0x3d, r28	; 61
    2648:	cf 91       	pop	r28
    264a:	df 91       	pop	r29
    264c:	1f 91       	pop	r17
    264e:	0f 91       	pop	r16
    2650:	08 95       	ret

00002652 <Animation2>:
void Animation2()
{
    2652:	0f 93       	push	r16
    2654:	1f 93       	push	r17
    2656:	df 93       	push	r29
    2658:	cf 93       	push	r28
    265a:	cd b7       	in	r28, 0x3d	; 61
    265c:	de b7       	in	r29, 0x3e	; 62
    265e:	c4 55       	subi	r28, 0x54	; 84
    2660:	d0 40       	sbci	r29, 0x00	; 0
    2662:	0f b6       	in	r0, 0x3f	; 63
    2664:	f8 94       	cli
    2666:	de bf       	out	0x3e, r29	; 62
    2668:	0f be       	out	0x3f, r0	; 63
    266a:	cd bf       	out	0x3d, r28	; 61
	H_Led_void_setON(RED_LED);
    266c:	80 e0       	ldi	r24, 0x00	; 0
    266e:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
    2672:	fe 01       	movw	r30, r28
    2674:	ef 5a       	subi	r30, 0xAF	; 175
    2676:	ff 4f       	sbci	r31, 0xFF	; 255
    2678:	80 e0       	ldi	r24, 0x00	; 0
    267a:	90 e0       	ldi	r25, 0x00	; 0
    267c:	aa ef       	ldi	r26, 0xFA	; 250
    267e:	b3 e4       	ldi	r27, 0x43	; 67
    2680:	80 83       	st	Z, r24
    2682:	91 83       	std	Z+1, r25	; 0x01
    2684:	a2 83       	std	Z+2, r26	; 0x02
    2686:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2688:	8e 01       	movw	r16, r28
    268a:	03 5b       	subi	r16, 0xB3	; 179
    268c:	1f 4f       	sbci	r17, 0xFF	; 255
    268e:	fe 01       	movw	r30, r28
    2690:	ef 5a       	subi	r30, 0xAF	; 175
    2692:	ff 4f       	sbci	r31, 0xFF	; 255
    2694:	60 81       	ld	r22, Z
    2696:	71 81       	ldd	r23, Z+1	; 0x01
    2698:	82 81       	ldd	r24, Z+2	; 0x02
    269a:	93 81       	ldd	r25, Z+3	; 0x03
    269c:	20 e0       	ldi	r18, 0x00	; 0
    269e:	30 e0       	ldi	r19, 0x00	; 0
    26a0:	4a e7       	ldi	r20, 0x7A	; 122
    26a2:	55 e4       	ldi	r21, 0x45	; 69
    26a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26a8:	dc 01       	movw	r26, r24
    26aa:	cb 01       	movw	r24, r22
    26ac:	f8 01       	movw	r30, r16
    26ae:	80 83       	st	Z, r24
    26b0:	91 83       	std	Z+1, r25	; 0x01
    26b2:	a2 83       	std	Z+2, r26	; 0x02
    26b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26b6:	fe 01       	movw	r30, r28
    26b8:	e3 5b       	subi	r30, 0xB3	; 179
    26ba:	ff 4f       	sbci	r31, 0xFF	; 255
    26bc:	60 81       	ld	r22, Z
    26be:	71 81       	ldd	r23, Z+1	; 0x01
    26c0:	82 81       	ldd	r24, Z+2	; 0x02
    26c2:	93 81       	ldd	r25, Z+3	; 0x03
    26c4:	20 e0       	ldi	r18, 0x00	; 0
    26c6:	30 e0       	ldi	r19, 0x00	; 0
    26c8:	40 e8       	ldi	r20, 0x80	; 128
    26ca:	5f e3       	ldi	r21, 0x3F	; 63
    26cc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26d0:	88 23       	and	r24, r24
    26d2:	44 f4       	brge	.+16     	; 0x26e4 <Animation2+0x92>
		__ticks = 1;
    26d4:	fe 01       	movw	r30, r28
    26d6:	e5 5b       	subi	r30, 0xB5	; 181
    26d8:	ff 4f       	sbci	r31, 0xFF	; 255
    26da:	81 e0       	ldi	r24, 0x01	; 1
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	91 83       	std	Z+1, r25	; 0x01
    26e0:	80 83       	st	Z, r24
    26e2:	64 c0       	rjmp	.+200    	; 0x27ac <Animation2+0x15a>
	else if (__tmp > 65535)
    26e4:	fe 01       	movw	r30, r28
    26e6:	e3 5b       	subi	r30, 0xB3	; 179
    26e8:	ff 4f       	sbci	r31, 0xFF	; 255
    26ea:	60 81       	ld	r22, Z
    26ec:	71 81       	ldd	r23, Z+1	; 0x01
    26ee:	82 81       	ldd	r24, Z+2	; 0x02
    26f0:	93 81       	ldd	r25, Z+3	; 0x03
    26f2:	20 e0       	ldi	r18, 0x00	; 0
    26f4:	3f ef       	ldi	r19, 0xFF	; 255
    26f6:	4f e7       	ldi	r20, 0x7F	; 127
    26f8:	57 e4       	ldi	r21, 0x47	; 71
    26fa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26fe:	18 16       	cp	r1, r24
    2700:	0c f0       	brlt	.+2      	; 0x2704 <Animation2+0xb2>
    2702:	43 c0       	rjmp	.+134    	; 0x278a <Animation2+0x138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2704:	fe 01       	movw	r30, r28
    2706:	ef 5a       	subi	r30, 0xAF	; 175
    2708:	ff 4f       	sbci	r31, 0xFF	; 255
    270a:	60 81       	ld	r22, Z
    270c:	71 81       	ldd	r23, Z+1	; 0x01
    270e:	82 81       	ldd	r24, Z+2	; 0x02
    2710:	93 81       	ldd	r25, Z+3	; 0x03
    2712:	20 e0       	ldi	r18, 0x00	; 0
    2714:	30 e0       	ldi	r19, 0x00	; 0
    2716:	40 e2       	ldi	r20, 0x20	; 32
    2718:	51 e4       	ldi	r21, 0x41	; 65
    271a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    271e:	dc 01       	movw	r26, r24
    2720:	cb 01       	movw	r24, r22
    2722:	8e 01       	movw	r16, r28
    2724:	05 5b       	subi	r16, 0xB5	; 181
    2726:	1f 4f       	sbci	r17, 0xFF	; 255
    2728:	bc 01       	movw	r22, r24
    272a:	cd 01       	movw	r24, r26
    272c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2730:	dc 01       	movw	r26, r24
    2732:	cb 01       	movw	r24, r22
    2734:	f8 01       	movw	r30, r16
    2736:	91 83       	std	Z+1, r25	; 0x01
    2738:	80 83       	st	Z, r24
    273a:	1f c0       	rjmp	.+62     	; 0x277a <Animation2+0x128>
    273c:	fe 01       	movw	r30, r28
    273e:	e7 5b       	subi	r30, 0xB7	; 183
    2740:	ff 4f       	sbci	r31, 0xFF	; 255
    2742:	80 e9       	ldi	r24, 0x90	; 144
    2744:	91 e0       	ldi	r25, 0x01	; 1
    2746:	91 83       	std	Z+1, r25	; 0x01
    2748:	80 83       	st	Z, r24
    274a:	fe 01       	movw	r30, r28
    274c:	e7 5b       	subi	r30, 0xB7	; 183
    274e:	ff 4f       	sbci	r31, 0xFF	; 255
    2750:	80 81       	ld	r24, Z
    2752:	91 81       	ldd	r25, Z+1	; 0x01
    2754:	01 97       	sbiw	r24, 0x01	; 1
    2756:	f1 f7       	brne	.-4      	; 0x2754 <Animation2+0x102>
    2758:	fe 01       	movw	r30, r28
    275a:	e7 5b       	subi	r30, 0xB7	; 183
    275c:	ff 4f       	sbci	r31, 0xFF	; 255
    275e:	91 83       	std	Z+1, r25	; 0x01
    2760:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2762:	de 01       	movw	r26, r28
    2764:	a5 5b       	subi	r26, 0xB5	; 181
    2766:	bf 4f       	sbci	r27, 0xFF	; 255
    2768:	fe 01       	movw	r30, r28
    276a:	e5 5b       	subi	r30, 0xB5	; 181
    276c:	ff 4f       	sbci	r31, 0xFF	; 255
    276e:	80 81       	ld	r24, Z
    2770:	91 81       	ldd	r25, Z+1	; 0x01
    2772:	01 97       	sbiw	r24, 0x01	; 1
    2774:	11 96       	adiw	r26, 0x01	; 1
    2776:	9c 93       	st	X, r25
    2778:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    277a:	fe 01       	movw	r30, r28
    277c:	e5 5b       	subi	r30, 0xB5	; 181
    277e:	ff 4f       	sbci	r31, 0xFF	; 255
    2780:	80 81       	ld	r24, Z
    2782:	91 81       	ldd	r25, Z+1	; 0x01
    2784:	00 97       	sbiw	r24, 0x00	; 0
    2786:	d1 f6       	brne	.-76     	; 0x273c <Animation2+0xea>
    2788:	27 c0       	rjmp	.+78     	; 0x27d8 <Animation2+0x186>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    278a:	8e 01       	movw	r16, r28
    278c:	05 5b       	subi	r16, 0xB5	; 181
    278e:	1f 4f       	sbci	r17, 0xFF	; 255
    2790:	fe 01       	movw	r30, r28
    2792:	e3 5b       	subi	r30, 0xB3	; 179
    2794:	ff 4f       	sbci	r31, 0xFF	; 255
    2796:	60 81       	ld	r22, Z
    2798:	71 81       	ldd	r23, Z+1	; 0x01
    279a:	82 81       	ldd	r24, Z+2	; 0x02
    279c:	93 81       	ldd	r25, Z+3	; 0x03
    279e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27a2:	dc 01       	movw	r26, r24
    27a4:	cb 01       	movw	r24, r22
    27a6:	f8 01       	movw	r30, r16
    27a8:	91 83       	std	Z+1, r25	; 0x01
    27aa:	80 83       	st	Z, r24
    27ac:	de 01       	movw	r26, r28
    27ae:	a9 5b       	subi	r26, 0xB9	; 185
    27b0:	bf 4f       	sbci	r27, 0xFF	; 255
    27b2:	fe 01       	movw	r30, r28
    27b4:	e5 5b       	subi	r30, 0xB5	; 181
    27b6:	ff 4f       	sbci	r31, 0xFF	; 255
    27b8:	80 81       	ld	r24, Z
    27ba:	91 81       	ldd	r25, Z+1	; 0x01
    27bc:	8d 93       	st	X+, r24
    27be:	9c 93       	st	X, r25
    27c0:	fe 01       	movw	r30, r28
    27c2:	e9 5b       	subi	r30, 0xB9	; 185
    27c4:	ff 4f       	sbci	r31, 0xFF	; 255
    27c6:	80 81       	ld	r24, Z
    27c8:	91 81       	ldd	r25, Z+1	; 0x01
    27ca:	01 97       	sbiw	r24, 0x01	; 1
    27cc:	f1 f7       	brne	.-4      	; 0x27ca <Animation2+0x178>
    27ce:	fe 01       	movw	r30, r28
    27d0:	e9 5b       	subi	r30, 0xB9	; 185
    27d2:	ff 4f       	sbci	r31, 0xFF	; 255
    27d4:	91 83       	std	Z+1, r25	; 0x01
    27d6:	80 83       	st	Z, r24
	_delay_ms(500);
	H_Led_void_setOFF(RED_LED);
    27d8:	80 e0       	ldi	r24, 0x00	; 0
    27da:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
    27de:	fe 01       	movw	r30, r28
    27e0:	ed 5b       	subi	r30, 0xBD	; 189
    27e2:	ff 4f       	sbci	r31, 0xFF	; 255
    27e4:	80 e0       	ldi	r24, 0x00	; 0
    27e6:	90 e0       	ldi	r25, 0x00	; 0
    27e8:	aa ef       	ldi	r26, 0xFA	; 250
    27ea:	b3 e4       	ldi	r27, 0x43	; 67
    27ec:	80 83       	st	Z, r24
    27ee:	91 83       	std	Z+1, r25	; 0x01
    27f0:	a2 83       	std	Z+2, r26	; 0x02
    27f2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27f4:	8e 01       	movw	r16, r28
    27f6:	01 5c       	subi	r16, 0xC1	; 193
    27f8:	1f 4f       	sbci	r17, 0xFF	; 255
    27fa:	fe 01       	movw	r30, r28
    27fc:	ed 5b       	subi	r30, 0xBD	; 189
    27fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2800:	60 81       	ld	r22, Z
    2802:	71 81       	ldd	r23, Z+1	; 0x01
    2804:	82 81       	ldd	r24, Z+2	; 0x02
    2806:	93 81       	ldd	r25, Z+3	; 0x03
    2808:	20 e0       	ldi	r18, 0x00	; 0
    280a:	30 e0       	ldi	r19, 0x00	; 0
    280c:	4a e7       	ldi	r20, 0x7A	; 122
    280e:	55 e4       	ldi	r21, 0x45	; 69
    2810:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2814:	dc 01       	movw	r26, r24
    2816:	cb 01       	movw	r24, r22
    2818:	f8 01       	movw	r30, r16
    281a:	80 83       	st	Z, r24
    281c:	91 83       	std	Z+1, r25	; 0x01
    281e:	a2 83       	std	Z+2, r26	; 0x02
    2820:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2822:	fe 01       	movw	r30, r28
    2824:	ff 96       	adiw	r30, 0x3f	; 63
    2826:	60 81       	ld	r22, Z
    2828:	71 81       	ldd	r23, Z+1	; 0x01
    282a:	82 81       	ldd	r24, Z+2	; 0x02
    282c:	93 81       	ldd	r25, Z+3	; 0x03
    282e:	20 e0       	ldi	r18, 0x00	; 0
    2830:	30 e0       	ldi	r19, 0x00	; 0
    2832:	40 e8       	ldi	r20, 0x80	; 128
    2834:	5f e3       	ldi	r21, 0x3F	; 63
    2836:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    283a:	88 23       	and	r24, r24
    283c:	2c f4       	brge	.+10     	; 0x2848 <Animation2+0x1f6>
		__ticks = 1;
    283e:	81 e0       	ldi	r24, 0x01	; 1
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	9e af       	std	Y+62, r25	; 0x3e
    2844:	8d af       	std	Y+61, r24	; 0x3d
    2846:	46 c0       	rjmp	.+140    	; 0x28d4 <Animation2+0x282>
	else if (__tmp > 65535)
    2848:	fe 01       	movw	r30, r28
    284a:	ff 96       	adiw	r30, 0x3f	; 63
    284c:	60 81       	ld	r22, Z
    284e:	71 81       	ldd	r23, Z+1	; 0x01
    2850:	82 81       	ldd	r24, Z+2	; 0x02
    2852:	93 81       	ldd	r25, Z+3	; 0x03
    2854:	20 e0       	ldi	r18, 0x00	; 0
    2856:	3f ef       	ldi	r19, 0xFF	; 255
    2858:	4f e7       	ldi	r20, 0x7F	; 127
    285a:	57 e4       	ldi	r21, 0x47	; 71
    285c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2860:	18 16       	cp	r1, r24
    2862:	64 f5       	brge	.+88     	; 0x28bc <Animation2+0x26a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2864:	fe 01       	movw	r30, r28
    2866:	ed 5b       	subi	r30, 0xBD	; 189
    2868:	ff 4f       	sbci	r31, 0xFF	; 255
    286a:	60 81       	ld	r22, Z
    286c:	71 81       	ldd	r23, Z+1	; 0x01
    286e:	82 81       	ldd	r24, Z+2	; 0x02
    2870:	93 81       	ldd	r25, Z+3	; 0x03
    2872:	20 e0       	ldi	r18, 0x00	; 0
    2874:	30 e0       	ldi	r19, 0x00	; 0
    2876:	40 e2       	ldi	r20, 0x20	; 32
    2878:	51 e4       	ldi	r21, 0x41	; 65
    287a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    287e:	dc 01       	movw	r26, r24
    2880:	cb 01       	movw	r24, r22
    2882:	bc 01       	movw	r22, r24
    2884:	cd 01       	movw	r24, r26
    2886:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    288a:	dc 01       	movw	r26, r24
    288c:	cb 01       	movw	r24, r22
    288e:	9e af       	std	Y+62, r25	; 0x3e
    2890:	8d af       	std	Y+61, r24	; 0x3d
    2892:	0f c0       	rjmp	.+30     	; 0x28b2 <Animation2+0x260>
    2894:	80 e9       	ldi	r24, 0x90	; 144
    2896:	91 e0       	ldi	r25, 0x01	; 1
    2898:	9c af       	std	Y+60, r25	; 0x3c
    289a:	8b af       	std	Y+59, r24	; 0x3b
    289c:	8b ad       	ldd	r24, Y+59	; 0x3b
    289e:	9c ad       	ldd	r25, Y+60	; 0x3c
    28a0:	01 97       	sbiw	r24, 0x01	; 1
    28a2:	f1 f7       	brne	.-4      	; 0x28a0 <Animation2+0x24e>
    28a4:	9c af       	std	Y+60, r25	; 0x3c
    28a6:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28a8:	8d ad       	ldd	r24, Y+61	; 0x3d
    28aa:	9e ad       	ldd	r25, Y+62	; 0x3e
    28ac:	01 97       	sbiw	r24, 0x01	; 1
    28ae:	9e af       	std	Y+62, r25	; 0x3e
    28b0:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28b2:	8d ad       	ldd	r24, Y+61	; 0x3d
    28b4:	9e ad       	ldd	r25, Y+62	; 0x3e
    28b6:	00 97       	sbiw	r24, 0x00	; 0
    28b8:	69 f7       	brne	.-38     	; 0x2894 <Animation2+0x242>
    28ba:	16 c0       	rjmp	.+44     	; 0x28e8 <Animation2+0x296>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28bc:	fe 01       	movw	r30, r28
    28be:	ff 96       	adiw	r30, 0x3f	; 63
    28c0:	60 81       	ld	r22, Z
    28c2:	71 81       	ldd	r23, Z+1	; 0x01
    28c4:	82 81       	ldd	r24, Z+2	; 0x02
    28c6:	93 81       	ldd	r25, Z+3	; 0x03
    28c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28cc:	dc 01       	movw	r26, r24
    28ce:	cb 01       	movw	r24, r22
    28d0:	9e af       	std	Y+62, r25	; 0x3e
    28d2:	8d af       	std	Y+61, r24	; 0x3d
    28d4:	8d ad       	ldd	r24, Y+61	; 0x3d
    28d6:	9e ad       	ldd	r25, Y+62	; 0x3e
    28d8:	9a af       	std	Y+58, r25	; 0x3a
    28da:	89 af       	std	Y+57, r24	; 0x39
    28dc:	89 ad       	ldd	r24, Y+57	; 0x39
    28de:	9a ad       	ldd	r25, Y+58	; 0x3a
    28e0:	01 97       	sbiw	r24, 0x01	; 1
    28e2:	f1 f7       	brne	.-4      	; 0x28e0 <Animation2+0x28e>
    28e4:	9a af       	std	Y+58, r25	; 0x3a
    28e6:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(500);
    H_Led_void_setON(BLU_LED);
    28e8:	82 e0       	ldi	r24, 0x02	; 2
    28ea:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
    28ee:	80 e0       	ldi	r24, 0x00	; 0
    28f0:	90 e0       	ldi	r25, 0x00	; 0
    28f2:	aa ef       	ldi	r26, 0xFA	; 250
    28f4:	b3 e4       	ldi	r27, 0x43	; 67
    28f6:	8d ab       	std	Y+53, r24	; 0x35
    28f8:	9e ab       	std	Y+54, r25	; 0x36
    28fa:	af ab       	std	Y+55, r26	; 0x37
    28fc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28fe:	6d a9       	ldd	r22, Y+53	; 0x35
    2900:	7e a9       	ldd	r23, Y+54	; 0x36
    2902:	8f a9       	ldd	r24, Y+55	; 0x37
    2904:	98 ad       	ldd	r25, Y+56	; 0x38
    2906:	20 e0       	ldi	r18, 0x00	; 0
    2908:	30 e0       	ldi	r19, 0x00	; 0
    290a:	4a e7       	ldi	r20, 0x7A	; 122
    290c:	55 e4       	ldi	r21, 0x45	; 69
    290e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2912:	dc 01       	movw	r26, r24
    2914:	cb 01       	movw	r24, r22
    2916:	89 ab       	std	Y+49, r24	; 0x31
    2918:	9a ab       	std	Y+50, r25	; 0x32
    291a:	ab ab       	std	Y+51, r26	; 0x33
    291c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    291e:	69 a9       	ldd	r22, Y+49	; 0x31
    2920:	7a a9       	ldd	r23, Y+50	; 0x32
    2922:	8b a9       	ldd	r24, Y+51	; 0x33
    2924:	9c a9       	ldd	r25, Y+52	; 0x34
    2926:	20 e0       	ldi	r18, 0x00	; 0
    2928:	30 e0       	ldi	r19, 0x00	; 0
    292a:	40 e8       	ldi	r20, 0x80	; 128
    292c:	5f e3       	ldi	r21, 0x3F	; 63
    292e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2932:	88 23       	and	r24, r24
    2934:	2c f4       	brge	.+10     	; 0x2940 <Animation2+0x2ee>
		__ticks = 1;
    2936:	81 e0       	ldi	r24, 0x01	; 1
    2938:	90 e0       	ldi	r25, 0x00	; 0
    293a:	98 ab       	std	Y+48, r25	; 0x30
    293c:	8f a7       	std	Y+47, r24	; 0x2f
    293e:	3f c0       	rjmp	.+126    	; 0x29be <Animation2+0x36c>
	else if (__tmp > 65535)
    2940:	69 a9       	ldd	r22, Y+49	; 0x31
    2942:	7a a9       	ldd	r23, Y+50	; 0x32
    2944:	8b a9       	ldd	r24, Y+51	; 0x33
    2946:	9c a9       	ldd	r25, Y+52	; 0x34
    2948:	20 e0       	ldi	r18, 0x00	; 0
    294a:	3f ef       	ldi	r19, 0xFF	; 255
    294c:	4f e7       	ldi	r20, 0x7F	; 127
    294e:	57 e4       	ldi	r21, 0x47	; 71
    2950:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2954:	18 16       	cp	r1, r24
    2956:	4c f5       	brge	.+82     	; 0x29aa <Animation2+0x358>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2958:	6d a9       	ldd	r22, Y+53	; 0x35
    295a:	7e a9       	ldd	r23, Y+54	; 0x36
    295c:	8f a9       	ldd	r24, Y+55	; 0x37
    295e:	98 ad       	ldd	r25, Y+56	; 0x38
    2960:	20 e0       	ldi	r18, 0x00	; 0
    2962:	30 e0       	ldi	r19, 0x00	; 0
    2964:	40 e2       	ldi	r20, 0x20	; 32
    2966:	51 e4       	ldi	r21, 0x41	; 65
    2968:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    296c:	dc 01       	movw	r26, r24
    296e:	cb 01       	movw	r24, r22
    2970:	bc 01       	movw	r22, r24
    2972:	cd 01       	movw	r24, r26
    2974:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2978:	dc 01       	movw	r26, r24
    297a:	cb 01       	movw	r24, r22
    297c:	98 ab       	std	Y+48, r25	; 0x30
    297e:	8f a7       	std	Y+47, r24	; 0x2f
    2980:	0f c0       	rjmp	.+30     	; 0x29a0 <Animation2+0x34e>
    2982:	80 e9       	ldi	r24, 0x90	; 144
    2984:	91 e0       	ldi	r25, 0x01	; 1
    2986:	9e a7       	std	Y+46, r25	; 0x2e
    2988:	8d a7       	std	Y+45, r24	; 0x2d
    298a:	8d a5       	ldd	r24, Y+45	; 0x2d
    298c:	9e a5       	ldd	r25, Y+46	; 0x2e
    298e:	01 97       	sbiw	r24, 0x01	; 1
    2990:	f1 f7       	brne	.-4      	; 0x298e <Animation2+0x33c>
    2992:	9e a7       	std	Y+46, r25	; 0x2e
    2994:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2996:	8f a5       	ldd	r24, Y+47	; 0x2f
    2998:	98 a9       	ldd	r25, Y+48	; 0x30
    299a:	01 97       	sbiw	r24, 0x01	; 1
    299c:	98 ab       	std	Y+48, r25	; 0x30
    299e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    29a2:	98 a9       	ldd	r25, Y+48	; 0x30
    29a4:	00 97       	sbiw	r24, 0x00	; 0
    29a6:	69 f7       	brne	.-38     	; 0x2982 <Animation2+0x330>
    29a8:	14 c0       	rjmp	.+40     	; 0x29d2 <Animation2+0x380>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29aa:	69 a9       	ldd	r22, Y+49	; 0x31
    29ac:	7a a9       	ldd	r23, Y+50	; 0x32
    29ae:	8b a9       	ldd	r24, Y+51	; 0x33
    29b0:	9c a9       	ldd	r25, Y+52	; 0x34
    29b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29b6:	dc 01       	movw	r26, r24
    29b8:	cb 01       	movw	r24, r22
    29ba:	98 ab       	std	Y+48, r25	; 0x30
    29bc:	8f a7       	std	Y+47, r24	; 0x2f
    29be:	8f a5       	ldd	r24, Y+47	; 0x2f
    29c0:	98 a9       	ldd	r25, Y+48	; 0x30
    29c2:	9c a7       	std	Y+44, r25	; 0x2c
    29c4:	8b a7       	std	Y+43, r24	; 0x2b
    29c6:	8b a5       	ldd	r24, Y+43	; 0x2b
    29c8:	9c a5       	ldd	r25, Y+44	; 0x2c
    29ca:	01 97       	sbiw	r24, 0x01	; 1
    29cc:	f1 f7       	brne	.-4      	; 0x29ca <Animation2+0x378>
    29ce:	9c a7       	std	Y+44, r25	; 0x2c
    29d0:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(500);
    H_Led_void_setOFF(BLU_LED);
    29d2:	82 e0       	ldi	r24, 0x02	; 2
    29d4:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
    29d8:	80 e0       	ldi	r24, 0x00	; 0
    29da:	90 e0       	ldi	r25, 0x00	; 0
    29dc:	aa ef       	ldi	r26, 0xFA	; 250
    29de:	b3 e4       	ldi	r27, 0x43	; 67
    29e0:	8f a3       	std	Y+39, r24	; 0x27
    29e2:	98 a7       	std	Y+40, r25	; 0x28
    29e4:	a9 a7       	std	Y+41, r26	; 0x29
    29e6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29e8:	6f a1       	ldd	r22, Y+39	; 0x27
    29ea:	78 a5       	ldd	r23, Y+40	; 0x28
    29ec:	89 a5       	ldd	r24, Y+41	; 0x29
    29ee:	9a a5       	ldd	r25, Y+42	; 0x2a
    29f0:	20 e0       	ldi	r18, 0x00	; 0
    29f2:	30 e0       	ldi	r19, 0x00	; 0
    29f4:	4a e7       	ldi	r20, 0x7A	; 122
    29f6:	55 e4       	ldi	r21, 0x45	; 69
    29f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29fc:	dc 01       	movw	r26, r24
    29fe:	cb 01       	movw	r24, r22
    2a00:	8b a3       	std	Y+35, r24	; 0x23
    2a02:	9c a3       	std	Y+36, r25	; 0x24
    2a04:	ad a3       	std	Y+37, r26	; 0x25
    2a06:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2a08:	6b a1       	ldd	r22, Y+35	; 0x23
    2a0a:	7c a1       	ldd	r23, Y+36	; 0x24
    2a0c:	8d a1       	ldd	r24, Y+37	; 0x25
    2a0e:	9e a1       	ldd	r25, Y+38	; 0x26
    2a10:	20 e0       	ldi	r18, 0x00	; 0
    2a12:	30 e0       	ldi	r19, 0x00	; 0
    2a14:	40 e8       	ldi	r20, 0x80	; 128
    2a16:	5f e3       	ldi	r21, 0x3F	; 63
    2a18:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a1c:	88 23       	and	r24, r24
    2a1e:	2c f4       	brge	.+10     	; 0x2a2a <Animation2+0x3d8>
		__ticks = 1;
    2a20:	81 e0       	ldi	r24, 0x01	; 1
    2a22:	90 e0       	ldi	r25, 0x00	; 0
    2a24:	9a a3       	std	Y+34, r25	; 0x22
    2a26:	89 a3       	std	Y+33, r24	; 0x21
    2a28:	3f c0       	rjmp	.+126    	; 0x2aa8 <Animation2+0x456>
	else if (__tmp > 65535)
    2a2a:	6b a1       	ldd	r22, Y+35	; 0x23
    2a2c:	7c a1       	ldd	r23, Y+36	; 0x24
    2a2e:	8d a1       	ldd	r24, Y+37	; 0x25
    2a30:	9e a1       	ldd	r25, Y+38	; 0x26
    2a32:	20 e0       	ldi	r18, 0x00	; 0
    2a34:	3f ef       	ldi	r19, 0xFF	; 255
    2a36:	4f e7       	ldi	r20, 0x7F	; 127
    2a38:	57 e4       	ldi	r21, 0x47	; 71
    2a3a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a3e:	18 16       	cp	r1, r24
    2a40:	4c f5       	brge	.+82     	; 0x2a94 <Animation2+0x442>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a42:	6f a1       	ldd	r22, Y+39	; 0x27
    2a44:	78 a5       	ldd	r23, Y+40	; 0x28
    2a46:	89 a5       	ldd	r24, Y+41	; 0x29
    2a48:	9a a5       	ldd	r25, Y+42	; 0x2a
    2a4a:	20 e0       	ldi	r18, 0x00	; 0
    2a4c:	30 e0       	ldi	r19, 0x00	; 0
    2a4e:	40 e2       	ldi	r20, 0x20	; 32
    2a50:	51 e4       	ldi	r21, 0x41	; 65
    2a52:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a56:	dc 01       	movw	r26, r24
    2a58:	cb 01       	movw	r24, r22
    2a5a:	bc 01       	movw	r22, r24
    2a5c:	cd 01       	movw	r24, r26
    2a5e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a62:	dc 01       	movw	r26, r24
    2a64:	cb 01       	movw	r24, r22
    2a66:	9a a3       	std	Y+34, r25	; 0x22
    2a68:	89 a3       	std	Y+33, r24	; 0x21
    2a6a:	0f c0       	rjmp	.+30     	; 0x2a8a <Animation2+0x438>
    2a6c:	80 e9       	ldi	r24, 0x90	; 144
    2a6e:	91 e0       	ldi	r25, 0x01	; 1
    2a70:	98 a3       	std	Y+32, r25	; 0x20
    2a72:	8f 8f       	std	Y+31, r24	; 0x1f
    2a74:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2a76:	98 a1       	ldd	r25, Y+32	; 0x20
    2a78:	01 97       	sbiw	r24, 0x01	; 1
    2a7a:	f1 f7       	brne	.-4      	; 0x2a78 <Animation2+0x426>
    2a7c:	98 a3       	std	Y+32, r25	; 0x20
    2a7e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a80:	89 a1       	ldd	r24, Y+33	; 0x21
    2a82:	9a a1       	ldd	r25, Y+34	; 0x22
    2a84:	01 97       	sbiw	r24, 0x01	; 1
    2a86:	9a a3       	std	Y+34, r25	; 0x22
    2a88:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a8a:	89 a1       	ldd	r24, Y+33	; 0x21
    2a8c:	9a a1       	ldd	r25, Y+34	; 0x22
    2a8e:	00 97       	sbiw	r24, 0x00	; 0
    2a90:	69 f7       	brne	.-38     	; 0x2a6c <Animation2+0x41a>
    2a92:	14 c0       	rjmp	.+40     	; 0x2abc <Animation2+0x46a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a94:	6b a1       	ldd	r22, Y+35	; 0x23
    2a96:	7c a1       	ldd	r23, Y+36	; 0x24
    2a98:	8d a1       	ldd	r24, Y+37	; 0x25
    2a9a:	9e a1       	ldd	r25, Y+38	; 0x26
    2a9c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2aa0:	dc 01       	movw	r26, r24
    2aa2:	cb 01       	movw	r24, r22
    2aa4:	9a a3       	std	Y+34, r25	; 0x22
    2aa6:	89 a3       	std	Y+33, r24	; 0x21
    2aa8:	89 a1       	ldd	r24, Y+33	; 0x21
    2aaa:	9a a1       	ldd	r25, Y+34	; 0x22
    2aac:	9e 8f       	std	Y+30, r25	; 0x1e
    2aae:	8d 8f       	std	Y+29, r24	; 0x1d
    2ab0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ab2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2ab4:	01 97       	sbiw	r24, 0x01	; 1
    2ab6:	f1 f7       	brne	.-4      	; 0x2ab4 <Animation2+0x462>
    2ab8:	9e 8f       	std	Y+30, r25	; 0x1e
    2aba:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(500);
    H_Led_void_setON(GRN_LED);
    2abc:	81 e0       	ldi	r24, 0x01	; 1
    2abe:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
    2ac2:	80 e0       	ldi	r24, 0x00	; 0
    2ac4:	90 e0       	ldi	r25, 0x00	; 0
    2ac6:	aa ef       	ldi	r26, 0xFA	; 250
    2ac8:	b3 e4       	ldi	r27, 0x43	; 67
    2aca:	89 8f       	std	Y+25, r24	; 0x19
    2acc:	9a 8f       	std	Y+26, r25	; 0x1a
    2ace:	ab 8f       	std	Y+27, r26	; 0x1b
    2ad0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ad2:	69 8d       	ldd	r22, Y+25	; 0x19
    2ad4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2ad6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ad8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ada:	20 e0       	ldi	r18, 0x00	; 0
    2adc:	30 e0       	ldi	r19, 0x00	; 0
    2ade:	4a e7       	ldi	r20, 0x7A	; 122
    2ae0:	55 e4       	ldi	r21, 0x45	; 69
    2ae2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ae6:	dc 01       	movw	r26, r24
    2ae8:	cb 01       	movw	r24, r22
    2aea:	8d 8b       	std	Y+21, r24	; 0x15
    2aec:	9e 8b       	std	Y+22, r25	; 0x16
    2aee:	af 8b       	std	Y+23, r26	; 0x17
    2af0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2af2:	6d 89       	ldd	r22, Y+21	; 0x15
    2af4:	7e 89       	ldd	r23, Y+22	; 0x16
    2af6:	8f 89       	ldd	r24, Y+23	; 0x17
    2af8:	98 8d       	ldd	r25, Y+24	; 0x18
    2afa:	20 e0       	ldi	r18, 0x00	; 0
    2afc:	30 e0       	ldi	r19, 0x00	; 0
    2afe:	40 e8       	ldi	r20, 0x80	; 128
    2b00:	5f e3       	ldi	r21, 0x3F	; 63
    2b02:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b06:	88 23       	and	r24, r24
    2b08:	2c f4       	brge	.+10     	; 0x2b14 <Animation2+0x4c2>
		__ticks = 1;
    2b0a:	81 e0       	ldi	r24, 0x01	; 1
    2b0c:	90 e0       	ldi	r25, 0x00	; 0
    2b0e:	9c 8b       	std	Y+20, r25	; 0x14
    2b10:	8b 8b       	std	Y+19, r24	; 0x13
    2b12:	3f c0       	rjmp	.+126    	; 0x2b92 <Animation2+0x540>
	else if (__tmp > 65535)
    2b14:	6d 89       	ldd	r22, Y+21	; 0x15
    2b16:	7e 89       	ldd	r23, Y+22	; 0x16
    2b18:	8f 89       	ldd	r24, Y+23	; 0x17
    2b1a:	98 8d       	ldd	r25, Y+24	; 0x18
    2b1c:	20 e0       	ldi	r18, 0x00	; 0
    2b1e:	3f ef       	ldi	r19, 0xFF	; 255
    2b20:	4f e7       	ldi	r20, 0x7F	; 127
    2b22:	57 e4       	ldi	r21, 0x47	; 71
    2b24:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b28:	18 16       	cp	r1, r24
    2b2a:	4c f5       	brge	.+82     	; 0x2b7e <Animation2+0x52c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b2c:	69 8d       	ldd	r22, Y+25	; 0x19
    2b2e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b30:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b32:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b34:	20 e0       	ldi	r18, 0x00	; 0
    2b36:	30 e0       	ldi	r19, 0x00	; 0
    2b38:	40 e2       	ldi	r20, 0x20	; 32
    2b3a:	51 e4       	ldi	r21, 0x41	; 65
    2b3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b40:	dc 01       	movw	r26, r24
    2b42:	cb 01       	movw	r24, r22
    2b44:	bc 01       	movw	r22, r24
    2b46:	cd 01       	movw	r24, r26
    2b48:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b4c:	dc 01       	movw	r26, r24
    2b4e:	cb 01       	movw	r24, r22
    2b50:	9c 8b       	std	Y+20, r25	; 0x14
    2b52:	8b 8b       	std	Y+19, r24	; 0x13
    2b54:	0f c0       	rjmp	.+30     	; 0x2b74 <Animation2+0x522>
    2b56:	80 e9       	ldi	r24, 0x90	; 144
    2b58:	91 e0       	ldi	r25, 0x01	; 1
    2b5a:	9a 8b       	std	Y+18, r25	; 0x12
    2b5c:	89 8b       	std	Y+17, r24	; 0x11
    2b5e:	89 89       	ldd	r24, Y+17	; 0x11
    2b60:	9a 89       	ldd	r25, Y+18	; 0x12
    2b62:	01 97       	sbiw	r24, 0x01	; 1
    2b64:	f1 f7       	brne	.-4      	; 0x2b62 <Animation2+0x510>
    2b66:	9a 8b       	std	Y+18, r25	; 0x12
    2b68:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b6a:	8b 89       	ldd	r24, Y+19	; 0x13
    2b6c:	9c 89       	ldd	r25, Y+20	; 0x14
    2b6e:	01 97       	sbiw	r24, 0x01	; 1
    2b70:	9c 8b       	std	Y+20, r25	; 0x14
    2b72:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b74:	8b 89       	ldd	r24, Y+19	; 0x13
    2b76:	9c 89       	ldd	r25, Y+20	; 0x14
    2b78:	00 97       	sbiw	r24, 0x00	; 0
    2b7a:	69 f7       	brne	.-38     	; 0x2b56 <Animation2+0x504>
    2b7c:	14 c0       	rjmp	.+40     	; 0x2ba6 <Animation2+0x554>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b7e:	6d 89       	ldd	r22, Y+21	; 0x15
    2b80:	7e 89       	ldd	r23, Y+22	; 0x16
    2b82:	8f 89       	ldd	r24, Y+23	; 0x17
    2b84:	98 8d       	ldd	r25, Y+24	; 0x18
    2b86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b8a:	dc 01       	movw	r26, r24
    2b8c:	cb 01       	movw	r24, r22
    2b8e:	9c 8b       	std	Y+20, r25	; 0x14
    2b90:	8b 8b       	std	Y+19, r24	; 0x13
    2b92:	8b 89       	ldd	r24, Y+19	; 0x13
    2b94:	9c 89       	ldd	r25, Y+20	; 0x14
    2b96:	98 8b       	std	Y+16, r25	; 0x10
    2b98:	8f 87       	std	Y+15, r24	; 0x0f
    2b9a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2b9c:	98 89       	ldd	r25, Y+16	; 0x10
    2b9e:	01 97       	sbiw	r24, 0x01	; 1
    2ba0:	f1 f7       	brne	.-4      	; 0x2b9e <Animation2+0x54c>
    2ba2:	98 8b       	std	Y+16, r25	; 0x10
    2ba4:	8f 87       	std	Y+15, r24	; 0x0f
     _delay_ms(500);
    H_Led_void_setOFF(GRN_LED);
    2ba6:	81 e0       	ldi	r24, 0x01	; 1
    2ba8:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
    2bac:	80 e0       	ldi	r24, 0x00	; 0
    2bae:	90 e0       	ldi	r25, 0x00	; 0
    2bb0:	aa ef       	ldi	r26, 0xFA	; 250
    2bb2:	b3 e4       	ldi	r27, 0x43	; 67
    2bb4:	8b 87       	std	Y+11, r24	; 0x0b
    2bb6:	9c 87       	std	Y+12, r25	; 0x0c
    2bb8:	ad 87       	std	Y+13, r26	; 0x0d
    2bba:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bbc:	6b 85       	ldd	r22, Y+11	; 0x0b
    2bbe:	7c 85       	ldd	r23, Y+12	; 0x0c
    2bc0:	8d 85       	ldd	r24, Y+13	; 0x0d
    2bc2:	9e 85       	ldd	r25, Y+14	; 0x0e
    2bc4:	20 e0       	ldi	r18, 0x00	; 0
    2bc6:	30 e0       	ldi	r19, 0x00	; 0
    2bc8:	4a e7       	ldi	r20, 0x7A	; 122
    2bca:	55 e4       	ldi	r21, 0x45	; 69
    2bcc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bd0:	dc 01       	movw	r26, r24
    2bd2:	cb 01       	movw	r24, r22
    2bd4:	8f 83       	std	Y+7, r24	; 0x07
    2bd6:	98 87       	std	Y+8, r25	; 0x08
    2bd8:	a9 87       	std	Y+9, r26	; 0x09
    2bda:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2bdc:	6f 81       	ldd	r22, Y+7	; 0x07
    2bde:	78 85       	ldd	r23, Y+8	; 0x08
    2be0:	89 85       	ldd	r24, Y+9	; 0x09
    2be2:	9a 85       	ldd	r25, Y+10	; 0x0a
    2be4:	20 e0       	ldi	r18, 0x00	; 0
    2be6:	30 e0       	ldi	r19, 0x00	; 0
    2be8:	40 e8       	ldi	r20, 0x80	; 128
    2bea:	5f e3       	ldi	r21, 0x3F	; 63
    2bec:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2bf0:	88 23       	and	r24, r24
    2bf2:	2c f4       	brge	.+10     	; 0x2bfe <Animation2+0x5ac>
		__ticks = 1;
    2bf4:	81 e0       	ldi	r24, 0x01	; 1
    2bf6:	90 e0       	ldi	r25, 0x00	; 0
    2bf8:	9e 83       	std	Y+6, r25	; 0x06
    2bfa:	8d 83       	std	Y+5, r24	; 0x05
    2bfc:	3f c0       	rjmp	.+126    	; 0x2c7c <Animation2+0x62a>
	else if (__tmp > 65535)
    2bfe:	6f 81       	ldd	r22, Y+7	; 0x07
    2c00:	78 85       	ldd	r23, Y+8	; 0x08
    2c02:	89 85       	ldd	r24, Y+9	; 0x09
    2c04:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c06:	20 e0       	ldi	r18, 0x00	; 0
    2c08:	3f ef       	ldi	r19, 0xFF	; 255
    2c0a:	4f e7       	ldi	r20, 0x7F	; 127
    2c0c:	57 e4       	ldi	r21, 0x47	; 71
    2c0e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c12:	18 16       	cp	r1, r24
    2c14:	4c f5       	brge	.+82     	; 0x2c68 <Animation2+0x616>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c16:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c18:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c1a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c1c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c1e:	20 e0       	ldi	r18, 0x00	; 0
    2c20:	30 e0       	ldi	r19, 0x00	; 0
    2c22:	40 e2       	ldi	r20, 0x20	; 32
    2c24:	51 e4       	ldi	r21, 0x41	; 65
    2c26:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c2a:	dc 01       	movw	r26, r24
    2c2c:	cb 01       	movw	r24, r22
    2c2e:	bc 01       	movw	r22, r24
    2c30:	cd 01       	movw	r24, r26
    2c32:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c36:	dc 01       	movw	r26, r24
    2c38:	cb 01       	movw	r24, r22
    2c3a:	9e 83       	std	Y+6, r25	; 0x06
    2c3c:	8d 83       	std	Y+5, r24	; 0x05
    2c3e:	0f c0       	rjmp	.+30     	; 0x2c5e <Animation2+0x60c>
    2c40:	80 e9       	ldi	r24, 0x90	; 144
    2c42:	91 e0       	ldi	r25, 0x01	; 1
    2c44:	9c 83       	std	Y+4, r25	; 0x04
    2c46:	8b 83       	std	Y+3, r24	; 0x03
    2c48:	8b 81       	ldd	r24, Y+3	; 0x03
    2c4a:	9c 81       	ldd	r25, Y+4	; 0x04
    2c4c:	01 97       	sbiw	r24, 0x01	; 1
    2c4e:	f1 f7       	brne	.-4      	; 0x2c4c <Animation2+0x5fa>
    2c50:	9c 83       	std	Y+4, r25	; 0x04
    2c52:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c54:	8d 81       	ldd	r24, Y+5	; 0x05
    2c56:	9e 81       	ldd	r25, Y+6	; 0x06
    2c58:	01 97       	sbiw	r24, 0x01	; 1
    2c5a:	9e 83       	std	Y+6, r25	; 0x06
    2c5c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c5e:	8d 81       	ldd	r24, Y+5	; 0x05
    2c60:	9e 81       	ldd	r25, Y+6	; 0x06
    2c62:	00 97       	sbiw	r24, 0x00	; 0
    2c64:	69 f7       	brne	.-38     	; 0x2c40 <Animation2+0x5ee>
    2c66:	14 c0       	rjmp	.+40     	; 0x2c90 <Animation2+0x63e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c68:	6f 81       	ldd	r22, Y+7	; 0x07
    2c6a:	78 85       	ldd	r23, Y+8	; 0x08
    2c6c:	89 85       	ldd	r24, Y+9	; 0x09
    2c6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c70:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c74:	dc 01       	movw	r26, r24
    2c76:	cb 01       	movw	r24, r22
    2c78:	9e 83       	std	Y+6, r25	; 0x06
    2c7a:	8d 83       	std	Y+5, r24	; 0x05
    2c7c:	8d 81       	ldd	r24, Y+5	; 0x05
    2c7e:	9e 81       	ldd	r25, Y+6	; 0x06
    2c80:	9a 83       	std	Y+2, r25	; 0x02
    2c82:	89 83       	std	Y+1, r24	; 0x01
    2c84:	89 81       	ldd	r24, Y+1	; 0x01
    2c86:	9a 81       	ldd	r25, Y+2	; 0x02
    2c88:	01 97       	sbiw	r24, 0x01	; 1
    2c8a:	f1 f7       	brne	.-4      	; 0x2c88 <Animation2+0x636>
    2c8c:	9a 83       	std	Y+2, r25	; 0x02
    2c8e:	89 83       	std	Y+1, r24	; 0x01
     _delay_ms(500);

}
    2c90:	cc 5a       	subi	r28, 0xAC	; 172
    2c92:	df 4f       	sbci	r29, 0xFF	; 255
    2c94:	0f b6       	in	r0, 0x3f	; 63
    2c96:	f8 94       	cli
    2c98:	de bf       	out	0x3e, r29	; 62
    2c9a:	0f be       	out	0x3f, r0	; 63
    2c9c:	cd bf       	out	0x3d, r28	; 61
    2c9e:	cf 91       	pop	r28
    2ca0:	df 91       	pop	r29
    2ca2:	1f 91       	pop	r17
    2ca4:	0f 91       	pop	r16
    2ca6:	08 95       	ret

00002ca8 <Animation3>:
void Animation3()
{
    2ca8:	df 93       	push	r29
    2caa:	cf 93       	push	r28
    2cac:	cd b7       	in	r28, 0x3d	; 61
    2cae:	de b7       	in	r29, 0x3e	; 62
    2cb0:	6c 97       	sbiw	r28, 0x1c	; 28
    2cb2:	0f b6       	in	r0, 0x3f	; 63
    2cb4:	f8 94       	cli
    2cb6:	de bf       	out	0x3e, r29	; 62
    2cb8:	0f be       	out	0x3f, r0	; 63
    2cba:	cd bf       	out	0x3d, r28	; 61
	H_Led_void_setON(RED_LED);
    2cbc:	80 e0       	ldi	r24, 0x00	; 0
    2cbe:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
	H_Led_void_setON(BLU_LED);
    2cc2:	82 e0       	ldi	r24, 0x02	; 2
    2cc4:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
	H_Led_void_setON(GRN_LED);
    2cc8:	81 e0       	ldi	r24, 0x01	; 1
    2cca:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
    2cce:	80 e0       	ldi	r24, 0x00	; 0
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	aa ef       	ldi	r26, 0xFA	; 250
    2cd4:	b3 e4       	ldi	r27, 0x43	; 67
    2cd6:	89 8f       	std	Y+25, r24	; 0x19
    2cd8:	9a 8f       	std	Y+26, r25	; 0x1a
    2cda:	ab 8f       	std	Y+27, r26	; 0x1b
    2cdc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cde:	69 8d       	ldd	r22, Y+25	; 0x19
    2ce0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2ce2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ce4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ce6:	20 e0       	ldi	r18, 0x00	; 0
    2ce8:	30 e0       	ldi	r19, 0x00	; 0
    2cea:	4a e7       	ldi	r20, 0x7A	; 122
    2cec:	55 e4       	ldi	r21, 0x45	; 69
    2cee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cf2:	dc 01       	movw	r26, r24
    2cf4:	cb 01       	movw	r24, r22
    2cf6:	8d 8b       	std	Y+21, r24	; 0x15
    2cf8:	9e 8b       	std	Y+22, r25	; 0x16
    2cfa:	af 8b       	std	Y+23, r26	; 0x17
    2cfc:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2cfe:	6d 89       	ldd	r22, Y+21	; 0x15
    2d00:	7e 89       	ldd	r23, Y+22	; 0x16
    2d02:	8f 89       	ldd	r24, Y+23	; 0x17
    2d04:	98 8d       	ldd	r25, Y+24	; 0x18
    2d06:	20 e0       	ldi	r18, 0x00	; 0
    2d08:	30 e0       	ldi	r19, 0x00	; 0
    2d0a:	40 e8       	ldi	r20, 0x80	; 128
    2d0c:	5f e3       	ldi	r21, 0x3F	; 63
    2d0e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d12:	88 23       	and	r24, r24
    2d14:	2c f4       	brge	.+10     	; 0x2d20 <Animation3+0x78>
		__ticks = 1;
    2d16:	81 e0       	ldi	r24, 0x01	; 1
    2d18:	90 e0       	ldi	r25, 0x00	; 0
    2d1a:	9c 8b       	std	Y+20, r25	; 0x14
    2d1c:	8b 8b       	std	Y+19, r24	; 0x13
    2d1e:	3f c0       	rjmp	.+126    	; 0x2d9e <Animation3+0xf6>
	else if (__tmp > 65535)
    2d20:	6d 89       	ldd	r22, Y+21	; 0x15
    2d22:	7e 89       	ldd	r23, Y+22	; 0x16
    2d24:	8f 89       	ldd	r24, Y+23	; 0x17
    2d26:	98 8d       	ldd	r25, Y+24	; 0x18
    2d28:	20 e0       	ldi	r18, 0x00	; 0
    2d2a:	3f ef       	ldi	r19, 0xFF	; 255
    2d2c:	4f e7       	ldi	r20, 0x7F	; 127
    2d2e:	57 e4       	ldi	r21, 0x47	; 71
    2d30:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d34:	18 16       	cp	r1, r24
    2d36:	4c f5       	brge	.+82     	; 0x2d8a <Animation3+0xe2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d38:	69 8d       	ldd	r22, Y+25	; 0x19
    2d3a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d3c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d3e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d40:	20 e0       	ldi	r18, 0x00	; 0
    2d42:	30 e0       	ldi	r19, 0x00	; 0
    2d44:	40 e2       	ldi	r20, 0x20	; 32
    2d46:	51 e4       	ldi	r21, 0x41	; 65
    2d48:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d4c:	dc 01       	movw	r26, r24
    2d4e:	cb 01       	movw	r24, r22
    2d50:	bc 01       	movw	r22, r24
    2d52:	cd 01       	movw	r24, r26
    2d54:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d58:	dc 01       	movw	r26, r24
    2d5a:	cb 01       	movw	r24, r22
    2d5c:	9c 8b       	std	Y+20, r25	; 0x14
    2d5e:	8b 8b       	std	Y+19, r24	; 0x13
    2d60:	0f c0       	rjmp	.+30     	; 0x2d80 <Animation3+0xd8>
    2d62:	80 e9       	ldi	r24, 0x90	; 144
    2d64:	91 e0       	ldi	r25, 0x01	; 1
    2d66:	9a 8b       	std	Y+18, r25	; 0x12
    2d68:	89 8b       	std	Y+17, r24	; 0x11
    2d6a:	89 89       	ldd	r24, Y+17	; 0x11
    2d6c:	9a 89       	ldd	r25, Y+18	; 0x12
    2d6e:	01 97       	sbiw	r24, 0x01	; 1
    2d70:	f1 f7       	brne	.-4      	; 0x2d6e <Animation3+0xc6>
    2d72:	9a 8b       	std	Y+18, r25	; 0x12
    2d74:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d76:	8b 89       	ldd	r24, Y+19	; 0x13
    2d78:	9c 89       	ldd	r25, Y+20	; 0x14
    2d7a:	01 97       	sbiw	r24, 0x01	; 1
    2d7c:	9c 8b       	std	Y+20, r25	; 0x14
    2d7e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d80:	8b 89       	ldd	r24, Y+19	; 0x13
    2d82:	9c 89       	ldd	r25, Y+20	; 0x14
    2d84:	00 97       	sbiw	r24, 0x00	; 0
    2d86:	69 f7       	brne	.-38     	; 0x2d62 <Animation3+0xba>
    2d88:	14 c0       	rjmp	.+40     	; 0x2db2 <Animation3+0x10a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d8a:	6d 89       	ldd	r22, Y+21	; 0x15
    2d8c:	7e 89       	ldd	r23, Y+22	; 0x16
    2d8e:	8f 89       	ldd	r24, Y+23	; 0x17
    2d90:	98 8d       	ldd	r25, Y+24	; 0x18
    2d92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d96:	dc 01       	movw	r26, r24
    2d98:	cb 01       	movw	r24, r22
    2d9a:	9c 8b       	std	Y+20, r25	; 0x14
    2d9c:	8b 8b       	std	Y+19, r24	; 0x13
    2d9e:	8b 89       	ldd	r24, Y+19	; 0x13
    2da0:	9c 89       	ldd	r25, Y+20	; 0x14
    2da2:	98 8b       	std	Y+16, r25	; 0x10
    2da4:	8f 87       	std	Y+15, r24	; 0x0f
    2da6:	8f 85       	ldd	r24, Y+15	; 0x0f
    2da8:	98 89       	ldd	r25, Y+16	; 0x10
    2daa:	01 97       	sbiw	r24, 0x01	; 1
    2dac:	f1 f7       	brne	.-4      	; 0x2daa <Animation3+0x102>
    2dae:	98 8b       	std	Y+16, r25	; 0x10
    2db0:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(500);
	H_Led_void_setOFF(RED_LED);
    2db2:	80 e0       	ldi	r24, 0x00	; 0
    2db4:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
	H_Led_void_setOFF(BLU_LED);
    2db8:	82 e0       	ldi	r24, 0x02	; 2
    2dba:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
	H_Led_void_setOFF(GRN_LED);
    2dbe:	81 e0       	ldi	r24, 0x01	; 1
    2dc0:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
    2dc4:	80 e0       	ldi	r24, 0x00	; 0
    2dc6:	90 e0       	ldi	r25, 0x00	; 0
    2dc8:	aa ef       	ldi	r26, 0xFA	; 250
    2dca:	b3 e4       	ldi	r27, 0x43	; 67
    2dcc:	8b 87       	std	Y+11, r24	; 0x0b
    2dce:	9c 87       	std	Y+12, r25	; 0x0c
    2dd0:	ad 87       	std	Y+13, r26	; 0x0d
    2dd2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dd4:	6b 85       	ldd	r22, Y+11	; 0x0b
    2dd6:	7c 85       	ldd	r23, Y+12	; 0x0c
    2dd8:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dda:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ddc:	20 e0       	ldi	r18, 0x00	; 0
    2dde:	30 e0       	ldi	r19, 0x00	; 0
    2de0:	4a e7       	ldi	r20, 0x7A	; 122
    2de2:	55 e4       	ldi	r21, 0x45	; 69
    2de4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2de8:	dc 01       	movw	r26, r24
    2dea:	cb 01       	movw	r24, r22
    2dec:	8f 83       	std	Y+7, r24	; 0x07
    2dee:	98 87       	std	Y+8, r25	; 0x08
    2df0:	a9 87       	std	Y+9, r26	; 0x09
    2df2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2df4:	6f 81       	ldd	r22, Y+7	; 0x07
    2df6:	78 85       	ldd	r23, Y+8	; 0x08
    2df8:	89 85       	ldd	r24, Y+9	; 0x09
    2dfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    2dfc:	20 e0       	ldi	r18, 0x00	; 0
    2dfe:	30 e0       	ldi	r19, 0x00	; 0
    2e00:	40 e8       	ldi	r20, 0x80	; 128
    2e02:	5f e3       	ldi	r21, 0x3F	; 63
    2e04:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e08:	88 23       	and	r24, r24
    2e0a:	2c f4       	brge	.+10     	; 0x2e16 <Animation3+0x16e>
		__ticks = 1;
    2e0c:	81 e0       	ldi	r24, 0x01	; 1
    2e0e:	90 e0       	ldi	r25, 0x00	; 0
    2e10:	9e 83       	std	Y+6, r25	; 0x06
    2e12:	8d 83       	std	Y+5, r24	; 0x05
    2e14:	3f c0       	rjmp	.+126    	; 0x2e94 <Animation3+0x1ec>
	else if (__tmp > 65535)
    2e16:	6f 81       	ldd	r22, Y+7	; 0x07
    2e18:	78 85       	ldd	r23, Y+8	; 0x08
    2e1a:	89 85       	ldd	r24, Y+9	; 0x09
    2e1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e1e:	20 e0       	ldi	r18, 0x00	; 0
    2e20:	3f ef       	ldi	r19, 0xFF	; 255
    2e22:	4f e7       	ldi	r20, 0x7F	; 127
    2e24:	57 e4       	ldi	r21, 0x47	; 71
    2e26:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e2a:	18 16       	cp	r1, r24
    2e2c:	4c f5       	brge	.+82     	; 0x2e80 <Animation3+0x1d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e2e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e30:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e32:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e34:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e36:	20 e0       	ldi	r18, 0x00	; 0
    2e38:	30 e0       	ldi	r19, 0x00	; 0
    2e3a:	40 e2       	ldi	r20, 0x20	; 32
    2e3c:	51 e4       	ldi	r21, 0x41	; 65
    2e3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e42:	dc 01       	movw	r26, r24
    2e44:	cb 01       	movw	r24, r22
    2e46:	bc 01       	movw	r22, r24
    2e48:	cd 01       	movw	r24, r26
    2e4a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e4e:	dc 01       	movw	r26, r24
    2e50:	cb 01       	movw	r24, r22
    2e52:	9e 83       	std	Y+6, r25	; 0x06
    2e54:	8d 83       	std	Y+5, r24	; 0x05
    2e56:	0f c0       	rjmp	.+30     	; 0x2e76 <Animation3+0x1ce>
    2e58:	80 e9       	ldi	r24, 0x90	; 144
    2e5a:	91 e0       	ldi	r25, 0x01	; 1
    2e5c:	9c 83       	std	Y+4, r25	; 0x04
    2e5e:	8b 83       	std	Y+3, r24	; 0x03
    2e60:	8b 81       	ldd	r24, Y+3	; 0x03
    2e62:	9c 81       	ldd	r25, Y+4	; 0x04
    2e64:	01 97       	sbiw	r24, 0x01	; 1
    2e66:	f1 f7       	brne	.-4      	; 0x2e64 <Animation3+0x1bc>
    2e68:	9c 83       	std	Y+4, r25	; 0x04
    2e6a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e6c:	8d 81       	ldd	r24, Y+5	; 0x05
    2e6e:	9e 81       	ldd	r25, Y+6	; 0x06
    2e70:	01 97       	sbiw	r24, 0x01	; 1
    2e72:	9e 83       	std	Y+6, r25	; 0x06
    2e74:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e76:	8d 81       	ldd	r24, Y+5	; 0x05
    2e78:	9e 81       	ldd	r25, Y+6	; 0x06
    2e7a:	00 97       	sbiw	r24, 0x00	; 0
    2e7c:	69 f7       	brne	.-38     	; 0x2e58 <Animation3+0x1b0>
    2e7e:	14 c0       	rjmp	.+40     	; 0x2ea8 <Animation3+0x200>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e80:	6f 81       	ldd	r22, Y+7	; 0x07
    2e82:	78 85       	ldd	r23, Y+8	; 0x08
    2e84:	89 85       	ldd	r24, Y+9	; 0x09
    2e86:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e8c:	dc 01       	movw	r26, r24
    2e8e:	cb 01       	movw	r24, r22
    2e90:	9e 83       	std	Y+6, r25	; 0x06
    2e92:	8d 83       	std	Y+5, r24	; 0x05
    2e94:	8d 81       	ldd	r24, Y+5	; 0x05
    2e96:	9e 81       	ldd	r25, Y+6	; 0x06
    2e98:	9a 83       	std	Y+2, r25	; 0x02
    2e9a:	89 83       	std	Y+1, r24	; 0x01
    2e9c:	89 81       	ldd	r24, Y+1	; 0x01
    2e9e:	9a 81       	ldd	r25, Y+2	; 0x02
    2ea0:	01 97       	sbiw	r24, 0x01	; 1
    2ea2:	f1 f7       	brne	.-4      	; 0x2ea0 <Animation3+0x1f8>
    2ea4:	9a 83       	std	Y+2, r25	; 0x02
    2ea6:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(500);

}
    2ea8:	6c 96       	adiw	r28, 0x1c	; 28
    2eaa:	0f b6       	in	r0, 0x3f	; 63
    2eac:	f8 94       	cli
    2eae:	de bf       	out	0x3e, r29	; 62
    2eb0:	0f be       	out	0x3f, r0	; 63
    2eb2:	cd bf       	out	0x3d, r28	; 61
    2eb4:	cf 91       	pop	r28
    2eb6:	df 91       	pop	r29
    2eb8:	08 95       	ret

00002eba <main>:



#if (1)
int main()
{
    2eba:	df 93       	push	r29
    2ebc:	cf 93       	push	r28
    2ebe:	00 d0       	rcall	.+0      	; 0x2ec0 <main+0x6>
    2ec0:	0f 92       	push	r0
    2ec2:	cd b7       	in	r28, 0x3d	; 61
    2ec4:	de b7       	in	r29, 0x3e	; 62
	u8 i,j,k;
	H_SSD_void_init();
    2ec6:	0e 94 cd 08 	call	0x119a	; 0x119a <H_SSD_void_init>
	H_Led_void_ledInit(RED_LED);
    2eca:	80 e0       	ldi	r24, 0x00	; 0
    2ecc:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <H_Led_void_ledInit>
	H_Led_void_ledInit(BLU_LED);
    2ed0:	82 e0       	ldi	r24, 0x02	; 2
    2ed2:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <H_Led_void_ledInit>
	H_Led_void_ledInit(GRN_LED);
    2ed6:	81 e0       	ldi	r24, 0x01	; 1
    2ed8:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <H_Led_void_ledInit>
	while(1)
	{

	for(i=60;i>0;i--)
    2edc:	8c e3       	ldi	r24, 0x3C	; 60
    2ede:	8b 83       	std	Y+3, r24	; 0x03
    2ee0:	09 c0       	rjmp	.+18     	; 0x2ef4 <main+0x3a>
	{
		H_Led_void_setON(GRN_LED);
    2ee2:	81 e0       	ldi	r24, 0x01	; 1
    2ee4:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
		H_SSD_void_DisplayNumber(i);
    2ee8:	8b 81       	ldd	r24, Y+3	; 0x03
    2eea:	0e 94 06 09 	call	0x120c	; 0x120c <H_SSD_void_DisplayNumber>
	H_Led_void_ledInit(BLU_LED);
	H_Led_void_ledInit(GRN_LED);
	while(1)
	{

	for(i=60;i>0;i--)
    2eee:	8b 81       	ldd	r24, Y+3	; 0x03
    2ef0:	81 50       	subi	r24, 0x01	; 1
    2ef2:	8b 83       	std	Y+3, r24	; 0x03
    2ef4:	8b 81       	ldd	r24, Y+3	; 0x03
    2ef6:	88 23       	and	r24, r24
    2ef8:	a1 f7       	brne	.-24     	; 0x2ee2 <main+0x28>
		H_SSD_void_DisplayNumber(i);

		//_delay_ms(500);

	}
	H_Led_void_setOFF(GRN_LED);
    2efa:	81 e0       	ldi	r24, 0x01	; 1
    2efc:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>

	for(j=60;j>0;j--)
    2f00:	8c e3       	ldi	r24, 0x3C	; 60
    2f02:	8a 83       	std	Y+2, r24	; 0x02
    2f04:	09 c0       	rjmp	.+18     	; 0x2f18 <main+0x5e>
	{
		H_Led_void_setON(BLU_LED);
    2f06:	82 e0       	ldi	r24, 0x02	; 2
    2f08:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
		H_SSD_void_DisplayNumber(j);
    2f0c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f0e:	0e 94 06 09 	call	0x120c	; 0x120c <H_SSD_void_DisplayNumber>
		//_delay_ms(500);

	}
	H_Led_void_setOFF(GRN_LED);

	for(j=60;j>0;j--)
    2f12:	8a 81       	ldd	r24, Y+2	; 0x02
    2f14:	81 50       	subi	r24, 0x01	; 1
    2f16:	8a 83       	std	Y+2, r24	; 0x02
    2f18:	8a 81       	ldd	r24, Y+2	; 0x02
    2f1a:	88 23       	and	r24, r24
    2f1c:	a1 f7       	brne	.-24     	; 0x2f06 <main+0x4c>
		H_SSD_void_DisplayNumber(j);

		//_delay_ms(500);

	}
	H_Led_void_setOFF(BLU_LED);
    2f1e:	82 e0       	ldi	r24, 0x02	; 2
    2f20:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
	for(k=60;k>0;k--)
    2f24:	8c e3       	ldi	r24, 0x3C	; 60
    2f26:	89 83       	std	Y+1, r24	; 0x01
    2f28:	09 c0       	rjmp	.+18     	; 0x2f3c <main+0x82>
	{
		H_Led_void_setON(RED_LED);
    2f2a:	80 e0       	ldi	r24, 0x00	; 0
    2f2c:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <H_Led_void_setON>
		H_SSD_void_DisplayNumber(k);
    2f30:	89 81       	ldd	r24, Y+1	; 0x01
    2f32:	0e 94 06 09 	call	0x120c	; 0x120c <H_SSD_void_DisplayNumber>

		//_delay_ms(500);

	}
	H_Led_void_setOFF(BLU_LED);
	for(k=60;k>0;k--)
    2f36:	89 81       	ldd	r24, Y+1	; 0x01
    2f38:	81 50       	subi	r24, 0x01	; 1
    2f3a:	89 83       	std	Y+1, r24	; 0x01
    2f3c:	89 81       	ldd	r24, Y+1	; 0x01
    2f3e:	88 23       	and	r24, r24
    2f40:	a1 f7       	brne	.-24     	; 0x2f2a <main+0x70>
		H_SSD_void_DisplayNumber(k);

		//_delay_ms(500);

	}
	H_Led_void_setOFF(RED_LED);
    2f42:	80 e0       	ldi	r24, 0x00	; 0
    2f44:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <H_Led_void_setOFF>
    2f48:	c9 cf       	rjmp	.-110    	; 0x2edc <main+0x22>

00002f4a <__udivmodqi4>:
    2f4a:	99 1b       	sub	r25, r25
    2f4c:	79 e0       	ldi	r23, 0x09	; 9
    2f4e:	04 c0       	rjmp	.+8      	; 0x2f58 <__udivmodqi4_ep>

00002f50 <__udivmodqi4_loop>:
    2f50:	99 1f       	adc	r25, r25
    2f52:	96 17       	cp	r25, r22
    2f54:	08 f0       	brcs	.+2      	; 0x2f58 <__udivmodqi4_ep>
    2f56:	96 1b       	sub	r25, r22

00002f58 <__udivmodqi4_ep>:
    2f58:	88 1f       	adc	r24, r24
    2f5a:	7a 95       	dec	r23
    2f5c:	c9 f7       	brne	.-14     	; 0x2f50 <__udivmodqi4_loop>
    2f5e:	80 95       	com	r24
    2f60:	08 95       	ret

00002f62 <__prologue_saves__>:
    2f62:	2f 92       	push	r2
    2f64:	3f 92       	push	r3
    2f66:	4f 92       	push	r4
    2f68:	5f 92       	push	r5
    2f6a:	6f 92       	push	r6
    2f6c:	7f 92       	push	r7
    2f6e:	8f 92       	push	r8
    2f70:	9f 92       	push	r9
    2f72:	af 92       	push	r10
    2f74:	bf 92       	push	r11
    2f76:	cf 92       	push	r12
    2f78:	df 92       	push	r13
    2f7a:	ef 92       	push	r14
    2f7c:	ff 92       	push	r15
    2f7e:	0f 93       	push	r16
    2f80:	1f 93       	push	r17
    2f82:	cf 93       	push	r28
    2f84:	df 93       	push	r29
    2f86:	cd b7       	in	r28, 0x3d	; 61
    2f88:	de b7       	in	r29, 0x3e	; 62
    2f8a:	ca 1b       	sub	r28, r26
    2f8c:	db 0b       	sbc	r29, r27
    2f8e:	0f b6       	in	r0, 0x3f	; 63
    2f90:	f8 94       	cli
    2f92:	de bf       	out	0x3e, r29	; 62
    2f94:	0f be       	out	0x3f, r0	; 63
    2f96:	cd bf       	out	0x3d, r28	; 61
    2f98:	09 94       	ijmp

00002f9a <__epilogue_restores__>:
    2f9a:	2a 88       	ldd	r2, Y+18	; 0x12
    2f9c:	39 88       	ldd	r3, Y+17	; 0x11
    2f9e:	48 88       	ldd	r4, Y+16	; 0x10
    2fa0:	5f 84       	ldd	r5, Y+15	; 0x0f
    2fa2:	6e 84       	ldd	r6, Y+14	; 0x0e
    2fa4:	7d 84       	ldd	r7, Y+13	; 0x0d
    2fa6:	8c 84       	ldd	r8, Y+12	; 0x0c
    2fa8:	9b 84       	ldd	r9, Y+11	; 0x0b
    2faa:	aa 84       	ldd	r10, Y+10	; 0x0a
    2fac:	b9 84       	ldd	r11, Y+9	; 0x09
    2fae:	c8 84       	ldd	r12, Y+8	; 0x08
    2fb0:	df 80       	ldd	r13, Y+7	; 0x07
    2fb2:	ee 80       	ldd	r14, Y+6	; 0x06
    2fb4:	fd 80       	ldd	r15, Y+5	; 0x05
    2fb6:	0c 81       	ldd	r16, Y+4	; 0x04
    2fb8:	1b 81       	ldd	r17, Y+3	; 0x03
    2fba:	aa 81       	ldd	r26, Y+2	; 0x02
    2fbc:	b9 81       	ldd	r27, Y+1	; 0x01
    2fbe:	ce 0f       	add	r28, r30
    2fc0:	d1 1d       	adc	r29, r1
    2fc2:	0f b6       	in	r0, 0x3f	; 63
    2fc4:	f8 94       	cli
    2fc6:	de bf       	out	0x3e, r29	; 62
    2fc8:	0f be       	out	0x3f, r0	; 63
    2fca:	cd bf       	out	0x3d, r28	; 61
    2fcc:	ed 01       	movw	r28, r26
    2fce:	08 95       	ret

00002fd0 <_exit>:
    2fd0:	f8 94       	cli

00002fd2 <__stop_program>:
    2fd2:	ff cf       	rjmp	.-2      	; 0x2fd2 <__stop_program>
